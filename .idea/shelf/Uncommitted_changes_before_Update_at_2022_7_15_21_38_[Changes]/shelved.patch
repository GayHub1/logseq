Index: logseq/bak/pages/RabbitMQ/2022-07-05T14_50_37.928Z.md
===================================================================
diff --git a/logseq/bak/pages/RabbitMQ/2022-07-05T14_50_37.928Z.md b/logseq/bak/pages/RabbitMQ/2022-07-05T14_50_37.928Z.md
deleted file mode 100644
--- a/logseq/bak/pages/RabbitMQ/2022-07-05T14_50_37.928Z.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ /dev/null	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
@@ -1,1103 +0,0 @@
-- 基于 [[Erlang]] 的跨平台消息队列，天然具有高性能，使用[[AMQP]]协议提供客户端接口
-- RabbitMQ安装
-  collapsed:: true
-	- [[RabbitMQ Windows 安装]]
-	- [[RabbitMQ Linux 安装]]
-	- [[RabbitMQ Docker安装]]
-	- [[RabbitMQ Kubernetes安装]]
-- 命令行工具使用
-  collapsed:: true
-	- 状态
-	  collapsed:: true
-		- 查看状态
-			- ```sh
-			  rabbitmqctl status
-			  ```
-		- 查看绑定
-			- ```sh
-			  rabbitmqctl list_bindings
-			  ```
-		- 查看channel
-			- ```sh
-			  rabbitmqctl list_channels
-			  ```
-		- 查看connection
-			- ```sh
-			  rabbitmqctl list_connections
-			  ```
-		- 查看 消费者
-			- ```sh
-			  rabbitmqctl list_consumers
-			  ```
-		- 查看交换机
-			- ```sh
-			  rabbitmqctl list_exchanges
-			  ```
-	- 队列
-	  collapsed:: true
-		- 查看队列
-			- ```sh
-			  rabbitmqctl list_queues
-			  ```
-		- 删除队列
-			- ```sh
-			  rabbitmqctl delete_queue
-			  ```
-		- 清空队列
-			- ```sh
-			  rabbitmqctl purge_queuq
-			  ```
-	- 用户
-	  collapsed:: true
-		- 新建用户
-			- ```sh
-			  rabbitmqctl add_user
-			  ```
-		- 修改用户密码
-		- ```sh
-		  rabbitmqctl change_password
-		  ```
-		- 删除用户
-			- ```sh
-			  rabbitmqctl delete_user
-			  ```
-		- 查看用户
-			- ```sh
-			  rabbitmqctl list_users
-			  ```
-		- 设置用户角色
-			- ```sh
-			  rabbitmqctl rabbitmqctl set_user_tags
-			  ```
-		-
-	- 应用
-	  collapsed:: true
-		- 启动应用
-			- ```sh
-			  rabbitmqctl start_app
-			  ```
-		- 关闭应用,保留Erlang虚拟机（暂停）
-			- ```sh
-			  rabbitmqctl stop_app
-			  ```
-		- 关闭应用 并关闭Erlang虚拟机
-			- ```sh
-			  rabbitmqctl stop
-			  ```
-	- 集群
-	  collapsed:: true
-		- 加入集群
-			- ```sh
-			  rabbitmqctl join_cluster
-			  ```
-		- 离开集群
-		  collapsed:: true
-			- ```sh
-			  rabbitmqctl reset
-			  ```
-	- 镜像队列
-	  collapsed:: true
-		- 设置镜像队列
-			- ```sh
-			  rabbitmqctl sync_queue
-			  ```
-		- 取消镜像队列
-			- ```sh
-			  rabbitmqctl cancel_sync_queue
-			  ```
-- 集群
-  collapsed:: true
-	- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656731662352_0.png)
-	- 优势
-	  collapsed:: true
-		- 扩展规模
-		  collapsed:: true
-			- RabbitMQ集群可以方便地通过Scale-Out扩展规模
-		- 数据冗余
-		  collapsed:: true
-			- RabbitMQ集群可以通过镜像队列，将数据冗余至多个节点
-		- 高可用
-		  collapsed:: true
-			- RabbitMQ集群可以通过负载均衡，将请求转移至可用节点
-	- 原理
-	  collapsed:: true
-		- 多个RabbitMQ单节点，经过配置组成RabbitMQ集群
-		- 集群节点之间共享元数据，不共享队列数据（默认）
-		- RabbitMQ节点数据互相转发，客户端通过单一节点可以访问所有数据
-	- 搭建过程
-	  collapsed:: true
-		- [[RabbitMQ Linux 安装]]
-		- 镜像队列
-		  collapsed:: true
-			- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656782628235_0.png){:height 78, :width 529}
-				- **Definition**:策略定义
-					- ha-mode:指明镜像队列的模式
-					  collapsed:: true
-						- **all**:表示在集群中所有的节点上进行镜像
-						- **exactly**:表示在指定个数的节点上进行镜像，节点的个数由ha-params指定
-						- **nodes**:表示在指定的节点上进行镜像，节点名称通过ha-params指定
-					- ha-params:ha-mode模式需要用到的参数
-					- ha-sync-mode:进行队列中消息的同步方式，有效值为automatic和nanual
-			- 匹配所有队列，并将镜像配置到集群中的所有节点
-			  collapsed:: true
-				- ```sh
-				  rabbitmqctl set_policy ha-all "^" '{"ha-mode":"all"}'
-				  ```
-			- 名称以"two"开始的队列镜像到群集中的任意两个节点
-			  collapsed:: true
-				- ```sh
-				  rabbitmqctl set policy ha-two "Atwo." '{"ha-mode":"exactly","ha-params":2,"ha-sync-mode":"automatic"}'
-				  ```
-			- 以"node"开头的队列镜像到集群中的特定节点
-			  collapsed:: true
-				- ```sh
-				  rabbitmqctl set_policy ha-nodes "^nodes." '{"ha-mode":"nodes","ha-params":["rabbit@nodeA","rabbit@nodeeB"]}'
-				  ```
-		- 负载均衡
-			- 客户端负载均衡
-				- 直接在SpringBoot配置中设置多个地址
-					- ```sh
-					  spring.rabbitmq.addresses=127.0.0.1,127.0.0.2,127.0.0.3
-					  ```
-			- 服务段负载均衡 HAProxy+Keepalived
-			  collapsed:: true
-				- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656783407886_0.png){:height 328, :width 654}
-			- [[HAProxy]]
-			- [[Keepalived]]
-	- 集群间通信方式
-	  collapsed:: true
-		- Federation(联邦）
-			- 原理：通过AMQP协议，使用一个内部交换机，让原本发送到一个集群的消息转发至另一个集群(交换机->交换机;队列->队列)
-			- 设置方法
-				- 启用Federation插件
-				  collapsed:: true
-					- ```sh
-					  rabbitmq-plugins enable rabbitmq_federation_management
-					  ```
-				- 使用管控台具体配置Federation
-		- Shovel(铲子）
-			- Shovel可以持续地从一个broker拉取消息转发至另一个broker (交换机->交换机;队列->队列;队列->交换机)
-			- 设置方法
-				- 启用插件
-					- ```sh
-					  rabbitmq-plugins enable rabbitmq_shovel_management
-					  ```
-	- 网络分区处理方法
-	  collapsed:: true
-		- 手动处理
-		  collapsed:: true
-			- 挂起客户端进程
-			- 删除镜像队列配置
-			  collapsed:: true
-				- 如果没有删除镜像队列配置，恢复过程中可能会出现队列
-				  漂移”现象，从被切换成主
-			- 挑选信任的分区
-			  collapsed:: true
-				- 挑选的指标有：是否有disk节点/分区节点数/分区队列数/分区客户端连接数
-			- 关闭非信任区的节点
-			  collapsed:: true
-				- 采用rabbitmqctl stop_app命令，只关闭RabbitMQ应用，不会关闭ErLang虚拟机
-			- 启动非信任区的节点
-			  collapsed:: true
-				- 采用rabbitmqctl start_app命令
-			- 检查网络分区是否恢复
-			  collapsed:: true
-				- 恢复的话不用重启信任分区节点
-			- 重启信任分区节点
-			- 添加镜像队列配置
-			  collapsed:: true
-				-
-			- 恢复生产者与客户端
-		- 自动处理
-			- 开启自动处理
-			  collapsed:: true
-				- 如要开启，配置rabbitmq.config中的**cluster_parititon_handling**参数
-			- pause-minority
-			  collapsed:: true
-				- 发生网络分区时，节点自动检测自己是否处于少数派，若是则关闭自己
-				- 若出现了节点数相同的两个分区，可能会导致两个分区全部关闭
-			- pause-if-all-down
-			  collapsed:: true
-				- 每个节点预先配置一个节点列表，当失去和列表中所有节点的通信时，关闭自己
-				- 此方法考验配置的合理性，配置不合理可能会导致集群节点全部容机
-			- autoheal
-			  collapsed:: true
-				- 发生网络分区时，每个节点使用特定算法自动决定一个“获胜分区”，然后重启不在分区的其他节点
-				- 当节点中有关闭状态时，autoheal不会起作用
-	-
-- 状态监控
-  collapsed:: true
-	- 通过Java API判断节点是否健康
-	  collapsed:: true
-		- 使用Java应用创建connection与channel
-			- ```JAVA
-			  Connection connection=connectionFactory.newConnection();
-			  Channel channel = connection. createChannel();
-			  ```
-		- 若能创建成功，则节点健康，若创建失败（抛异常）则节点挂机或与节点的网络连接异常
-	- 通过HTTP Rest API监控集群状态
-		- 使用api/nodes/接口获得节点信息
-		- 使用api/exchanges/{vhost}/{name}/接口获得exchange状态信息
-		- 使用api/queues/{vhost}/{name}/接口获得queue状态信息
-	- 通过监控中间件监控RabbitMQ
-	  collapsed:: true
-		- Zabbix
-		- Prometheus
-- 业务中使用
-  collapsed:: true
-	- spring (spring-rabbit)
-	  collapsed:: true
-		- 依赖
-		  collapsed:: true
-			- ```gradle
-			  testImplementation 'org.springframework.amqp:spring-rabbit-test'
-			  ```
-		- 配置
-		  collapsed:: true
-			- ```yaml
-			  rabbitmq.host=localhost
-			  rabbitmq.port=5672
-			  rabbitmq.username=guest
-			  rabbitmq.password=guest
-			  ```
-		- 配置线程池
-		  collapsed:: true
-			- ```java
-			  @Configuration
-			  @EnableAsync
-			  public class AsyncTaskConfig implements AsyncConfigurer {
-			  
-			      // ThredPoolTaskExcutor的处理流程
-			      // 当池子大小小于corePoolSize，就新建线程，并处理请求
-			      // 当池子大小等于corePoolSize，把请求放入workQueue中，池子里的空闲线程就去workQueue中取任务并处理
-			      // 当workQueue放不下任务时，就新建线程入池，并处理请求，如果池子大小撑到了maximumPoolSize，就用RejectedExecutionHandler来做拒绝处理
-			      // 当池子的线程数大于corePoolSize时，多余的线程会等待keepAliveTime长时间，如果无请求可处理就自行销毁
-			  
-			      @Override
-			      @Bean
-			      public Executor getAsyncExecutor() {
-			          ThreadPoolTaskExecutor threadPool = new ThreadPoolTaskExecutor();
-			          //设置核心线程数
-			          threadPool.setCorePoolSize(10);
-			          //设置最大线程数
-			          threadPool.setMaxPoolSize(100);
-			          //线程池所使用的缓冲队列
-			          threadPool.setQueueCapacity(10);
-			          //等待任务在关机时完成--表明等待所有线程执行完
-			          threadPool.setWaitForTasksToCompleteOnShutdown(true);
-			          // 等待时间 （默认为0，此时立即停止），并没等待xx秒后强制停止
-			          threadPool.setAwaitTerminationSeconds(60);
-			          //  线程名称前缀
-			          threadPool.setThreadNamePrefix("Rabbit-Async-");
-			          // 初始化线程
-			          threadPool.initialize();
-			          return threadPool;
-			      }
-			  
-			      @Override
-			      public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {
-			          return null;
-			      }
-			  }
-			  ```
-		- 创建队列
-		  collapsed:: true
-			- Direct
-				- ```java
-				              channel.exchangeDeclare(
-				                      "exchange.order.restaurant",
-				                      BuiltinExchangeType.DIRECT,
-				                      true,
-				                      false,
-				                      null);
-				  
-				              channel.queueDeclare(
-				                      "queue.order",
-				                      true,
-				                      false,
-				                      false,
-				                      null);
-				  
-				              channel.queueBind(
-				                      "queue.order",
-				                      "exchange.order.restaurant",
-				                      "key.order");
-				  ```
-			- Fanout
-				- ```java
-				              channel.exchangeDeclare(
-				                      "exchange.settlement.order",
-				                      BuiltinExchangeType.FANOUT,
-				                      true,
-				                      false,
-				                      null);
-				  
-				              channel.queueDeclare(
-				                      "queue.order",
-				                      true,
-				                      false,
-				                      false,
-				                      null);
-				  
-				              channel.queueBind(
-				                      "queue.order",
-				                      "exchange.settlement.order",
-				                      "key.order");
-				  ```
-			- Topic
-				- ```java
-				              channel.exchangeDeclare(
-				                      "exchange.order.reward",
-				                      BuiltinExchangeType.TOPIC,
-				                      true,
-				                      false,
-				                      null);
-				  
-				              channel.queueDeclare(
-				                      "queue.order",
-				                      true,
-				                      false,
-				                      false,
-				                      null);
-				  
-				              channel.queueBind(
-				                      "queue.order",
-				                      "exchange.order.reward",
-				                      "key.order");
-				  ```
-		- 监听队列
-		  collapsed:: true
-			- ```java
-			      ObjectMapper objectMapper = new ObjectMapper();
-			  
-			      DeliverCallback deliverCallback = (consumerTag, message) -> {
-			          String messageBody = new String(message.getBody());
-			          log.info("deliverCallback:messageBody:{}", messageBody);
-			          ConnectionFactory connectionFactory = new ConnectionFactory();
-			          connectionFactory.setHost("localhost");
-			          try {
-			              OrderMessageDTO orderMessageDTO = objectMapper.readValue(messageBody,
-			                      OrderMessageDTO.class);
-			              List<DeliverymanPO> deliverymanPOS = deliverymanDao.selectAvaliableDeliveryman(DeliverymanStatus.AVALIABIE);
-			              orderMessageDTO.setDeliverymanId(deliverymanPOS.get(0).getId());
-			              log.info("onMessage:restaurantOrderMessageDTO:{}", orderMessageDTO);
-			  
-			              try (Connection connection = connectionFactory.newConnection();
-			                   Channel channel = connection.createChannel()) {
-			                  String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);
-			                  channel.basicPublish("exchange.order.restaurant", "key.order", null, messageToSend.getBytes());
-			              }
-			          } catch (JsonProcessingException | TimeoutException e) {
-			              e.printStackTrace();
-			          }
-			      };
-			  
-			  
-			  
-			  channel.basicConsume("queue.deliveryman", true, deliverCallback, consumerTag -> {
-			              });
-			  ```
-		- 发送消息
-		  collapsed:: true
-			- ```java
-			  try (Connection connection = connectionFactory.newConnection();
-			                               Channel channel = connection.createChannel()) {
-			                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);
-			                              channel.basicPublish("exchange.order.deliveryman", "key.deliveryman", null,
-			                                      messageToSend.getBytes());
-			                          }
-			  ```
-		- 启动监听
-		  collapsed:: true
-			- ```java
-			  @Slf4j
-			  @Configuration
-			  public class RabbitConfig {
-			  
-			      @Autowired
-			      OrderMessageService orderMessageService;
-			  
-			      @Autowired
-			      public void startListenMessage() throws IOException, TimeoutException, InterruptedException {
-			          orderMessageService.handleMessage();
-			      }
-			  }
-			  ```
-			- orderMessage
-				- ```java
-				  @Slf4j
-				  @Service
-				  public class OrderMessageService {
-				  
-				      @Value("${rabbitmq.exchange}")
-				      public String exchangeName;
-				      @Value("${rabbitmq.deliveryman-routing-key}")
-				      public String deliverymanRoutingKey;
-				      @Value("${rabbitmq.settlement-routing-key}")
-				      public String settlementRoutingKey;
-				      @Value("${rabbitmq.reward-routing-key}")
-				      public String rewardRoutingKey;
-				  
-				  
-				      @Autowired
-				      private OrderDetailDao orderDetailDao;
-				      ObjectMapper objectMapper = new ObjectMapper();
-				  
-				  
-				      @Async
-				      public void handleMessage() throws IOException, TimeoutException, InterruptedException {
-				          log.info("start linstening message");
-				          ConnectionFactory connectionFactory = new ConnectionFactory();
-				          connectionFactory.setHost("localhost");
-				          connectionFactory.setHost("localhost");
-				          try (Connection connection = connectionFactory.newConnection();
-				               Channel channel = connection.createChannel()) {
-				  		........
-				            } 
-				      }
-				  }
-				            
-				  ```
-	- springboot(spring-AMQP)
-	  collapsed:: true
-		- 优点
-		  collapsed:: true
-			- 异步消息监听容器
-			- 原生提供 RabbitTemplate,方便收发消息
-			- 原生提供RabbitAdmin,方便队列、交换机声明
-			- Spring Boot Config 原生支持RabbitMQ
-		- 依赖
-		  collapsed:: true
-			- ```yaml
-			  ```
-		- 利用RabbitAdmin快速配置
-		  collapsed:: true
-			- 手动配置
-			  collapsed:: true
-				- 在Config文件夹下添加RabbitConfig.java
-				  collapsed:: true
-					- ```java
-					  
-					  @Slf4j
-					  @Configuration
-					  public class RabbitConfig {
-					  
-					      @Autowired
-					      OrderMessageService orderMessageService;
-					  
-					      @Autowired
-					      public void startListenMessage() throws IOException, TimeoutException, InterruptedException {
-					          orderMessageService.handleMessage();
-					      }
-					  
-					      @Autowired
-					      public void initRabbit() {
-					          CachingConnectionFactory connectionFactory = new CachingConnectionFactory();
-					          connectionFactory.setHost("127.0.0.1");
-					          connectionFactory.setPort(5672);
-					          connectionFactory.setPassword("guest");
-					          connectionFactory.setUsername("guest");
-					  
-					          RabbitAdmin rabbitAdmin = new RabbitAdmin(connectionFactory);
-					  
-					          /*---------------------restaurant---------------------*/
-					          Exchange exchange = new DirectExchange("exchange.order.restaurant");
-					          rabbitAdmin.declareExchange(exchange);
-					  
-					          Queue queue = new Queue("queue.order");
-					          rabbitAdmin.declareQueue(queue);
-					  
-					          Binding binding = new Binding(
-					                  "queue.order",
-					                  Binding.DestinationType.QUEUE,
-					                  "exchange.order.restaurant",
-					                  "key.order",
-					                  null);
-					  
-					          rabbitAdmin.declareBinding(binding);
-					  
-					          /*---------------------deliveryman---------------------*/
-					          exchange = new DirectExchange("exchange.order.deliveryman");
-					          rabbitAdmin.declareExchange(exchange);
-					          binding = new Binding(
-					                  "queue.order",
-					                  Binding.DestinationType.QUEUE,
-					                  "exchange.order.deliveryman",
-					                  "key.order",
-					                  null);
-					          rabbitAdmin.declareBinding(binding);
-					  
-					  
-					          /*---------settlement---------*/
-					          exchange = new FanoutExchange("exchange.order.settlement");
-					          rabbitAdmin.declareExchange(exchange);
-					          exchange = new FanoutExchange("exchange.settlement.order");
-					          rabbitAdmin.declareExchange(exchange);
-					          binding = new Binding(
-					                  "queue.order",
-					                  Binding.DestinationType.QUEUE,
-					                  "exchange.order.settlement",
-					                  "key.order",
-					                  null);
-					          rabbitAdmin.declareBinding(binding);
-					  
-					  
-					          /*--------------reward----------------*/
-					          exchange = new TopicExchange("exchange.order.reward");
-					          rabbitAdmin.declareExchange(exchange);
-					          binding = new Binding(
-					                  "queue.order",
-					                  Binding.DestinationType.QUEUE,
-					                  "exchange.order.reward",
-					                  "key.order",
-					                  null);
-					          rabbitAdmin.declareBinding(binding);
-					      }
-					  }
-					  
-					  ```
-			- 声明式配置
-			  collapsed:: true
-				- ```java
-				  @Slf4j
-				  @Configuration
-				  public class RabbitConfig {
-				  
-				      @Autowired
-				      OrderMessageService orderMessageService;
-				  
-				      @Autowired
-				      public void startListenMessage() throws IOException, TimeoutException, InterruptedException {
-				          orderMessageService.handleMessage();
-				      }
-				  
-				  
-				      /*---------------------restaurant---------------------*/
-				      @Bean
-				      public Exchange exchange1() {
-				          return new DirectExchange("exchange.order.restaurant");
-				      }
-				  
-				      @Bean
-				      public Queue queue1() {
-				          return new Queue("queue.order");
-				      }
-				  
-				      @Bean
-				      public Binding binding1() {
-				          return new Binding(
-				                  "queue.order",
-				                  Binding.DestinationType.QUEUE,
-				                  "exchange.order.restaurant",
-				                  "key.order",
-				                  null);
-				      }
-				  
-				      /*---------------------deliveryman---------------------*/
-				      @Bean
-				      public Exchange exchange2() {
-				          return new DirectExchange("exchange.order.deliveryman");
-				      }
-				  
-				      @Bean
-				      public Binding binding2() {
-				          return new Binding(
-				                  "queue.order",
-				                  Binding.DestinationType.QUEUE,
-				                  "exchange.order.deliveryman",
-				                  "key.order",
-				                  null);
-				      }
-				  
-				  
-				      /*---------settlement---------*/
-				      @Bean
-				      public Exchange exchange3() {
-				          return new FanoutExchange("exchange.order.settlement");
-				      }
-				  
-				      @Bean
-				      public Exchange exchange4() {
-				          return new FanoutExchange("exchange.settlement.order");
-				      }
-				  
-				      @Bean
-				      public Binding binding3() {
-				          return new Binding(
-				                  "queue.order",
-				                  Binding.DestinationType.QUEUE,
-				                  "exchange.order.settlement",
-				                  "key.order",
-				                  null);
-				      }
-				  
-				      /*--------------reward----------------*/
-				      @Bean
-				      public Exchange exchange5() {
-				          return new TopicExchange("exchange.order.reward");
-				      }
-				  
-				      @Bean
-				      public Binding binding4() {
-				          return new Binding(
-				                  "queue.order",
-				                  Binding.DestinationType.QUEUE,
-				                  "exchange.order.reward",
-				                  "key.order",
-				                  null);
-				      }
-				  
-				      @Bean
-				      public ConnectionFactory connectionFactory() {
-				          CachingConnectionFactory connectionFactory = new CachingConnectionFactory();
-				          connectionFactory.setHost("127.0.0.1");
-				          connectionFactory.setPort(5672);
-				          connectionFactory.setPassword("guest");
-				          connectionFactory.setUsername("guest");
-				          connectionFactory.setPublisherConfirmType(CachingConnectionFactory.ConfirmType.SIMPLE);
-				          connectionFactory.setPublisherReturns(true);
-				          connectionFactory.createConnection();
-				          return connectionFactory;
-				      }
-				  
-				      @Bean
-				      public RabbitAdmin rabbitAdmin(ConnectionFactory connectionFactory) {
-				          RabbitAdmin admin = new RabbitAdmin(connectionFactory);
-				          admin.setAutoStartup(true);
-				          return admin;
-				      }
-				  
-				      @Bean
-				      RabbitTemplate rabbitTemplate(ConnectionFactory connectionFactory) {
-				          RabbitTemplate rabbitTemplate = new RabbitTemplate(connectionFactory);
-				          rabbitTemplate.setMandatory(true);
-				  
-				          rabbitTemplate.setConfirmCallback((correlationData, ack, cause) ->
-				                  log.info("correlationData:{}, ack:{}, cause{}",
-				                          correlationData,
-				                          ack,
-				                          cause));
-				          rabbitTemplate.setReturnCallback((message, replyCode, replyText, exchange, routingKey) ->
-				                  log.info(
-				                          "message:{}, replyCode:{}, replyText:{}, exchange:{}, routingKey{}",
-				                          message,
-				                          replyCode,
-				                          replyText,
-				                          exchange,
-				                          routingKey));
-				          return rabbitTemplate;
-				      }
-				    
-				    	/*
-				      *SimpleMessageListenerContainer 简单消息监听容器
-				      */  
-				    	@Bean
-				      public SimpleMessageListenerContainer messageListenerContainer(ConnectionFactory connectionFactory){
-				          SimpleMessageListenerContainer messageListenerContainer = new SimpleMessageListenerContainer(connectionFactory);
-				          messageListenerContainer.setQueueNames("queue.order");
-				          messageListenerContainer.setConcurrentConsumers(1);
-				          messageListenerContainer.setMaxConcurrentConsumers(3);
-				          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.AUTO);
-				          messageListenerContainer.setMessageListener(new MessageListener() {
-				              @Override
-				              public void onMessage(Message message) {
-				                  log.info("message:{}", message);
-				              }
-				          });
-				          messageListenerContainer.setPrefetchCount(2);
-				          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.MANUAL);
-				          messageListenerContainer.setMessageListener(new ChannelAwareMessageListener() {
-				              @Override
-				              public void onMessage(Message message, Channel channel) throws Exception {
-				                  channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);
-				              }
-				          });
-				          return messageListenerContainer;
-				      }
-				  }
-				  
-				  ```
-				-
-		- SimpleMessageListenerContainer 简单消息监听容器
-		  collapsed:: true
-			- ```java
-			    	/*
-			      *SimpleMessageListenerContainer 简单消息监听容器
-			      */  
-			    	@Bean
-			      public SimpleMessageListenerContainer messageListenerContainer(ConnectionFactory connectionFactory){
-			          SimpleMessageListenerContainer messageListenerContainer = new SimpleMessageListenerContainer(connectionFactory);
-			          messageListenerContainer.setQueueNames("queue.order");
-			          messageListenerContainer.setConcurrentConsumers(1);
-			          messageListenerContainer.setMaxConcurrentConsumers(3);
-			          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.AUTO);
-			          messageListenerContainer.setMessageListener(new MessageListener() {
-			              @Override
-			              public void onMessage(Message message) {
-			                  log.info("message:{}", message);
-			              }
-			          });
-			          messageListenerContainer.setPrefetchCount(2);
-			          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.MANUAL);
-			          messageListenerContainer.setMessageListener(new ChannelAwareMessageListener() {
-			              @Override
-			              public void onMessage(Message message, Channel channel) throws Exception {
-			                  channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);
-			              }
-			          });
-			          return messageListenerContainer;
-			      }
-			  ```
-			- MessageListenAdapter 自定义消息监听
-			  collapsed:: true
-				- 简单模式：实现handleMessage方法
-				- 高阶模式：自定义“队列名→方法名”映射关系
-				- ```java
-				          MessageListenerAdapter listenerAdapter = new MessageListenerAdapter();
-				          listenerAdapter.setDelegate(orderMessageService);
-				  
-				          Map<String, String> methodMap = new HashMap<>(8);
-				          methodMap.put("queue.order", "handleMessage1");
-				          listenerAdapter.setQueueOrTagToMethodName(methodMap);
-				          messageListenerContainer.setMessageListener(listenerAdapter);
-				  ```
-			- MessageConveter 用来在收发消息时自动转换消息
-			  collapsed:: true
-				- Byte[]数组作为消息体,转化为Java对象
-				- Jackson2JsonMessageConverter 转换Json格式
-					- 配合ClassMapper可以直接转换为POJO对象
-				- ```java
-				          MessageListenerAdapter messageListenerAdapter = new MessageListenerAdapter(orderMessageService);
-				          Jackson2JsonMessageConverter messageConverter = new Jackson2JsonMessageConverter();
-				          messageConverter.setClassMapper(new ClassMapper() {
-				              @Override
-				              public void fromClass(Class<?> clazz, MessageProperties properties) {
-				  
-				              }
-				  
-				              @Override
-				              public Class<?> toClass(MessageProperties properties) {
-				                  return OrderMessageDTO.class;
-				              }
-				          });
-				  
-				  //        messageConverter.setJavaTypeMapper(Jackson2JavaTypeMapper);
-				  
-				          messageListenerAdapter.setMessageConverter(messageConverter);
-				  ```
-		- 利用RabbitTemplate发送消息
-		  collapsed:: true
-			- ```java
-			          String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);
-			          MessageProperties messageProperties = new MessageProperties();
-			          messageProperties.setExpiration("15000");
-			          Message message = new Message(messageToSend.getBytes(), messageProperties);
-			          CorrelationData correlationData = new CorrelationData();
-			          correlationData.setId(orderPO.getId().toString());
-			          rabbitTemplate.send(
-			                  "exchange.order.restaurant",
-			                  "key.restaurant",
-			                  message,correlationData
-			          );
-			  
-			          rabbitTemplate.convertAndSend(
-			                  "exchange.order.restaurant",
-			                  "key.restaurant",
-			                  messageToSend,correlationData);
-			  
-			          //        rabbitTemplate.execute(channel -> {
-			          //            channel.abort();
-			          //            return null;
-			          //        });
-			  ```
-		- RabbitListener  是一个组合注解，对业务代码无侵入实现监听
-		  collapsed:: true
-			- RabbitListener 组合注解
-			  collapsed:: true
-				- @Exchange:自动声明Exchange
-				- @Queue:自动声明队列
-				- @QueueBinding:自动声明绑定关系
-			- 使用
-				- properties配置文件
-				  collapsed:: true
-					- ```properties
-					  spring.rabbitmq.username=guest
-					  spring.rabbitmq.password=guest
-					  spring.rabbitmq.addresses=127.0.0.1
-					  spring.rabbitmq.port=6379
-					  ```
-				- 业务代码使用
-				  collapsed:: true
-					- ```java
-					      @RabbitListener(
-					  //            containerFactory = "rabbitListenerContainerFactory",
-					  //            queues = "queue.order",
-					  //            admin = "rabbitAdmin",
-					              bindings = {
-					                      @QueueBinding(
-					                              value = @Queue(name = "${imooc.order-queue}",
-					                                      arguments = {
-					                                              //                                            @Argument(name =
-					                                              //                                            "x-message-ttl", value =
-					                                              //                                            "1000", type = "java.lang
-					                                              //                                            .Integer"),
-					                                              //                                            @Argument(name =
-					                                              //                                            "x-dead-letter-exchange",
-					                                              //                                            value = "aaaaa"),
-					                                              //                                            @Argument(name =
-					                                              //                                            "x-dead-letter-routing-key", value = "bbbb")
-					                                      }),
-					                              exchange = @Exchange(name = "exchange.order.restaurant", type = ExchangeTypes.DIRECT),
-					                              key = "key.order"
-					                      ),
-					                      @QueueBinding(
-					                              value = @Queue(name = "queue.order"),
-					                              exchange = @Exchange(name = "exchange.order.deliveryman", type = ExchangeTypes.DIRECT),
-					                              key = "key.order"
-					                      ),
-					                      @QueueBinding(
-					                              value = @Queue(name = "queue.order"),
-					                              exchange = @Exchange(name = "exchange.settlement.order", type = ExchangeTypes.FANOUT),
-					                              key = "key.order"
-					                      ),
-					                      @QueueBinding(
-					                              value = @Queue(name = "queue.order"),
-					                              exchange = @Exchange(name = "exchange.order.reward", type = ExchangeTypes.TOPIC),
-					                              key = "key.order"
-					                      )
-					              }
-					      )
-					      public void handleMessage(@Payload Message message) throws IOException {
-					          log.info("handleMessage:message:{}", new String(message.getBody()));
-					          ConnectionFactory connectionFactory = new ConnectionFactory();
-					          connectionFactory.setHost("localhost");
-					          try {
-					              OrderMessageDTO orderMessageDTO = objectMapper.readValue(message.getBody(),
-					                      OrderMessageDTO.class);
-					              OrderDetailPO orderPO = orderDetailDao.selectOrder(orderMessageDTO.getOrderId());
-					  
-					              switch (orderPO.getStatus()) {
-					  
-					                  case ORDER_CREATING:
-					                      if (orderMessageDTO.getConfirmed() && null != orderMessageDTO.getPrice()) {
-					                          orderPO.setStatus(OrderStatus.RESTAURANT_CONFIRMED);
-					                          orderPO.setPrice(orderMessageDTO.getPrice());
-					                          orderDetailDao.update(orderPO);
-					                          try (Connection connection = connectionFactory.newConnection();
-					                               Channel channel = connection.createChannel()) {
-					                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);
-					                              channel.basicPublish("exchange.order.deliveryman", "key.deliveryman", null,
-					                                      messageToSend.getBytes());
-					                          }
-					                      } else {
-					                          orderPO.setStatus(OrderStatus.FAILED);
-					                          orderDetailDao.update(orderPO);
-					                      }
-					                      break;
-					                  case RESTAURANT_CONFIRMED:
-					                      if (null != orderMessageDTO.getDeliverymanId()) {
-					                          orderPO.setStatus(OrderStatus.DELIVERYMAN_CONFIRMED);
-					                          orderPO.setDeliverymanId(orderMessageDTO.getDeliverymanId());
-					                          orderDetailDao.update(orderPO);
-					                          try (Connection connection = connectionFactory.newConnection();
-					                               Channel channel = connection.createChannel()) {
-					                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);
-					                              channel.basicPublish(
-					                                      "exchange.order.settlement",
-					                                      "key.settlement",
-					                                      null,
-					                                      messageToSend.getBytes()
-					                              );
-					                          }
-					                      } else {
-					                          orderPO.setStatus(OrderStatus.FAILED);
-					                          orderDetailDao.update(orderPO);
-					                      }
-					                      break;
-					                  case DELIVERYMAN_CONFIRMED:
-					                      if (null != orderMessageDTO.getSettlementId()) {
-					                          orderPO.setStatus(OrderStatus.SETTLEMENT_CONFIRMED);
-					                          orderPO.setSettlementId(orderMessageDTO.getSettlementId());
-					                          orderDetailDao.update(orderPO);
-					                          try (Connection connection = connectionFactory.newConnection();
-					                               Channel channel = connection.createChannel()) {
-					                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);
-					                              channel.basicPublish(
-					                                      "exchange.order.reward",
-					                                      "key.reward",
-					                                      null,
-					                                      messageToSend.getBytes()
-					                              );
-					                          }
-					  
-					                      } else {
-					                          orderPO.setStatus(OrderStatus.FAILED);
-					                          orderDetailDao.update(orderPO);
-					                      }
-					                      break;
-					                  case SETTLEMENT_CONFIRMED:
-					                      if (null != orderMessageDTO.getRewardId()) {
-					                          orderPO.setStatus(OrderStatus.ORDER_CREATED);
-					                          orderPO.setRewardId(orderMessageDTO.getRewardId());
-					                          orderDetailDao.update(orderPO);
-					                      } else {
-					                          orderPO.setStatus(OrderStatus.FAILED);
-					                          orderDetailDao.update(orderPO);
-					                      }
-					                      break;
-					              }
-					  
-					          } catch (JsonProcessingException | TimeoutException e) {
-					              e.printStackTrace();
-					          }
-					      }
-					  ```
-	- 保证消息可靠性
-	  collapsed:: true
-		- 发送端确认机制 （发送是否成功）
-		  collapsed:: true
-			- > 慎用
-			- 配置channel，确认开启模式
-			  collapsed:: true
-				- ```java
-				  channel.confirmSelect();
-				  ```
-			- 单条同步确认 (推荐)
-				- 每发送一条消息，调用**channel.waitForConfirms()**方法，等待确认
-			- 多条同步确认
-				- 发送多条消息后，调用**channel.waitForConfirms()**方法，等待确认
-			- 异步确认
-				- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656334192845_0.png)
-				- 在channel上添加监听：**addConfirmListener**,发送消息后，会回调此方法，通知是否发送成功
-				- > 异步确认有可能是单条，也有可能是多条，取决于MQ
-				- > 异步回调在一个新的线程，所以数据隔离且有并发问题（因为channel不同，所以deliverTag可能重复）。
-		- 消息返回机制 （消息是否被路由）
-		  collapsed:: true
-			- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656334924326_0.png)
-			- 原理：Exchange在没有找到路由时候调用回调机制
-			- 发送消息时候 mandatory设为true
-				- ```java
-				                  channel.basicPublish("exchange.order.restaurant", "key.order",true, null, messageToSend.getBytes());
-				  ```
-			- 设置异步回调
-			  collapsed:: true
-				- ```java
-				                  channel.addReturnListener(new ReturnCallback() {
-				                      @Override
-				                      public void handle(Return returnMessage) {
-				                          log.info("Message Return: returnMessage:{}", returnMessage);
-				                      }
-				                  });
-				  ```
-				-
-		- 消费端确认  ACK
-		  collapsed:: true
-			- 监听消息时关闭自动ACK，使用手动ACK。
-				- 下面第二个参数为false
-				- ```java
-				  this.channel.basicConsume("queue.restaurant", false, deliverCallback, consumerTag -> {});
-				  ```
-			- 监听消费时手动ack
-			  collapsed:: true
-				- ```java
-				  channel.basicAck(message.getEnvelope().getDeliveryTag(),true);}
-				  ```
-			- > NACK慎用
-		- 消费端限流 QoS
-		  collapsed:: true
-			- 前提：不使用自动确认
-			- ```java
-			  channel.basicQos(2)
-			  ```
-			-
-			-
-		- 消息过期机制 ttl
-		  collapsed:: true
-			- > 消息ttl 长于业务高峰期时间 与 服务的平均重启时间
-			- 设置单条消息TTL
-			  collapsed:: true
-				- ```java
-				  AMQP.BasicProperties properties = new AMQP.BasicProperties.Builder().expiration("100000").build();
-				  ```
-				- ```java
-				  channel.basicPublish("exchange.order.deliveryman", "key.deliveryman", properties,
-				                                      messageToSend.getBytes());
-				  ```
-			- 设置队列TTL
-				- ```java
-				  Map<String, Object> args = new HashMap<String, Object>();
-				  args.put("x-message-ttl", 10000);
-				  ```
-				- 创建队列时将参数赋值进去
-					- ```java
-					              channel.exchangeDeclare(
-					                      "exchange.order.restaurant",
-					                      BuiltinExchangeType.DIRECT,
-					                      true,
-					                      false,
-					                      args);
-					  ```
-		- 死信队列
-		  collapsed:: true
-			- ![image.png](../assets/image_1656341513805_0.png)
-			- 一个被配置了**DLX**属性的队列，收集ttl过期消息，以供分析
-			- 怎么变成死信
-			  collapsed:: true
-				- 消息被拒绝
-				- 消息过期
-				- 队列达到最大长度
-			- 设置Exchange
-			  collapsed:: true
-				- 命名规范（非强制的）
-				  collapsed:: true
-					- Exchange：dlx.exchange
-					- Queue:dlx.queue
-					- RoutingKey: #
-				- 队列添加参数
-					- x-dead-letter-exchange = dlx.exchange
-					- ```java
-					  // 声明死信交换机
-					          channel.exchangeDeclare(
-					                  "exchange.dlx",
-					                  BuiltinExchangeType.TOPIC,
-					                  true,
-					                  false,
-					                  null);
-					  // 声明死信队列
-					          channel.queueDeclare(
-					                  "queue.dlx",
-					                  true,
-					                  false,
-					                  false,
-					                  null);
-					  // 声明死信绑定
-					          channel.queueBind(
-					                  "queue.dlx",
-					                  "exchange.dlx",
-					                  "#");
-					  
-					  //声明队列时，携带以下参数：
-					  
-					              Map<String, Object> args = new HashMap<>(16);
-					              args.put("x-dead-letter-exchange", "exchange.dlx");
-					              args.put("x-max-length", 10);
-					  //创建队列时将参数赋值进去
-					              channel.exchangeDeclare(
-					                      "exchange.order.restaurant",
-					                      BuiltinExchangeType.DIRECT,
-					                      true,
-					                      false,
-					                      args);
-					  ```
-			-
-- 业务开发建议
-  collapsed:: true
-	- 一个业务对应一个exchange
-	- 将创建交换机/队列的操作固化在应用代码中，免去复杂的
-	  运维操作，高效且不易出错
-	- 一般来说，交换机由双方同时声明，队列由接收方声明并配
-	  置绑定关系
-	- 交换机/队列的参数一定要由双方开发团队确认，否则重复
-	  声明时，若参数不一致，会导致声明失败
--
--
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022_7_9_10_07__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_7_9_10_07__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022_7_9_10_07__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_7_9_10_07__Changes_.xml	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ /dev/null	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2022_7_9_10_07_[Changes]" date="1657332446791" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_7_9_10_07_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022/7/9 10:07 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="logseq/bak/logseq/config/2022-06-29T13_33_36.369Z.edn" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: pages/Spring-Data-ElasticSearch 使用记录.md.md
===================================================================
diff --git a/pages/Spring-Data-ElasticSearch 使用记录.md.md b/pages/Spring-Data-ElasticSearch 使用记录.md.md
deleted file mode 100644
--- a/pages/Spring-Data-ElasticSearch 使用记录.md.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ /dev/null	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
@@ -1,2 +0,0 @@
--
--
\ No newline at end of file
Index: logseq/bak/journals/2022-07-02/2022-07-11T14_37_47.643Z.md
===================================================================
diff --git a/logseq/bak/journals/2022-07-02/2022-07-11T14_37_47.643Z.md b/logseq/bak/journals/2022-07-02/2022-07-11T14_37_47.643Z.md
deleted file mode 100644
--- a/logseq/bak/journals/2022-07-02/2022-07-11T14_37_47.643Z.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ /dev/null	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
@@ -1,10 +0,0 @@
-- DONE [[Learn Python in Y Minutes]] 阅读 #2022-OKR-O2-KR-4
-- NOW [[写给程序员的机器学习入门]]  [:progress {:max 13:value 2}] #2022-OKR-O2-KR-4
-  :LOGBOOK:
-  CLOCK: [2022-07-06 Wed 11:45:47]
-  :END:
-- LATER 了解[[werf]] #2022-OKR-O2-KR-4
-- DONE 体验[[apkstudio]] #2022-OKR-O2-KR-4
-- LATER 体验[[godeng] #2022-OKR-O2-KR-4
-- ~~LATER 体验[[Medis]]~~
-- 学习网站 [educative](https://www.educative.io/learn) #2022-OKR-O2-KR-4
\ No newline at end of file
Index: logseq/bak/journals/2022-07-06/2022-07-11T14_37_47.641Z.md
===================================================================
diff --git a/logseq/bak/journals/2022-07-06/2022-07-11T14_37_47.641Z.md b/logseq/bak/journals/2022-07-06/2022-07-11T14_37_47.641Z.md
deleted file mode 100644
--- a/logseq/bak/journals/2022-07-06/2022-07-11T14_37_47.641Z.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ /dev/null	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
@@ -1,15 +0,0 @@
-- LATER [[企业附件存储系统]]文档编写
-- NOW 入门 [[Kubernetes]] [:progress {:max 8:value 2}] #2022-OKR-O2-KR-1
-  :LOGBOOK:
-  CLOCK: [2022-07-06 Wed 21:26:33]--[2022-07-07 Thu 08:50:14] =>  11:23:41
-  CLOCK: [2022-07-07 Thu 08:50:14]
-  :END:
-- DONE [[pytorch]]
-  :LOGBOOK:
-  CLOCK: [2022-07-06 Wed 21:26:39]--[2022-07-06 Wed 21:26:40] =>  00:00:01
-  :END:
-- DONE [[Ubuntu 20.04 live server安装]]
-  :LOGBOOK:
-  CLOCK: [2022-07-06 Wed 11:46:25]--[2022-07-06 Wed 11:46:26] =>  00:00:01
-  :END:
--
\ No newline at end of file
Index: logseq/bak/journals/2022-06-21/2022-07-11T14_37_47.624Z.md
===================================================================
diff --git a/logseq/bak/journals/2022-06-21/2022-07-11T14_37_47.624Z.md b/logseq/bak/journals/2022-06-21/2022-07-11T14_37_47.624Z.md
deleted file mode 100644
--- a/logseq/bak/journals/2022-06-21/2022-07-11T14_37_47.624Z.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ /dev/null	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
@@ -1,8 +0,0 @@
-- DONE logstash json转换bug
-  :LOGBOOK:
-  CLOCK: [2022-06-21 Tue 09:10:44]--[2022-06-22 Wed 08:34:25] =>  23:23:41
-  :END:
-- DONE 统计功能测试
-  :LOGBOOK:
-  CLOCK: [2022-06-21 Tue 09:10:44]--[2022-06-29 Wed 09:03:01] =>  191:52:17
-  :END:
\ No newline at end of file
Index: logseq/bak/journals/2022-06-20/2022-07-11T14_37_47.596Z.md
===================================================================
diff --git a/logseq/bak/journals/2022-06-20/2022-07-11T14_37_47.596Z.md b/logseq/bak/journals/2022-06-20/2022-07-11T14_37_47.596Z.md
deleted file mode 100644
--- a/logseq/bak/journals/2022-06-20/2022-07-11T14_37_47.596Z.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ /dev/null	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
@@ -1,14 +0,0 @@
-- [[eureka 常用api]]
-- DONE [[迁移旧笔记]]
-  :LOGBOOK:
-  CLOCK: [2022-06-20 Mon 11:42:11]--[2022-06-20 Mon 14:57:05] =>  03:14:54
-  :END:
-- DONE [[电脑配置单]]
-- LATER [[凤凰架构]]笔记迁移与回顾 [[Tue, 06/21/2022]]
-  :LOGBOOK:
-  CLOCK: [2022-06-23 Thu 13:12:39]--[2022-06-23 Thu 15:49:49] =>  02:37:10
-  :END:
-- LATER [[Elasticsearch 安装与入门]] 第一章回顾 [[Tue, 06/21/2022]]
-- LATER [[Redis]] 回顾 [[Tue, 06/21/2022]]
-- [[Typora]]  #tools
--
\ No newline at end of file
Index: pages/RabbitMQ.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>- 简介\r\n  collapsed:: true\r\n\t- 基于 [[Erlang]] 的跨平台消息队列，天然具有高性能，使用[[AMQP]]协议提供客户端接口\r\n- RabbitMQ安装\r\n  collapsed:: true\r\n\t- [[RabbitMQ Windows 安装]]\r\n\t- [[RabbitMQ Linux 安装]]\r\n\t- [[RabbitMQ Docker安装]]\r\n\t- [[RabbitMQ Kubernetes安装]]\r\n- 命令行工具使用\r\n  collapsed:: true\r\n\t- 状态\r\n\t\t- 查看状态\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl status\r\n\t\t\t  ```\r\n\t\t- 查看绑定\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl list_bindings\r\n\t\t\t  ```\r\n\t\t- 查看channel\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl list_channels\r\n\t\t\t  ```\r\n\t\t- 查看connection\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl list_connections\r\n\t\t\t  ```\r\n\t\t- 查看 消费者\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl list_consumers\r\n\t\t\t  ```\r\n\t\t- 查看交换机\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl list_exchanges\r\n\t\t\t  ```\r\n\t- 队列\r\n\t  collapsed:: true\r\n\t\t- 查看队列\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl list_queues\r\n\t\t\t  ```\r\n\t\t- 删除队列\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl delete_queue\r\n\t\t\t  ```\r\n\t\t- 清空队列\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl purge_queuq\r\n\t\t\t  ```\r\n\t- 用户\r\n\t  collapsed:: true\r\n\t\t- 新建用户\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl add_user\r\n\t\t\t  ```\r\n\t\t- 修改用户密码\r\n\t\t- ```sh\r\n\t\t  rabbitmqctl change_password\r\n\t\t  ```\r\n\t\t- 删除用户\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl delete_user\r\n\t\t\t  ```\r\n\t\t- 查看用户\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl list_users\r\n\t\t\t  ```\r\n\t\t- 设置用户角色\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl rabbitmqctl set_user_tags\r\n\t\t\t  ```\r\n\t\t-\r\n\t- 应用\r\n\t  collapsed:: true\r\n\t\t- 启动应用\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl start_app\r\n\t\t\t  ```\r\n\t\t- 关闭应用,保留Erlang虚拟机（暂停）\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl stop_app\r\n\t\t\t  ```\r\n\t\t- 关闭应用 并关闭Erlang虚拟机\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl stop\r\n\t\t\t  ```\r\n\t- 集群\r\n\t\t- 加入集群\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl join_cluster\r\n\t\t\t  ```\r\n\t\t- 离开集群\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl reset\r\n\t\t\t  ```\r\n\t- 镜像队列\r\n\t  collapsed:: true\r\n\t\t- 设置镜像队列\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl sync_queue\r\n\t\t\t  ```\r\n\t\t- 取消镜像队列\r\n\t\t\t- ```sh\r\n\t\t\t  rabbitmqctl cancel_sync_queue\r\n\t\t\t  ```\r\n- 集群\r\n  collapsed:: true\r\n\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656731662352_0.png)\r\n\t- 优势\r\n\t  collapsed:: true\r\n\t\t- 扩展规模\r\n\t\t  collapsed:: true\r\n\t\t\t- RabbitMQ集群可以方便地通过Scale-Out扩展规模\r\n\t\t- 数据冗余\r\n\t\t  collapsed:: true\r\n\t\t\t- RabbitMQ集群可以通过镜像队列，将数据冗余至多个节点\r\n\t\t- 高可用\r\n\t\t  collapsed:: true\r\n\t\t\t- RabbitMQ集群可以通过负载均衡，将请求转移至可用节点\r\n\t- 原理\r\n\t  collapsed:: true\r\n\t\t- 多个RabbitMQ单节点，经过配置组成RabbitMQ集群\r\n\t\t- 集群节点之间共享元数据，不共享队列数据（默认）\r\n\t\t- RabbitMQ节点数据互相转发，客户端通过单一节点可以访问所有数据\r\n\t- 搭建过程\r\n\t  collapsed:: true\r\n\t\t- [[RabbitMQ Linux 安装]]\r\n\t\t- 镜像队列\r\n\t\t  collapsed:: true\r\n\t\t\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656782628235_0.png){:height 78, :width 529}\r\n\t\t\t\t- **Definition**:策略定义\r\n\t\t\t\t\t- ha-mode:指明镜像队列的模式\r\n\t\t\t\t\t  collapsed:: true\r\n\t\t\t\t\t\t- **all**:表示在集群中所有的节点上进行镜像\r\n\t\t\t\t\t\t- **exactly**:表示在指定个数的节点上进行镜像，节点的个数由ha-params指定\r\n\t\t\t\t\t\t- **nodes**:表示在指定的节点上进行镜像，节点名称通过ha-params指定\r\n\t\t\t\t\t- ha-params:ha-mode模式需要用到的参数\r\n\t\t\t\t\t- ha-sync-mode:进行队列中消息的同步方式，有效值为automatic和nanual\r\n\t\t\t- 匹配所有队列，并将镜像配置到集群中的所有节点\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  rabbitmqctl set_policy ha-all \"^\" '{\"ha-mode\":\"all\"}'\r\n\t\t\t\t  ```\r\n\t\t\t- 名称以\"two\"开始的队列镜像到群集中的任意两个节点\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  rabbitmqctl set policy ha-two \"Atwo.\" '{\"ha-mode\":\"exactly\",\"ha-params\":2,\"ha-sync-mode\":\"automatic\"}'\r\n\t\t\t\t  ```\r\n\t\t\t- 以\"node\"开头的队列镜像到集群中的特定节点\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  rabbitmqctl set_policy ha-nodes \"^nodes.\" '{\"ha-mode\":\"nodes\",\"ha-params\":[\"rabbit@nodeA\",\"rabbit@nodeeB\"]}'\r\n\t\t\t\t  ```\r\n\t\t- 负载均衡\r\n\t\t\t- 客户端负载均衡\r\n\t\t\t\t- 直接在SpringBoot配置中设置多个地址\r\n\t\t\t\t\t- ```sh\r\n\t\t\t\t\t  spring.rabbitmq.addresses=127.0.0.1,127.0.0.2,127.0.0.3\r\n\t\t\t\t\t  ```\r\n\t\t\t- 服务段负载均衡 HAProxy+Keepalived\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656783407886_0.png){:height 328, :width 654}\r\n\t\t\t- [[HAProxy]]\r\n\t\t\t- [[Keepalived]]\r\n\t- 集群间通信方式\r\n\t  collapsed:: true\r\n\t\t- Federation(联邦）\r\n\t\t\t- 原理：通过AMQP协议，使用一个内部交换机，让原本发送到一个集群的消息转发至另一个集群(交换机->交换机;队列->队列)\r\n\t\t\t- 设置方法\r\n\t\t\t\t- 启用Federation插件\r\n\t\t\t\t  collapsed:: true\r\n\t\t\t\t\t- ```sh\r\n\t\t\t\t\t  rabbitmq-plugins enable rabbitmq_federation_management\r\n\t\t\t\t\t  ```\r\n\t\t\t\t- 使用管控台具体配置Federation\r\n\t\t- Shovel(铲子）\r\n\t\t\t- Shovel可以持续地从一个broker拉取消息转发至另一个broker (交换机->交换机;队列->队列;队列->交换机)\r\n\t\t\t- 设置方法\r\n\t\t\t\t- 启用插件\r\n\t\t\t\t\t- ```sh\r\n\t\t\t\t\t  rabbitmq-plugins enable rabbitmq_shovel_management\r\n\t\t\t\t\t  ```\r\n\t- 网络分区处理方法\r\n\t  collapsed:: true\r\n\t\t- 手动处理\r\n\t\t  collapsed:: true\r\n\t\t\t- 挂起客户端进程\r\n\t\t\t- 删除镜像队列配置\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 如果没有删除镜像队列配置，恢复过程中可能会出现队列\r\n\t\t\t\t  漂移”现象，从被切换成主\r\n\t\t\t- 挑选信任的分区\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 挑选的指标有：是否有disk节点/分区节点数/分区队列数/分区客户端连接数\r\n\t\t\t- 关闭非信任区的节点\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 采用rabbitmqctl stop_app命令，只关闭RabbitMQ应用，不会关闭ErLang虚拟机\r\n\t\t\t- 启动非信任区的节点\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 采用rabbitmqctl start_app命令\r\n\t\t\t- 检查网络分区是否恢复\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 恢复的话不用重启信任分区节点\r\n\t\t\t- 重启信任分区节点\r\n\t\t\t- 添加镜像队列配置\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t-\r\n\t\t\t- 恢复生产者与客户端\r\n\t\t- 自动处理\r\n\t\t\t- 开启自动处理\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 如要开启，配置rabbitmq.config中的**cluster_parititon_handling**参数\r\n\t\t\t- pause-minority\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 发生网络分区时，节点自动检测自己是否处于少数派，若是则关闭自己\r\n\t\t\t\t- 若出现了节点数相同的两个分区，可能会导致两个分区全部关闭\r\n\t\t\t- pause-if-all-down\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 每个节点预先配置一个节点列表，当失去和列表中所有节点的通信时，关闭自己\r\n\t\t\t\t- 此方法考验配置的合理性，配置不合理可能会导致集群节点全部容机\r\n\t\t\t- autoheal\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 发生网络分区时，每个节点使用特定算法自动决定一个“获胜分区”，然后重启不在分区的其他节点\r\n\t\t\t\t- 当节点中有关闭状态时，autoheal不会起作用\r\n\t-\r\n- 状态监控\r\n  collapsed:: true\r\n\t- 通过Java API判断节点是否健康\r\n\t  collapsed:: true\r\n\t\t- 使用Java应用创建connection与channel\r\n\t\t\t- ```JAVA\r\n\t\t\t  Connection connection=connectionFactory.newConnection();\r\n\t\t\t  Channel channel = connection. createChannel();\r\n\t\t\t  ```\r\n\t\t- 若能创建成功，则节点健康，若创建失败（抛异常）则节点挂机或与节点的网络连接异常\r\n\t- 通过HTTP Rest API监控集群状态\r\n\t  collapsed:: true\r\n\t\t- 使用api/nodes/接口获得节点信息\r\n\t\t- 使用api/exchanges/{vhost}/{name}/接口获得exchange状态信息\r\n\t\t- 使用api/queues/{vhost}/{name}/接口获得queue状态信息\r\n\t- 通过监控中间件监控RabbitMQ\r\n\t  collapsed:: true\r\n\t\t- Zabbix\r\n\t\t- Prometheus\r\n- 业务中使用\r\n  collapsed:: true\r\n\t- spring (spring-rabbit)\r\n\t  collapsed:: true\r\n\t\t- 依赖\r\n\t\t  collapsed:: true\r\n\t\t\t- ```gradle\r\n\t\t\t  testImplementation 'org.springframework.amqp:spring-rabbit-test'\r\n\t\t\t  ```\r\n\t\t- 配置\r\n\t\t  collapsed:: true\r\n\t\t\t- ```yaml\r\n\t\t\t  rabbitmq.host=localhost\r\n\t\t\t  rabbitmq.port=5672\r\n\t\t\t  rabbitmq.username=guest\r\n\t\t\t  rabbitmq.password=guest\r\n\t\t\t  ```\r\n\t\t- 配置线程池\r\n\t\t  collapsed:: true\r\n\t\t\t- ```java\r\n\t\t\t  @Configuration\r\n\t\t\t  @EnableAsync\r\n\t\t\t  public class AsyncTaskConfig implements AsyncConfigurer {\r\n\t\t\t  \r\n\t\t\t      // ThredPoolTaskExcutor的处理流程\r\n\t\t\t      // 当池子大小小于corePoolSize，就新建线程，并处理请求\r\n\t\t\t      // 当池子大小等于corePoolSize，把请求放入workQueue中，池子里的空闲线程就去workQueue中取任务并处理\r\n\t\t\t      // 当workQueue放不下任务时，就新建线程入池，并处理请求，如果池子大小撑到了maximumPoolSize，就用RejectedExecutionHandler来做拒绝处理\r\n\t\t\t      // 当池子的线程数大于corePoolSize时，多余的线程会等待keepAliveTime长时间，如果无请求可处理就自行销毁\r\n\t\t\t  \r\n\t\t\t      @Override\r\n\t\t\t      @Bean\r\n\t\t\t      public Executor getAsyncExecutor() {\r\n\t\t\t          ThreadPoolTaskExecutor threadPool = new ThreadPoolTaskExecutor();\r\n\t\t\t          //设置核心线程数\r\n\t\t\t          threadPool.setCorePoolSize(10);\r\n\t\t\t          //设置最大线程数\r\n\t\t\t          threadPool.setMaxPoolSize(100);\r\n\t\t\t          //线程池所使用的缓冲队列\r\n\t\t\t          threadPool.setQueueCapacity(10);\r\n\t\t\t          //等待任务在关机时完成--表明等待所有线程执行完\r\n\t\t\t          threadPool.setWaitForTasksToCompleteOnShutdown(true);\r\n\t\t\t          // 等待时间 （默认为0，此时立即停止），并没等待xx秒后强制停止\r\n\t\t\t          threadPool.setAwaitTerminationSeconds(60);\r\n\t\t\t          //  线程名称前缀\r\n\t\t\t          threadPool.setThreadNamePrefix(\"Rabbit-Async-\");\r\n\t\t\t          // 初始化线程\r\n\t\t\t          threadPool.initialize();\r\n\t\t\t          return threadPool;\r\n\t\t\t      }\r\n\t\t\t  \r\n\t\t\t      @Override\r\n\t\t\t      public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {\r\n\t\t\t          return null;\r\n\t\t\t      }\r\n\t\t\t  }\r\n\t\t\t  ```\r\n\t\t- 创建队列\r\n\t\t  collapsed:: true\r\n\t\t\t- Direct\r\n\t\t\t\t- ```java\r\n\t\t\t\t              channel.exchangeDeclare(\r\n\t\t\t\t                      \"exchange.order.restaurant\",\r\n\t\t\t\t                      BuiltinExchangeType.DIRECT,\r\n\t\t\t\t                      true,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      null);\r\n\t\t\t\t  \r\n\t\t\t\t              channel.queueDeclare(\r\n\t\t\t\t                      \"queue.order\",\r\n\t\t\t\t                      true,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      null);\r\n\t\t\t\t  \r\n\t\t\t\t              channel.queueBind(\r\n\t\t\t\t                      \"queue.order\",\r\n\t\t\t\t                      \"exchange.order.restaurant\",\r\n\t\t\t\t                      \"key.order\");\r\n\t\t\t\t  ```\r\n\t\t\t- Fanout\r\n\t\t\t\t- ```java\r\n\t\t\t\t              channel.exchangeDeclare(\r\n\t\t\t\t                      \"exchange.settlement.order\",\r\n\t\t\t\t                      BuiltinExchangeType.FANOUT,\r\n\t\t\t\t                      true,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      null);\r\n\t\t\t\t  \r\n\t\t\t\t              channel.queueDeclare(\r\n\t\t\t\t                      \"queue.order\",\r\n\t\t\t\t                      true,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      null);\r\n\t\t\t\t  \r\n\t\t\t\t              channel.queueBind(\r\n\t\t\t\t                      \"queue.order\",\r\n\t\t\t\t                      \"exchange.settlement.order\",\r\n\t\t\t\t                      \"key.order\");\r\n\t\t\t\t  ```\r\n\t\t\t- Topic\r\n\t\t\t\t- ```java\r\n\t\t\t\t              channel.exchangeDeclare(\r\n\t\t\t\t                      \"exchange.order.reward\",\r\n\t\t\t\t                      BuiltinExchangeType.TOPIC,\r\n\t\t\t\t                      true,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      null);\r\n\t\t\t\t  \r\n\t\t\t\t              channel.queueDeclare(\r\n\t\t\t\t                      \"queue.order\",\r\n\t\t\t\t                      true,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      false,\r\n\t\t\t\t                      null);\r\n\t\t\t\t  \r\n\t\t\t\t              channel.queueBind(\r\n\t\t\t\t                      \"queue.order\",\r\n\t\t\t\t                      \"exchange.order.reward\",\r\n\t\t\t\t                      \"key.order\");\r\n\t\t\t\t  ```\r\n\t\t- 监听队列\r\n\t\t  collapsed:: true\r\n\t\t\t- ```java\r\n\t\t\t      ObjectMapper objectMapper = new ObjectMapper();\r\n\t\t\t  \r\n\t\t\t      DeliverCallback deliverCallback = (consumerTag, message) -> {\r\n\t\t\t          String messageBody = new String(message.getBody());\r\n\t\t\t          log.info(\"deliverCallback:messageBody:{}\", messageBody);\r\n\t\t\t          ConnectionFactory connectionFactory = new ConnectionFactory();\r\n\t\t\t          connectionFactory.setHost(\"localhost\");\r\n\t\t\t          try {\r\n\t\t\t              OrderMessageDTO orderMessageDTO = objectMapper.readValue(messageBody,\r\n\t\t\t                      OrderMessageDTO.class);\r\n\t\t\t              List<DeliverymanPO> deliverymanPOS = deliverymanDao.selectAvaliableDeliveryman(DeliverymanStatus.AVALIABIE);\r\n\t\t\t              orderMessageDTO.setDeliverymanId(deliverymanPOS.get(0).getId());\r\n\t\t\t              log.info(\"onMessage:restaurantOrderMessageDTO:{}\", orderMessageDTO);\r\n\t\t\t  \r\n\t\t\t              try (Connection connection = connectionFactory.newConnection();\r\n\t\t\t                   Channel channel = connection.createChannel()) {\r\n\t\t\t                  String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);\r\n\t\t\t                  channel.basicPublish(\"exchange.order.restaurant\", \"key.order\", null, messageToSend.getBytes());\r\n\t\t\t              }\r\n\t\t\t          } catch (JsonProcessingException | TimeoutException e) {\r\n\t\t\t              e.printStackTrace();\r\n\t\t\t          }\r\n\t\t\t      };\r\n\t\t\t  \r\n\t\t\t  \r\n\t\t\t  \r\n\t\t\t  channel.basicConsume(\"queue.deliveryman\", true, deliverCallback, consumerTag -> {\r\n\t\t\t              });\r\n\t\t\t  ```\r\n\t\t- 发送消息\r\n\t\t  collapsed:: true\r\n\t\t\t- ```java\r\n\t\t\t  try (Connection connection = connectionFactory.newConnection();\r\n\t\t\t                               Channel channel = connection.createChannel()) {\r\n\t\t\t                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);\r\n\t\t\t                              channel.basicPublish(\"exchange.order.deliveryman\", \"key.deliveryman\", null,\r\n\t\t\t                                      messageToSend.getBytes());\r\n\t\t\t                          }\r\n\t\t\t  ```\r\n\t\t- 启动监听\r\n\t\t  collapsed:: true\r\n\t\t\t- ```java\r\n\t\t\t  @Slf4j\r\n\t\t\t  @Configuration\r\n\t\t\t  public class RabbitConfig {\r\n\t\t\t  \r\n\t\t\t      @Autowired\r\n\t\t\t      OrderMessageService orderMessageService;\r\n\t\t\t  \r\n\t\t\t      @Autowired\r\n\t\t\t      public void startListenMessage() throws IOException, TimeoutException, InterruptedException {\r\n\t\t\t          orderMessageService.handleMessage();\r\n\t\t\t      }\r\n\t\t\t  }\r\n\t\t\t  ```\r\n\t\t\t- orderMessage\r\n\t\t\t\t- ```java\r\n\t\t\t\t  @Slf4j\r\n\t\t\t\t  @Service\r\n\t\t\t\t  public class OrderMessageService {\r\n\t\t\t\t  \r\n\t\t\t\t      @Value(\"${rabbitmq.exchange}\")\r\n\t\t\t\t      public String exchangeName;\r\n\t\t\t\t      @Value(\"${rabbitmq.deliveryman-routing-key}\")\r\n\t\t\t\t      public String deliverymanRoutingKey;\r\n\t\t\t\t      @Value(\"${rabbitmq.settlement-routing-key}\")\r\n\t\t\t\t      public String settlementRoutingKey;\r\n\t\t\t\t      @Value(\"${rabbitmq.reward-routing-key}\")\r\n\t\t\t\t      public String rewardRoutingKey;\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t      @Autowired\r\n\t\t\t\t      private OrderDetailDao orderDetailDao;\r\n\t\t\t\t      ObjectMapper objectMapper = new ObjectMapper();\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t      @Async\r\n\t\t\t\t      public void handleMessage() throws IOException, TimeoutException, InterruptedException {\r\n\t\t\t\t          log.info(\"start linstening message\");\r\n\t\t\t\t          ConnectionFactory connectionFactory = new ConnectionFactory();\r\n\t\t\t\t          connectionFactory.setHost(\"localhost\");\r\n\t\t\t\t          connectionFactory.setHost(\"localhost\");\r\n\t\t\t\t          try (Connection connection = connectionFactory.newConnection();\r\n\t\t\t\t               Channel channel = connection.createChannel()) {\r\n\t\t\t\t  \t\t........\r\n\t\t\t\t            } \r\n\t\t\t\t      }\r\n\t\t\t\t  }\r\n\t\t\t\t            \r\n\t\t\t\t  ```\r\n\t- springboot(spring-AMQP)\r\n\t  collapsed:: true\r\n\t\t- 优点\r\n\t\t  collapsed:: true\r\n\t\t\t- 异步消息监听容器\r\n\t\t\t- 原生提供 RabbitTemplate,方便收发消息\r\n\t\t\t- 原生提供RabbitAdmin,方便队列、交换机声明\r\n\t\t\t- Spring Boot Config 原生支持RabbitMQ\r\n\t\t- 依赖\r\n\t\t  collapsed:: true\r\n\t\t\t- ```yaml\r\n\t\t\t  ```\r\n\t\t- 利用RabbitAdmin快速配置\r\n\t\t  collapsed:: true\r\n\t\t\t- 手动配置\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 在Config文件夹下添加RabbitConfig.java\r\n\t\t\t\t  collapsed:: true\r\n\t\t\t\t\t- ```java\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  @Slf4j\r\n\t\t\t\t\t  @Configuration\r\n\t\t\t\t\t  public class RabbitConfig {\r\n\t\t\t\t\t  \r\n\t\t\t\t\t      @Autowired\r\n\t\t\t\t\t      OrderMessageService orderMessageService;\r\n\t\t\t\t\t  \r\n\t\t\t\t\t      @Autowired\r\n\t\t\t\t\t      public void startListenMessage() throws IOException, TimeoutException, InterruptedException {\r\n\t\t\t\t\t          orderMessageService.handleMessage();\r\n\t\t\t\t\t      }\r\n\t\t\t\t\t  \r\n\t\t\t\t\t      @Autowired\r\n\t\t\t\t\t      public void initRabbit() {\r\n\t\t\t\t\t          CachingConnectionFactory connectionFactory = new CachingConnectionFactory();\r\n\t\t\t\t\t          connectionFactory.setHost(\"127.0.0.1\");\r\n\t\t\t\t\t          connectionFactory.setPort(5672);\r\n\t\t\t\t\t          connectionFactory.setPassword(\"guest\");\r\n\t\t\t\t\t          connectionFactory.setUsername(\"guest\");\r\n\t\t\t\t\t  \r\n\t\t\t\t\t          RabbitAdmin rabbitAdmin = new RabbitAdmin(connectionFactory);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t          /*---------------------restaurant---------------------*/\r\n\t\t\t\t\t          Exchange exchange = new DirectExchange(\"exchange.order.restaurant\");\r\n\t\t\t\t\t          rabbitAdmin.declareExchange(exchange);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t          Queue queue = new Queue(\"queue.order\");\r\n\t\t\t\t\t          rabbitAdmin.declareQueue(queue);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t          Binding binding = new Binding(\r\n\t\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t\t                  \"exchange.order.restaurant\",\r\n\t\t\t\t\t                  \"key.order\",\r\n\t\t\t\t\t                  null);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t          rabbitAdmin.declareBinding(binding);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t          /*---------------------deliveryman---------------------*/\r\n\t\t\t\t\t          exchange = new DirectExchange(\"exchange.order.deliveryman\");\r\n\t\t\t\t\t          rabbitAdmin.declareExchange(exchange);\r\n\t\t\t\t\t          binding = new Binding(\r\n\t\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t\t                  \"exchange.order.deliveryman\",\r\n\t\t\t\t\t                  \"key.order\",\r\n\t\t\t\t\t                  null);\r\n\t\t\t\t\t          rabbitAdmin.declareBinding(binding);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  \r\n\t\t\t\t\t          /*---------settlement---------*/\r\n\t\t\t\t\t          exchange = new FanoutExchange(\"exchange.order.settlement\");\r\n\t\t\t\t\t          rabbitAdmin.declareExchange(exchange);\r\n\t\t\t\t\t          exchange = new FanoutExchange(\"exchange.settlement.order\");\r\n\t\t\t\t\t          rabbitAdmin.declareExchange(exchange);\r\n\t\t\t\t\t          binding = new Binding(\r\n\t\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t\t                  \"exchange.order.settlement\",\r\n\t\t\t\t\t                  \"key.order\",\r\n\t\t\t\t\t                  null);\r\n\t\t\t\t\t          rabbitAdmin.declareBinding(binding);\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  \r\n\t\t\t\t\t          /*--------------reward----------------*/\r\n\t\t\t\t\t          exchange = new TopicExchange(\"exchange.order.reward\");\r\n\t\t\t\t\t          rabbitAdmin.declareExchange(exchange);\r\n\t\t\t\t\t          binding = new Binding(\r\n\t\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t\t                  \"exchange.order.reward\",\r\n\t\t\t\t\t                  \"key.order\",\r\n\t\t\t\t\t                  null);\r\n\t\t\t\t\t          rabbitAdmin.declareBinding(binding);\r\n\t\t\t\t\t      }\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  ```\r\n\t\t\t- 声明式配置\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```java\r\n\t\t\t\t  @Slf4j\r\n\t\t\t\t  @Configuration\r\n\t\t\t\t  public class RabbitConfig {\r\n\t\t\t\t  \r\n\t\t\t\t      @Autowired\r\n\t\t\t\t      OrderMessageService orderMessageService;\r\n\t\t\t\t  \r\n\t\t\t\t      @Autowired\r\n\t\t\t\t      public void startListenMessage() throws IOException, TimeoutException, InterruptedException {\r\n\t\t\t\t          orderMessageService.handleMessage();\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t      /*---------------------restaurant---------------------*/\r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Exchange exchange1() {\r\n\t\t\t\t          return new DirectExchange(\"exchange.order.restaurant\");\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Queue queue1() {\r\n\t\t\t\t          return new Queue(\"queue.order\");\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Binding binding1() {\r\n\t\t\t\t          return new Binding(\r\n\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t                  \"exchange.order.restaurant\",\r\n\t\t\t\t                  \"key.order\",\r\n\t\t\t\t                  null);\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      /*---------------------deliveryman---------------------*/\r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Exchange exchange2() {\r\n\t\t\t\t          return new DirectExchange(\"exchange.order.deliveryman\");\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Binding binding2() {\r\n\t\t\t\t          return new Binding(\r\n\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t                  \"exchange.order.deliveryman\",\r\n\t\t\t\t                  \"key.order\",\r\n\t\t\t\t                  null);\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t      /*---------settlement---------*/\r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Exchange exchange3() {\r\n\t\t\t\t          return new FanoutExchange(\"exchange.order.settlement\");\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Exchange exchange4() {\r\n\t\t\t\t          return new FanoutExchange(\"exchange.settlement.order\");\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Binding binding3() {\r\n\t\t\t\t          return new Binding(\r\n\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t                  \"exchange.order.settlement\",\r\n\t\t\t\t                  \"key.order\",\r\n\t\t\t\t                  null);\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      /*--------------reward----------------*/\r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Exchange exchange5() {\r\n\t\t\t\t          return new TopicExchange(\"exchange.order.reward\");\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public Binding binding4() {\r\n\t\t\t\t          return new Binding(\r\n\t\t\t\t                  \"queue.order\",\r\n\t\t\t\t                  Binding.DestinationType.QUEUE,\r\n\t\t\t\t                  \"exchange.order.reward\",\r\n\t\t\t\t                  \"key.order\",\r\n\t\t\t\t                  null);\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public ConnectionFactory connectionFactory() {\r\n\t\t\t\t          CachingConnectionFactory connectionFactory = new CachingConnectionFactory();\r\n\t\t\t\t          connectionFactory.setHost(\"127.0.0.1\");\r\n\t\t\t\t          connectionFactory.setPort(5672);\r\n\t\t\t\t          connectionFactory.setPassword(\"guest\");\r\n\t\t\t\t          connectionFactory.setUsername(\"guest\");\r\n\t\t\t\t          connectionFactory.setPublisherConfirmType(CachingConnectionFactory.ConfirmType.SIMPLE);\r\n\t\t\t\t          connectionFactory.setPublisherReturns(true);\r\n\t\t\t\t          connectionFactory.createConnection();\r\n\t\t\t\t          return connectionFactory;\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      public RabbitAdmin rabbitAdmin(ConnectionFactory connectionFactory) {\r\n\t\t\t\t          RabbitAdmin admin = new RabbitAdmin(connectionFactory);\r\n\t\t\t\t          admin.setAutoStartup(true);\r\n\t\t\t\t          return admin;\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t      @Bean\r\n\t\t\t\t      RabbitTemplate rabbitTemplate(ConnectionFactory connectionFactory) {\r\n\t\t\t\t          RabbitTemplate rabbitTemplate = new RabbitTemplate(connectionFactory);\r\n\t\t\t\t          rabbitTemplate.setMandatory(true);\r\n\t\t\t\t  \r\n\t\t\t\t          rabbitTemplate.setConfirmCallback((correlationData, ack, cause) ->\r\n\t\t\t\t                  log.info(\"correlationData:{}, ack:{}, cause{}\",\r\n\t\t\t\t                          correlationData,\r\n\t\t\t\t                          ack,\r\n\t\t\t\t                          cause));\r\n\t\t\t\t          rabbitTemplate.setReturnCallback((message, replyCode, replyText, exchange, routingKey) ->\r\n\t\t\t\t                  log.info(\r\n\t\t\t\t                          \"message:{}, replyCode:{}, replyText:{}, exchange:{}, routingKey{}\",\r\n\t\t\t\t                          message,\r\n\t\t\t\t                          replyCode,\r\n\t\t\t\t                          replyText,\r\n\t\t\t\t                          exchange,\r\n\t\t\t\t                          routingKey));\r\n\t\t\t\t          return rabbitTemplate;\r\n\t\t\t\t      }\r\n\t\t\t\t    \r\n\t\t\t\t    \t/*\r\n\t\t\t\t      *SimpleMessageListenerContainer 简单消息监听容器\r\n\t\t\t\t      */  \r\n\t\t\t\t    \t@Bean\r\n\t\t\t\t      public SimpleMessageListenerContainer messageListenerContainer(ConnectionFactory connectionFactory){\r\n\t\t\t\t          SimpleMessageListenerContainer messageListenerContainer = new SimpleMessageListenerContainer(connectionFactory);\r\n\t\t\t\t          messageListenerContainer.setQueueNames(\"queue.order\");\r\n\t\t\t\t          messageListenerContainer.setConcurrentConsumers(1);\r\n\t\t\t\t          messageListenerContainer.setMaxConcurrentConsumers(3);\r\n\t\t\t\t          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.AUTO);\r\n\t\t\t\t          messageListenerContainer.setMessageListener(new MessageListener() {\r\n\t\t\t\t              @Override\r\n\t\t\t\t              public void onMessage(Message message) {\r\n\t\t\t\t                  log.info(\"message:{}\", message);\r\n\t\t\t\t              }\r\n\t\t\t\t          });\r\n\t\t\t\t          messageListenerContainer.setPrefetchCount(2);\r\n\t\t\t\t          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.MANUAL);\r\n\t\t\t\t          messageListenerContainer.setMessageListener(new ChannelAwareMessageListener() {\r\n\t\t\t\t              @Override\r\n\t\t\t\t              public void onMessage(Message message, Channel channel) throws Exception {\r\n\t\t\t\t                  channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);\r\n\t\t\t\t              }\r\n\t\t\t\t          });\r\n\t\t\t\t          return messageListenerContainer;\r\n\t\t\t\t      }\r\n\t\t\t\t  }\r\n\t\t\t\t  \r\n\t\t\t\t  ```\r\n\t\t\t\t-\r\n\t\t- SimpleMessageListenerContainer 简单消息监听容器\r\n\t\t  collapsed:: true\r\n\t\t\t- ```java\r\n\t\t\t    \t/*\r\n\t\t\t      *SimpleMessageListenerContainer 简单消息监听容器\r\n\t\t\t      */  \r\n\t\t\t    \t@Bean\r\n\t\t\t      public SimpleMessageListenerContainer messageListenerContainer(ConnectionFactory connectionFactory){\r\n\t\t\t          SimpleMessageListenerContainer messageListenerContainer = new SimpleMessageListenerContainer(connectionFactory);\r\n\t\t\t          messageListenerContainer.setQueueNames(\"queue.order\");\r\n\t\t\t          messageListenerContainer.setConcurrentConsumers(1);\r\n\t\t\t          messageListenerContainer.setMaxConcurrentConsumers(3);\r\n\t\t\t          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.AUTO);\r\n\t\t\t          messageListenerContainer.setMessageListener(new MessageListener() {\r\n\t\t\t              @Override\r\n\t\t\t              public void onMessage(Message message) {\r\n\t\t\t                  log.info(\"message:{}\", message);\r\n\t\t\t              }\r\n\t\t\t          });\r\n\t\t\t          messageListenerContainer.setPrefetchCount(2);\r\n\t\t\t          messageListenerContainer.setAcknowledgeMode(AcknowledgeMode.MANUAL);\r\n\t\t\t          messageListenerContainer.setMessageListener(new ChannelAwareMessageListener() {\r\n\t\t\t              @Override\r\n\t\t\t              public void onMessage(Message message, Channel channel) throws Exception {\r\n\t\t\t                  channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);\r\n\t\t\t              }\r\n\t\t\t          });\r\n\t\t\t          return messageListenerContainer;\r\n\t\t\t      }\r\n\t\t\t  ```\r\n\t\t\t- MessageListenAdapter 自定义消息监听\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 简单模式：实现handleMessage方法\r\n\t\t\t\t- 高阶模式：自定义“队列名→方法名”映射关系\r\n\t\t\t\t- ```java\r\n\t\t\t\t          MessageListenerAdapter listenerAdapter = new MessageListenerAdapter();\r\n\t\t\t\t          listenerAdapter.setDelegate(orderMessageService);\r\n\t\t\t\t  \r\n\t\t\t\t          Map<String, String> methodMap = new HashMap<>(8);\r\n\t\t\t\t          methodMap.put(\"queue.order\", \"handleMessage1\");\r\n\t\t\t\t          listenerAdapter.setQueueOrTagToMethodName(methodMap);\r\n\t\t\t\t          messageListenerContainer.setMessageListener(listenerAdapter);\r\n\t\t\t\t  ```\r\n\t\t\t- MessageConveter 用来在收发消息时自动转换消息\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- Byte[]数组作为消息体,转化为Java对象\r\n\t\t\t\t- Jackson2JsonMessageConverter 转换Json格式\r\n\t\t\t\t\t- 配合ClassMapper可以直接转换为POJO对象\r\n\t\t\t\t- ```java\r\n\t\t\t\t          MessageListenerAdapter messageListenerAdapter = new MessageListenerAdapter(orderMessageService);\r\n\t\t\t\t          Jackson2JsonMessageConverter messageConverter = new Jackson2JsonMessageConverter();\r\n\t\t\t\t          messageConverter.setClassMapper(new ClassMapper() {\r\n\t\t\t\t              @Override\r\n\t\t\t\t              public void fromClass(Class<?> clazz, MessageProperties properties) {\r\n\t\t\t\t  \r\n\t\t\t\t              }\r\n\t\t\t\t  \r\n\t\t\t\t              @Override\r\n\t\t\t\t              public Class<?> toClass(MessageProperties properties) {\r\n\t\t\t\t                  return OrderMessageDTO.class;\r\n\t\t\t\t              }\r\n\t\t\t\t          });\r\n\t\t\t\t  \r\n\t\t\t\t  //        messageConverter.setJavaTypeMapper(Jackson2JavaTypeMapper);\r\n\t\t\t\t  \r\n\t\t\t\t          messageListenerAdapter.setMessageConverter(messageConverter);\r\n\t\t\t\t  ```\r\n\t\t- 利用RabbitTemplate发送消息\r\n\t\t  collapsed:: true\r\n\t\t\t- ```java\r\n\t\t\t          String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);\r\n\t\t\t          MessageProperties messageProperties = new MessageProperties();\r\n\t\t\t          messageProperties.setExpiration(\"15000\");\r\n\t\t\t          Message message = new Message(messageToSend.getBytes(), messageProperties);\r\n\t\t\t          CorrelationData correlationData = new CorrelationData();\r\n\t\t\t          correlationData.setId(orderPO.getId().toString());\r\n\t\t\t          rabbitTemplate.send(\r\n\t\t\t                  \"exchange.order.restaurant\",\r\n\t\t\t                  \"key.restaurant\",\r\n\t\t\t                  message,correlationData\r\n\t\t\t          );\r\n\t\t\t  \r\n\t\t\t          rabbitTemplate.convertAndSend(\r\n\t\t\t                  \"exchange.order.restaurant\",\r\n\t\t\t                  \"key.restaurant\",\r\n\t\t\t                  messageToSend,correlationData);\r\n\t\t\t  \r\n\t\t\t          //        rabbitTemplate.execute(channel -> {\r\n\t\t\t          //            channel.abort();\r\n\t\t\t          //            return null;\r\n\t\t\t          //        });\r\n\t\t\t  ```\r\n\t\t- RabbitListener  是一个组合注解，对业务代码无侵入实现监听\r\n\t\t  collapsed:: true\r\n\t\t\t- RabbitListener 组合注解\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- @Exchange:自动声明Exchange\r\n\t\t\t\t- @Queue:自动声明队列\r\n\t\t\t\t- @QueueBinding:自动声明绑定关系\r\n\t\t\t- 使用\r\n\t\t\t\t- properties配置文件\r\n\t\t\t\t  collapsed:: true\r\n\t\t\t\t\t- ```properties\r\n\t\t\t\t\t  spring.rabbitmq.username=guest\r\n\t\t\t\t\t  spring.rabbitmq.password=guest\r\n\t\t\t\t\t  spring.rabbitmq.addresses=127.0.0.1\r\n\t\t\t\t\t  spring.rabbitmq.port=6379\r\n\t\t\t\t\t  ```\r\n\t\t\t\t- 业务代码使用\r\n\t\t\t\t  collapsed:: true\r\n\t\t\t\t\t- ```java\r\n\t\t\t\t\t      @RabbitListener(\r\n\t\t\t\t\t  //            containerFactory = \"rabbitListenerContainerFactory\",\r\n\t\t\t\t\t  //            queues = \"queue.order\",\r\n\t\t\t\t\t  //            admin = \"rabbitAdmin\",\r\n\t\t\t\t\t              bindings = {\r\n\t\t\t\t\t                      @QueueBinding(\r\n\t\t\t\t\t                              value = @Queue(name = \"${imooc.order-queue}\",\r\n\t\t\t\t\t                                      arguments = {\r\n\t\t\t\t\t                                              //                                            @Argument(name =\r\n\t\t\t\t\t                                              //                                            \"x-message-ttl\", value =\r\n\t\t\t\t\t                                              //                                            \"1000\", type = \"java.lang\r\n\t\t\t\t\t                                              //                                            .Integer\"),\r\n\t\t\t\t\t                                              //                                            @Argument(name =\r\n\t\t\t\t\t                                              //                                            \"x-dead-letter-exchange\",\r\n\t\t\t\t\t                                              //                                            value = \"aaaaa\"),\r\n\t\t\t\t\t                                              //                                            @Argument(name =\r\n\t\t\t\t\t                                              //                                            \"x-dead-letter-routing-key\", value = \"bbbb\")\r\n\t\t\t\t\t                                      }),\r\n\t\t\t\t\t                              exchange = @Exchange(name = \"exchange.order.restaurant\", type = ExchangeTypes.DIRECT),\r\n\t\t\t\t\t                              key = \"key.order\"\r\n\t\t\t\t\t                      ),\r\n\t\t\t\t\t                      @QueueBinding(\r\n\t\t\t\t\t                              value = @Queue(name = \"queue.order\"),\r\n\t\t\t\t\t                              exchange = @Exchange(name = \"exchange.order.deliveryman\", type = ExchangeTypes.DIRECT),\r\n\t\t\t\t\t                              key = \"key.order\"\r\n\t\t\t\t\t                      ),\r\n\t\t\t\t\t                      @QueueBinding(\r\n\t\t\t\t\t                              value = @Queue(name = \"queue.order\"),\r\n\t\t\t\t\t                              exchange = @Exchange(name = \"exchange.settlement.order\", type = ExchangeTypes.FANOUT),\r\n\t\t\t\t\t                              key = \"key.order\"\r\n\t\t\t\t\t                      ),\r\n\t\t\t\t\t                      @QueueBinding(\r\n\t\t\t\t\t                              value = @Queue(name = \"queue.order\"),\r\n\t\t\t\t\t                              exchange = @Exchange(name = \"exchange.order.reward\", type = ExchangeTypes.TOPIC),\r\n\t\t\t\t\t                              key = \"key.order\"\r\n\t\t\t\t\t                      )\r\n\t\t\t\t\t              }\r\n\t\t\t\t\t      )\r\n\t\t\t\t\t      public void handleMessage(@Payload Message message) throws IOException {\r\n\t\t\t\t\t          log.info(\"handleMessage:message:{}\", new String(message.getBody()));\r\n\t\t\t\t\t          ConnectionFactory connectionFactory = new ConnectionFactory();\r\n\t\t\t\t\t          connectionFactory.setHost(\"localhost\");\r\n\t\t\t\t\t          try {\r\n\t\t\t\t\t              OrderMessageDTO orderMessageDTO = objectMapper.readValue(message.getBody(),\r\n\t\t\t\t\t                      OrderMessageDTO.class);\r\n\t\t\t\t\t              OrderDetailPO orderPO = orderDetailDao.selectOrder(orderMessageDTO.getOrderId());\r\n\t\t\t\t\t  \r\n\t\t\t\t\t              switch (orderPO.getStatus()) {\r\n\t\t\t\t\t  \r\n\t\t\t\t\t                  case ORDER_CREATING:\r\n\t\t\t\t\t                      if (orderMessageDTO.getConfirmed() && null != orderMessageDTO.getPrice()) {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.RESTAURANT_CONFIRMED);\r\n\t\t\t\t\t                          orderPO.setPrice(orderMessageDTO.getPrice());\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                          try (Connection connection = connectionFactory.newConnection();\r\n\t\t\t\t\t                               Channel channel = connection.createChannel()) {\r\n\t\t\t\t\t                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);\r\n\t\t\t\t\t                              channel.basicPublish(\"exchange.order.deliveryman\", \"key.deliveryman\", null,\r\n\t\t\t\t\t                                      messageToSend.getBytes());\r\n\t\t\t\t\t                          }\r\n\t\t\t\t\t                      } else {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.FAILED);\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                      }\r\n\t\t\t\t\t                      break;\r\n\t\t\t\t\t                  case RESTAURANT_CONFIRMED:\r\n\t\t\t\t\t                      if (null != orderMessageDTO.getDeliverymanId()) {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.DELIVERYMAN_CONFIRMED);\r\n\t\t\t\t\t                          orderPO.setDeliverymanId(orderMessageDTO.getDeliverymanId());\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                          try (Connection connection = connectionFactory.newConnection();\r\n\t\t\t\t\t                               Channel channel = connection.createChannel()) {\r\n\t\t\t\t\t                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);\r\n\t\t\t\t\t                              channel.basicPublish(\r\n\t\t\t\t\t                                      \"exchange.order.settlement\",\r\n\t\t\t\t\t                                      \"key.settlement\",\r\n\t\t\t\t\t                                      null,\r\n\t\t\t\t\t                                      messageToSend.getBytes()\r\n\t\t\t\t\t                              );\r\n\t\t\t\t\t                          }\r\n\t\t\t\t\t                      } else {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.FAILED);\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                      }\r\n\t\t\t\t\t                      break;\r\n\t\t\t\t\t                  case DELIVERYMAN_CONFIRMED:\r\n\t\t\t\t\t                      if (null != orderMessageDTO.getSettlementId()) {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.SETTLEMENT_CONFIRMED);\r\n\t\t\t\t\t                          orderPO.setSettlementId(orderMessageDTO.getSettlementId());\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                          try (Connection connection = connectionFactory.newConnection();\r\n\t\t\t\t\t                               Channel channel = connection.createChannel()) {\r\n\t\t\t\t\t                              String messageToSend = objectMapper.writeValueAsString(orderMessageDTO);\r\n\t\t\t\t\t                              channel.basicPublish(\r\n\t\t\t\t\t                                      \"exchange.order.reward\",\r\n\t\t\t\t\t                                      \"key.reward\",\r\n\t\t\t\t\t                                      null,\r\n\t\t\t\t\t                                      messageToSend.getBytes()\r\n\t\t\t\t\t                              );\r\n\t\t\t\t\t                          }\r\n\t\t\t\t\t  \r\n\t\t\t\t\t                      } else {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.FAILED);\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                      }\r\n\t\t\t\t\t                      break;\r\n\t\t\t\t\t                  case SETTLEMENT_CONFIRMED:\r\n\t\t\t\t\t                      if (null != orderMessageDTO.getRewardId()) {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.ORDER_CREATED);\r\n\t\t\t\t\t                          orderPO.setRewardId(orderMessageDTO.getRewardId());\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                      } else {\r\n\t\t\t\t\t                          orderPO.setStatus(OrderStatus.FAILED);\r\n\t\t\t\t\t                          orderDetailDao.update(orderPO);\r\n\t\t\t\t\t                      }\r\n\t\t\t\t\t                      break;\r\n\t\t\t\t\t              }\r\n\t\t\t\t\t  \r\n\t\t\t\t\t          } catch (JsonProcessingException | TimeoutException e) {\r\n\t\t\t\t\t              e.printStackTrace();\r\n\t\t\t\t\t          }\r\n\t\t\t\t\t      }\r\n\t\t\t\t\t  ```\r\n\t- 保证消息可靠性\r\n\t  collapsed:: true\r\n\t\t- 发送端确认机制 （发送是否成功）\r\n\t\t  collapsed:: true\r\n\t\t\t- > 慎用\r\n\t\t\t- 配置channel，确认开启模式\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```java\r\n\t\t\t\t  channel.confirmSelect();\r\n\t\t\t\t  ```\r\n\t\t\t- 单条同步确认 (推荐)\r\n\t\t\t\t- 每发送一条消息，调用**channel.waitForConfirms()**方法，等待确认\r\n\t\t\t- 多条同步确认\r\n\t\t\t\t- 发送多条消息后，调用**channel.waitForConfirms()**方法，等待确认\r\n\t\t\t- 异步确认\r\n\t\t\t\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656334192845_0.png)\r\n\t\t\t\t- 在channel上添加监听：**addConfirmListener**,发送消息后，会回调此方法，通知是否发送成功\r\n\t\t\t\t- > 异步确认有可能是单条，也有可能是多条，取决于MQ\r\n\t\t\t\t- > 异步回调在一个新的线程，所以数据隔离且有并发问题（因为channel不同，所以deliverTag可能重复）。\r\n\t\t- 消息返回机制 （消息是否被路由）\r\n\t\t  collapsed:: true\r\n\t\t\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1656334924326_0.png)\r\n\t\t\t- 原理：Exchange在没有找到路由时候调用回调机制\r\n\t\t\t- 发送消息时候 mandatory设为true\r\n\t\t\t\t- ```java\r\n\t\t\t\t                  channel.basicPublish(\"exchange.order.restaurant\", \"key.order\",true, null, messageToSend.getBytes());\r\n\t\t\t\t  ```\r\n\t\t\t- 设置异步回调\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```java\r\n\t\t\t\t                  channel.addReturnListener(new ReturnCallback() {\r\n\t\t\t\t                      @Override\r\n\t\t\t\t                      public void handle(Return returnMessage) {\r\n\t\t\t\t                          log.info(\"Message Return: returnMessage:{}\", returnMessage);\r\n\t\t\t\t                      }\r\n\t\t\t\t                  });\r\n\t\t\t\t  ```\r\n\t\t\t\t-\r\n\t\t- 消费端确认  ACK\r\n\t\t  collapsed:: true\r\n\t\t\t- 监听消息时关闭自动ACK，使用手动ACK。\r\n\t\t\t\t- 下面第二个参数为false\r\n\t\t\t\t- ```java\r\n\t\t\t\t  this.channel.basicConsume(\"queue.restaurant\", false, deliverCallback, consumerTag -> {});\r\n\t\t\t\t  ```\r\n\t\t\t- 监听消费时手动ack\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```java\r\n\t\t\t\t  channel.basicAck(message.getEnvelope().getDeliveryTag(),true);}\r\n\t\t\t\t  ```\r\n\t\t\t- > NACK慎用\r\n\t\t- 消费端限流 QoS\r\n\t\t  collapsed:: true\r\n\t\t\t- 前提：不使用自动确认\r\n\t\t\t- ```java\r\n\t\t\t  channel.basicQos(2)\r\n\t\t\t  ```\r\n\t\t\t-\r\n\t\t- 消息过期机制 ttl\r\n\t\t  collapsed:: true\r\n\t\t\t- > 消息ttl 长于业务高峰期时间 与 服务的平均重启时间\r\n\t\t\t- 设置单条消息TTL\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```java\r\n\t\t\t\t  AMQP.BasicProperties properties = new AMQP.BasicProperties.Builder().expiration(\"100000\").build();\r\n\t\t\t\t  ```\r\n\t\t\t\t- ```java\r\n\t\t\t\t  channel.basicPublish(\"exchange.order.deliveryman\", \"key.deliveryman\", properties,\r\n\t\t\t\t                                      messageToSend.getBytes());\r\n\t\t\t\t  ```\r\n\t\t\t- 设置队列TTL\r\n\t\t\t\t- ```java\r\n\t\t\t\t  Map<String, Object> args = new HashMap<String, Object>();\r\n\t\t\t\t  args.put(\"x-message-ttl\", 10000);\r\n\t\t\t\t  ```\r\n\t\t\t\t- 创建队列时将参数赋值进去\r\n\t\t\t\t\t- ```java\r\n\t\t\t\t\t              channel.exchangeDeclare(\r\n\t\t\t\t\t                      \"exchange.order.restaurant\",\r\n\t\t\t\t\t                      BuiltinExchangeType.DIRECT,\r\n\t\t\t\t\t                      true,\r\n\t\t\t\t\t                      false,\r\n\t\t\t\t\t                      args);\r\n\t\t\t\t\t  ```\r\n\t\t- 死信队列\r\n\t\t  collapsed:: true\r\n\t\t\t- ![image.png](../assets/image_1656341513805_0.png)\r\n\t\t\t- 一个被配置了**DLX**属性的队列，收集ttl过期消息，以供分析\r\n\t\t\t- 怎么变成死信\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 消息被拒绝\r\n\t\t\t\t- 消息过期\r\n\t\t\t\t- 队列达到最大长度\r\n\t\t\t- 设置Exchange\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- 命名规范（非强制的）\r\n\t\t\t\t  collapsed:: true\r\n\t\t\t\t\t- Exchange：dlx.exchange\r\n\t\t\t\t\t- Queue:dlx.queue\r\n\t\t\t\t\t- RoutingKey: #\r\n\t\t\t\t- 队列添加参数\r\n\t\t\t\t\t- x-dead-letter-exchange = dlx.exchange\r\n\t\t\t\t\t- ```java\r\n\t\t\t\t\t  // 声明死信交换机\r\n\t\t\t\t\t          channel.exchangeDeclare(\r\n\t\t\t\t\t                  \"exchange.dlx\",\r\n\t\t\t\t\t                  BuiltinExchangeType.TOPIC,\r\n\t\t\t\t\t                  true,\r\n\t\t\t\t\t                  false,\r\n\t\t\t\t\t                  null);\r\n\t\t\t\t\t  // 声明死信队列\r\n\t\t\t\t\t          channel.queueDeclare(\r\n\t\t\t\t\t                  \"queue.dlx\",\r\n\t\t\t\t\t                  true,\r\n\t\t\t\t\t                  false,\r\n\t\t\t\t\t                  false,\r\n\t\t\t\t\t                  null);\r\n\t\t\t\t\t  // 声明死信绑定\r\n\t\t\t\t\t          channel.queueBind(\r\n\t\t\t\t\t                  \"queue.dlx\",\r\n\t\t\t\t\t                  \"exchange.dlx\",\r\n\t\t\t\t\t                  \"#\");\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  //声明队列时，携带以下参数：\r\n\t\t\t\t\t  \r\n\t\t\t\t\t              Map<String, Object> args = new HashMap<>(16);\r\n\t\t\t\t\t              args.put(\"x-dead-letter-exchange\", \"exchange.dlx\");\r\n\t\t\t\t\t              args.put(\"x-max-length\", 10);\r\n\t\t\t\t\t  //创建队列时将参数赋值进去\r\n\t\t\t\t\t              channel.exchangeDeclare(\r\n\t\t\t\t\t                      \"exchange.order.restaurant\",\r\n\t\t\t\t\t                      BuiltinExchangeType.DIRECT,\r\n\t\t\t\t\t                      true,\r\n\t\t\t\t\t                      false,\r\n\t\t\t\t\t                      args);\r\n\t\t\t\t\t  ```\r\n\t\t\t-\r\n- 业务开发建议\r\n  collapsed:: true\r\n\t- 一个业务对应一个exchange\r\n\t- 将创建交换机/队列的操作固化在应用代码中，免去复杂的\r\n\t  运维操作，高效且不易出错\r\n\t- 一般来说，交换机由双方同时声明，队列由接收方声明并配\r\n\t  置绑定关系\r\n\t- 交换机/队列的参数一定要由双方开发团队确认，否则重复\r\n\t  声明时，若参数不一致，会导致声明失败
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/RabbitMQ.md b/pages/RabbitMQ.md
--- a/pages/RabbitMQ.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ b/pages/RabbitMQ.md	(date 1657809703426)
@@ -1097,4 +1097,7 @@
 	- 一般来说，交换机由双方同时声明，队列由接收方声明并配
 	  置绑定关系
 	- 交换机/队列的参数一定要由双方开发团队确认，否则重复
-	  声明时，若参数不一致，会导致声明失败
\ No newline at end of file
+	  声明时，若参数不一致，会导致声明失败
+- 遇到的问题
+	- [[RabbitMQ 持久化失效的问题]]
+-
\ No newline at end of file
Index: journals/2022-07-13.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>- DONE [#A] 附件添加日志\r\n- DONE 服务器安装内存\r\n  :LOGBOOK:\r\n  CLOCK: [2022-07-13 Wed 21:14:59]--[2022-07-13 Wed 21:15:00] =>  00:00:01\r\n  :END:\r\n- DONE 重装PS\r\n- [#A] 服务器安装\r\n\t- 系统\r\n\t\t- DONE Windows\r\n\t\t  :LOGBOOK:\r\n\t\t  CLOCK: [2022-07-13 Wed 21:18:03]--[2022-07-13 Wed 21:18:04] =>  00:00:01\r\n\t\t  :END:\r\n\t\t- DONE Ubuntu\r\n\t- 环境\r\n\t\t- DONE Python\r\n-
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/journals/2022-07-13.md b/journals/2022-07-13.md
--- a/journals/2022-07-13.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ b/journals/2022-07-13.md	(date 1657809394240)
@@ -5,12 +5,16 @@
   :END:
 - DONE 重装PS
 - [#A] 服务器安装
+  collapsed:: true
 	- 系统
+	  collapsed:: true
 		- DONE Windows
 		  :LOGBOOK:
 		  CLOCK: [2022-07-13 Wed 21:18:03]--[2022-07-13 Wed 21:18:04] =>  00:00:01
 		  :END:
 		- DONE Ubuntu
 	- 环境
+	  collapsed:: true
 		- DONE Python
+-
 -
\ No newline at end of file
Index: journals/2022-07-14.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>- [[ESXI]]\r\n- [[ShowDoc]]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/journals/2022-07-14.md b/journals/2022-07-14.md
--- a/journals/2022-07-14.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ b/journals/2022-07-14.md	(date 1657814249298)
@@ -1,2 +1,5 @@
 - [[ESXI]]
-- [[ShowDoc]]
\ No newline at end of file
+- [[ShowDoc]]
+- DONE ShowDoc数据迁移与备份
+- 补充 [[RabbitMQ]]遇到的问题
+- [[VMWare]]网络问题
\ No newline at end of file
Index: logseq/pages-metadata.edn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[{:block/name \"\",\r\n  :block/created-at 1657725131334,\r\n  :block/updated-at 1657725131334}\r\n {:block/name \"\\\"\\\"thu, 2022\\\"\",\r\n  :block/created-at 1655460339689,\r\n  :block/updated-at 1655460339689}\r\n {:block/name \"\\\"\\\"wed, 06\\\"\",\r\n  :block/created-at 1657245640401,\r\n  :block/updated-at 1657245640401}\r\n {:block/name \"\\\"fri, 2022\",\r\n  :block/created-at 1654954245970,\r\n  :block/updated-at 1654954245970}\r\n {:block/name \"\\\"fri, 2022/06\",\r\n  :block/created-at 1654954245982,\r\n  :block/updated-at 1654954245982}\r\n {:block/name \"\\\"fri, 2022/06/10\\\"\",\r\n  :block/created-at 1654954245957,\r\n  :block/updated-at 1654954245957}\r\n {:block/name \"\\\"mon, 06\",\r\n  :block/created-at 1657245640734,\r\n  :block/updated-at 1657245640734}\r\n {:block/name \"\\\"mon, 06/06\",\r\n  :block/created-at 1657245640735,\r\n  :block/updated-at 1657245640735}\r\n {:block/name \"\\\"mon, 06/06/2022\\\"\",\r\n  :block/created-at 1657245640733,\r\n  :block/updated-at 1657245640733}\r\n {:block/name \"\\\"tue, 06\",\r\n  :block/created-at 1657008067485,\r\n  :block/updated-at 1657008067485}\r\n {:block/name \"\\\"tue, 06/14\",\r\n  :block/created-at 1657008067486,\r\n  :block/updated-at 1657008067486}\r\n {:block/name \"\\\"tue, 06/14/2022\\\"\",\r\n  :block/created-at 1657008067484,\r\n  :block/updated-at 1657008067484}\r\n {:block/name \"\\\"tue, 06/21\\\"\",\r\n  :block/created-at 1657499651227,\r\n  :block/updated-at 1657499651227}\r\n {:block/name \"\\\"wed, 06\",\r\n  :block/created-at 1657154864115,\r\n  :block/updated-at 1657154864115}\r\n {:block/name \"\\\"wed, 06/01\\\"\",\r\n  :block/created-at 1657154864113,\r\n  :block/updated-at 1657154864113}\r\n {:block/name \".v-eisenhower-matrix\",\r\n  :block/created-at 1657245640417,\r\n  :block/updated-at 1657245640417}\r\n {:block/name \"2022\",\r\n  :block/created-at 1653813725226,\r\n  :block/updated-at 1653813725226}\r\n {:block/name \"2022-okr-01-kr-4\",\r\n  :block/created-at 1654092802401,\r\n  :block/updated-at 1654092802401}\r\n {:block/name \"2022-okr-03-kr-3\",\r\n  :block/created-at 1653814395093,\r\n  :block/updated-at 1653814395093}\r\n {:block/name \"2022-okr-o1-kr-1\",\r\n  :block/created-at 1653813725033,\r\n  :block/updated-at 1653813725033}\r\n {:block/name \"2022-okr-o1-kr-2\",\r\n  :block/created-at 1653813725034,\r\n  :block/updated-at 1653813725034}\r\n {:block/name \"2022-okr-o1-kr-3\",\r\n  :block/created-at 1653813725035,\r\n  :block/updated-at 1653813725035}\r\n {:block/name \"2022-okr-o1-krs\",\r\n  :block/created-at 1653813725036,\r\n  :block/updated-at 1654092802402}\r\n {:block/name \"2022-okr-o2-kr-1\",\r\n  :block/created-at 1652882695042,\r\n  :block/updated-at 1652882695042}\r\n {:block/name \"2022-okr-o2-kr-2\",\r\n  :block/created-at 1653813725000,\r\n  :block/updated-at 1653813725000}\r\n {:block/name \"2022-okr-o2-kr-3\",\r\n  :block/created-at 1653813725002,\r\n  :block/updated-at 1653813725002}\r\n {:block/name \"2022-okr-o2-kr-4\",\r\n  :block/created-at 1653813725003,\r\n  :block/updated-at 1653813725003}\r\n {:block/name \"2022-okr-o2-krs\",\r\n  :block/created-at 1653813725004,\r\n  :block/updated-at 1653813725004}\r\n {:block/name \"2022-okr-o3-kr-1\",\r\n  :block/created-at 1653813725138,\r\n  :block/updated-at 1653813725138}\r\n {:block/name \"2022-okr-o3-kr-2\",\r\n  :block/created-at 1653813725139,\r\n  :block/updated-at 1653813725139}\r\n {:block/name \"2022-okr-o3-krs\",\r\n  :block/created-at 1653813725139,\r\n  :block/updated-at 1653814395094}\r\n {:block/name \"2022-okr-o4-kr-1\",\r\n  :block/created-at 1653813725159,\r\n  :block/updated-at 1653813725159}\r\n {:block/name \"2022-okr-o4-krs\",\r\n  :block/created-at 1653813725160,\r\n  :block/updated-at 1653813725160}\r\n {:block/name \"2022邑网杯\",\r\n  :block/created-at 1655460339532,\r\n  :block/updated-at 1655688178829}\r\n {:block/name \"235cc110-e11d-43f9-a70f-9c0b046d35da\",\r\n  :block/created-at 1654610951313,\r\n  :block/updated-at 1654610951313}\r\n {:block/name \"403d12f1-af06-4b0c-ad60-ab2bc63bbbab\",\r\n  :block/created-at 1654610951317,\r\n  :block/updated-at 1654610951317}\r\n {:block/name \"4cecb7da-45d3-467b-99b4-d8fc26f97e12\",\r\n  :block/created-at 1654610951320,\r\n  :block/updated-at 1654610951320}\r\n {:block/name \"50044c01-fafd-43c0-b022-674ab4f0fb6a\",\r\n  :block/created-at 1654610951318,\r\n  :block/updated-at 1654610951318}\r\n {:block/name \"5afde44b-7e2e-456e-b23c-574cd0623862\",\r\n  :block/created-at 1654610951308,\r\n  :block/updated-at 1654610951308}\r\n {:block/name \"6.4.0版本\",\r\n  :block/created-at 1653810521453,\r\n  :block/updated-at 1653810521453}\r\n {:block/name \"629ebf96-ee20-4650-be2c-de0df99011e9\",\r\n  :block/created-at 1654610951327,\r\n  :block/updated-at 1654610951327}\r\n {:block/name \"629ebfde-43e0-44b9-a85a-9ea9e5bc7e14\",\r\n  :block/created-at 1654610951324,\r\n  :block/updated-at 1654610951324}\r\n {:block/name \"62c54417-4f30-4690-aadc-b0642fe72a18\",\r\n  :block/created-at 1657113710896,\r\n  :block/updated-at 1657113710896}\r\n {:block/name \"62c58c80-6b37-4239-bdc0-10760eef278f\",\r\n  :block/created-at 1657121448326,\r\n  :block/updated-at 1657121448326}\r\n {:block/name \"62ce15ac-f1c9-4d48-b844-8836f236aa2e\",\r\n  :block/created-at 1657673154213,\r\n  :block/updated-at 1657673154213}\r\n {:block/name \"8.0.3\",\r\n  :block/created-at 1653810521583,\r\n  :block/updated-at 1653810521583}\r\n {:block/name \"9833e0dc-26f0-4e6a-89ff-3ab5fd4bdba7\",\r\n  :block/created-at 1654610951315,\r\n  :block/updated-at 1654610951315}\r\n {:block/name \"9e421dbe-120e-4316-89c2-f212102e720d\",\r\n  :block/created-at 1654610951326,\r\n  :block/updated-at 1654610951326}\r\n {:block/name \"a\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"a9d7f098-e7e1-4186-9faa-87816c19e449\",\r\n  :block/created-at 1654610951322,\r\n  :block/updated-at 1654610951322}\r\n {:block/name \"ai当前目标\",\r\n  :block/created-at 1657008046410,\r\n  :block/updated-at 1657081120577}\r\n {:block/name \"amqp\",\r\n  :block/created-at 1656691428132,\r\n  :block/updated-at 1656691428132}\r\n {:block/name \"android\",\r\n  :block/created-at 1655726438995,\r\n  :block/updated-at 1655726438995}\r\n {:block/name \"android数据持久化\",\r\n  :block/created-at 1655726439006,\r\n  :block/updated-at 1655726439006}\r\n {:block/name \"apkstudio\",\r\n  :block/created-at 1657008045828,\r\n  :block/updated-at 1657008045828}\r\n {:block/name \"apollo\",\r\n  :block/created-at 1654098323063,\r\n  :block/updated-at 1654098323063}\r\n {:block/name \"b\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"b660m装机\",\r\n  :block/created-at 1656691428160,\r\n  :block/updated-at 1656691428160}\r\n {:block/name \"bps\",\r\n  :block/created-at 1653453230606,\r\n  :block/updated-at 1653453230606}\r\n {:block/name \"burpsuite pro 2022.2.2\",\r\n  :block/created-at 1655460339914,\r\n  :block/updated-at 1655460339914}\r\n {:block/name \"butterfly主题记录过程\",\r\n  :block/created-at 1655730387088,\r\n  :block/updated-at 1655730421518}\r\n {:block/name \"c\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"canceled\",\r\n  :block/created-at 1656691428911,\r\n  :block/updated-at 1656691428911}\r\n {:block/name \"cancelled\",\r\n  :block/created-at 1657272065353,\r\n  :block/updated-at 1657272065353}\r\n {:block/name \"card\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"centos\",\r\n  :block/created-at 1655730514081,\r\n  :block/updated-at 1655730514081}\r\n {:block/name \"centos安装npm\",\r\n  :block/created-at 1655730474416,\r\n  :block/updated-at 1655730529372}\r\n {:block/name \"centos配置java环境\",\r\n  :block/created-at 1655730584447,\r\n  :block/updated-at 1655730606279}\r\n {:block/name \"cmd\",\r\n  :block/created-at 1655726440494,\r\n  :block/updated-at 1655726440494}\r\n {:block/name \"contents\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652968907873}\r\n {:block/name \"cpu占用过高\",\r\n  :block/created-at 1655049814804,\r\n  :block/updated-at 1655050528516}\r\n {:block/name \"ctf\",\r\n  :block/created-at 1654701516335,\r\n  :block/updated-at 1655474381583}\r\n {:block/name \"ctf-冲突-酌客_win10\",\r\n  :block/created-at 1655726439343,\r\n  :block/updated-at 1655726439343}\r\n {:block/name \"de8f36e3-3138-4590-b6c5-bc83a58b9735\",\r\n  :block/created-at 1654610951306,\r\n  :block/updated-at 1654610951306}\r\n {:block/name \"dm\",\r\n  :block/created-at 1656691428910,\r\n  :block/updated-at 1656691428910}\r\n {:block/name \"dm替换license\",\r\n  :block/created-at 1656691428224,\r\n  :block/updated-at 1656691428224}\r\n {:block/name \"docker\",\r\n  :block/created-at 1655730304276,\r\n  :block/updated-at 1655730304276}\r\n {:block/name \"docker学习实践记录\",\r\n  :block/created-at 1655730201443,\r\n  :block/updated-at 1657118657224}\r\n {:block/name \"docker网络与firewalk\",\r\n  :block/created-at 1656691428879,\r\n  :block/updated-at 1656691428879}\r\n {:block/name \"doing\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"done\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"easypoi\",\r\n  :block/created-at 1655726439419,\r\n  :block/updated-at 1655726439419}\r\n {:block/name \"easypoi导出word\",\r\n  :block/created-at 1655726439456,\r\n  :block/updated-at 1655726439456}\r\n {:block/name \"ea账号密码\",\r\n  :block/created-at 1657008046578,\r\n  :block/updated-at 1657008046578}\r\n {:block/name \"elasticsearch windows 安装\",\r\n  :block/created-at 1653810521619,\r\n  :block/updated-at 1653810521619}\r\n {:block/name \"elasticsearch 安装与入门\",\r\n  :block/created-at 1654523802587,\r\n  :block/updated-at 1654523806591}\r\n {:block/name \"elasticsearch 核心技术与实战\",\r\n  :block/created-at 1653810521905,\r\n  :block/updated-at 1654523863642}\r\n {:block/name \"elasticsearch 深入搜索\",\r\n  :block/created-at 1654523863641,\r\n  :block/updated-at 1654525628640}\r\n {:block/name \"elk\",\r\n  :block/created-at 1653214201294,\r\n  :block/updated-at 1654096517535}\r\n {:block/name \"elk docker-compose 安装\",\r\n  :block/created-at 1653810521875,\r\n  :block/updated-at 1653810521875}\r\n {:block/name \"elk windows安装\",\r\n  :block/created-at 1653810521874,\r\n  :block/updated-at 1653810521874}\r\n {:block/name \"elk安装\",\r\n  :block/created-at 1653810522413,\r\n  :block/updated-at 1653810522413}\r\n {:block/name \"erlang\",\r\n  :block/created-at 1656691428245,\r\n  :block/updated-at 1656691428245}\r\n {:block/name \"esxi\",\r\n  :block/created-at 1657765882644,\r\n  :block/updated-at 1657766959395}\r\n {:block/name \"eureka\",\r\n  :block/created-at 1655726439748,\r\n  :block/updated-at 1655726439748}\r\n {:block/name \"eureka 常用api\",\r\n  :block/created-at 1655726438398,\r\n  :block/updated-at 1655726438398}\r\n {:block/name \"excerpt\",\r\n  :block/created-at 1654610951057,\r\n  :block/updated-at 1654610951057}\r\n {:block/name \"exchange\",\r\n  :block/created-at 1656691428130,\r\n  :block/updated-at 1656691428130}\r\n {:block/name \"face_recognition\",\r\n  :block/created-at 1657008046621,\r\n  :block/updated-at 1657008046621}\r\n {:block/name \"favorites\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"fine control over springboot's properties and profiles\",\r\n  :block/created-at 1655460340015,\r\n  :block/updated-at 1655460340015}\r\n {:block/name \"fri, 01\",\r\n  :block/created-at 1656691428848,\r\n  :block/updated-at 1656691428848}\r\n {:block/name \"fri, 01/01\",\r\n  :block/created-at 1656691428897,\r\n  :block/updated-at 1656691428897}\r\n {:block/name \"fri, 01/01/2023\",\r\n  :block/created-at 1657725120973,\r\n  :block/updated-at 1657725120973}\r\n {:block/name \"fri, 08\",\r\n  :block/created-at 1657008047795,\r\n  :block/updated-at 1657008047795}\r\n {:block/name \"fri, 08/01\",\r\n  :block/created-at 1657008047796,\r\n  :block/updated-at 1657008047796}\r\n {:block/name \"fri, 08/01/2022\",\r\n  :block/created-at 1657725120970,\r\n  :block/updated-at 1657725120970}\r\n {:block/name \"fri, 2020/07\",\r\n  :block/created-at 1657725157989,\r\n  :block/updated-at 1657725157989}\r\n {:block/name \"fri, 2020/07/10\",\r\n  :block/created-at 1657725126514,\r\n  :block/updated-at 1657725126514}\r\n {:block/name \"fri, 2022\",\r\n  :block/created-at 1653214206764,\r\n  :block/updated-at 1653214206764}\r\n {:block/name \"fri, 2022/01\",\r\n  :block/created-at 1657725121854,\r\n  :block/updated-at 1657725121854}\r\n {:block/name \"fri, 2022/01/07\",\r\n  :block/created-at 1657725121850,\r\n  :block/updated-at 1657725121850}\r\n {:block/name \"fri, 2022/05\",\r\n  :block/created-at 1657725121818,\r\n  :block/updated-at 1657725121818}\r\n {:block/name \"fri, 2022/05/20\",\r\n  :block/created-at 1657725121816,\r\n  :block/updated-at 1657725121816}\r\n {:block/name \"fri, 2022/06\",\r\n  :block/created-at 1655048002813,\r\n  :block/updated-at 1655048002814}\r\n {:block/name \"fri, 2022/06/10\",\r\n  :block/created-at 1657725121397,\r\n  :block/updated-at 1657725121397}\r\n {:block/name \"fri, 2022/06/17\",\r\n  :block/created-at 1657113727472,\r\n  :block/updated-at 1657113727472}\r\n {:block/name \"fri, 2022/06/24\",\r\n  :block/created-at 1657725121067,\r\n  :block/updated-at 1657725121067}\r\n {:block/name \"fri, 2022/07\",\r\n  :block/created-at 1657725120572,\r\n  :block/updated-at 1657725120572}\r\n {:block/name \"fri, 2022/07/08\",\r\n  :block/created-at 1657725120570,\r\n  :block/updated-at 1657725120570}\r\n {:block/name \"godeng\",\r\n  :block/created-at 1657008045833,\r\n  :block/updated-at 1657008045833}\r\n {:block/name \"gradle项目连接本地nexus\",\r\n  :block/created-at 1654610951624,\r\n  :block/updated-at 1654610951624}\r\n {:block/name \"haproxy\",\r\n  :block/created-at 1657008046769,\r\n  :block/updated-at 1657008046769}\r\n {:block/name \"hexo\",\r\n  :block/created-at 1655726441376,\r\n  :block/updated-at 1655726441376}\r\n {:block/name \"hls__rh2288h_v3_服务器_v100r003_用户指南_43_1657673098179_0\",\r\n  :block/created-at 1657674951844,\r\n  :block/updated-at 1657674951844}\r\n {:block/name \"hls__the-fenix-project_1655709041362_0\",\r\n  :block/created-at 1655726439811,\r\n  :block/updated-at 1655726439811}\r\n {:block/name \"hls__初识elasticsearch_1654096100122_0\",\r\n  :block/created-at 1654096261576,\r\n  :block/updated-at 1654096261576}\r\n {:block/name \"hls__华为v2&v3服务器_raid控制卡_用户指南_49_1657590039514_0\",\r\n  :block/created-at 1657673064410,\r\n  :block/updated-at 1657673064410}\r\n {:block/name \"home\",\r\n  :block/created-at 1652894301337,\r\n  :block/updated-at 1652894301337}\r\n {:block/name \"https://www.bilibili.com/video/bv1144y14764?t=20.1\",\r\n  :block/created-at 1654095588099,\r\n  :block/updated-at 1654095588099}\r\n {:block/name \"in-progress\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"ireport\",\r\n  :block/created-at 1657245640206,\r\n  :block/updated-at 1657245694149}\r\n {:block/name \"java\",\r\n  :block/created-at 1655730748186,\r\n  :block/updated-at 1655730748186}\r\n {:block/name \"java编程的逻辑\",\r\n  :block/created-at 1655730656504,\r\n  :block/updated-at 1655730780741}\r\n {:block/name \"jenkins\",\r\n  :block/created-at 1655730866034,\r\n  :block/updated-at 1655730866034}\r\n {:block/name \"jenkins安装\",\r\n  :block/created-at 1655730811530,\r\n  :block/updated-at 1655730866037}\r\n {:block/name \"jetbrains gateway  远程开发\",\r\n  :block/created-at 1653119133783,\r\n  :block/updated-at 1653119133783}\r\n {:block/name \"keepalived\",\r\n  :block/created-at 1657008046849,\r\n  :block/updated-at 1657008046849}\r\n {:block/name \"kibana windows安装\",\r\n  :block/created-at 1653810522371,\r\n  :block/updated-at 1653810522371}\r\n {:block/name \"kubernetes\",\r\n  :block/created-at 1657008046929,\r\n  :block/updated-at 1657122855033}\r\n {:block/name \"later\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"learn python in y minutes\",\r\n  :block/created-at 1657008045817,\r\n  :block/updated-at 1657008045817}\r\n {:block/name \"linux\",\r\n  :block/created-at 1657499730642,\r\n  :block/updated-at 1657499730642}\r\n {:block/name \"logcenter-server\",\r\n  :block/created-at 1653453230610,\r\n  :block/updated-at 1653453230610}\r\n {:block/name \"medis\",\r\n  :block/created-at 1657008045837,\r\n  :block/updated-at 1657008045837}\r\n {:block/name \"minio\",\r\n  :block/created-at 1655209126467,\r\n  :block/updated-at 1655209126467}\r\n {:block/name \"mon, 2020/02\",\r\n  :block/created-at 1657725157990,\r\n  :block/updated-at 1657725157990}\r\n {:block/name \"mon, 2020/02/03\",\r\n  :block/created-at 1657725122876,\r\n  :block/updated-at 1657725122876}\r\n {:block/name \"mon, 2021/05\",\r\n  :block/created-at 1657725157991,\r\n  :block/updated-at 1657725157991}\r\n {:block/name \"mon, 2021/05/31\",\r\n  :block/created-at 1657725126456,\r\n  :block/updated-at 1657725126456}\r\n {:block/name \"mon, 2022\",\r\n  :block/created-at 1655209126194,\r\n  :block/updated-at 1655209126194}\r\n {:block/name \"mon, 2022/06\",\r\n  :block/created-at 1654704713779,\r\n  :block/updated-at 1654704713779}\r\n {:block/name \"mon, 2022/06/06\",\r\n  :block/created-at 1657725129690,\r\n  :block/updated-at 1657725129690}\r\n {:block/name \"mon, 2022/06/13\",\r\n  :block/created-at 1657725121338,\r\n  :block/updated-at 1657725121338}\r\n {:block/name \"mon, 2022/06/20\",\r\n  :block/created-at 1655460341395,\r\n  :block/updated-at 1655736570910}\r\n {:block/name \"mon, 2022/06/27\",\r\n  :block/created-at 1657725120929,\r\n  :block/updated-at 1657725120929}\r\n {:block/name \"mon, 2022/07\",\r\n  :block/created-at 1657725120508,\r\n  :block/updated-at 1657725120508}\r\n {:block/name \"mon, 2022/07/11\",\r\n  :block/created-at 1657725120507,\r\n  :block/updated-at 1657725120507}\r\n {:block/name \"mq\",\r\n  :block/created-at 1654610950676,\r\n  :block/updated-at 1654610950676}\r\n {:block/name \"mq 延时队列\",\r\n  :block/created-at 1654610950682,\r\n  :block/updated-at 1654610950682}\r\n {:block/name \"my-bot\",\r\n  :block/created-at 1656691428388,\r\n  :block/updated-at 1656691428388}\r\n {:block/name \"mybatis-plus 日志控制\",\r\n  :block/created-at 1655726439853,\r\n  :block/updated-at 1655726439853}\r\n {:block/name \"mybatisplus\",\r\n  :block/created-at 1655726440177,\r\n  :block/updated-at 1655726440177}\r\n {:block/name \"mysql\",\r\n  :block/created-at 1654788370727,\r\n  :block/updated-at 1654788370727}\r\n {:block/name \"mysql docker-compose 安装\",\r\n  :block/created-at 1656691428403,\r\n  :block/updated-at 1656691428403}\r\n {:block/name \"mysql搭建双master数据库\",\r\n  :block/created-at 1654788370741,\r\n  :block/updated-at 1654788370741}\r\n {:block/name \"new page: tool\",\r\n  :block/created-at 1655728881705,\r\n  :block/updated-at 1655728881705}\r\n {:block/name \"new page: tools\",\r\n  :block/created-at 1655728884028,\r\n  :block/updated-at 1655728884028}\r\n {:block/name \"new page: ubuntu 20.04 安装\",\r\n  :block/created-at 1657113710724,\r\n  :block/updated-at 1657113710724}\r\n {:block/name \"new page: 软\",\r\n  :block/created-at 1655728879527,\r\n  :block/updated-at 1655728879527}\r\n {:block/name \"new page: 软件\",\r\n  :block/created-at 1655728878690,\r\n  :block/updated-at 1655728878690}\r\n {:block/name \"nexus部署\",\r\n  :block/created-at 1654610951414,\r\n  :block/updated-at 1654610951414}\r\n {:block/name \"nginx\",\r\n  :block/created-at 1655730913904,\r\n  :block/updated-at 1655730913904}\r\n {:block/name \"nginx反向代理\",\r\n  :block/created-at 1655730892333,\r\n  :block/updated-at 1655730921766}\r\n {:block/name \"now\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"npm\",\r\n  :block/created-at 1655730523449,\r\n  :block/updated-at 1655730523449}\r\n {:block/name \"pytorch\",\r\n  :block/created-at 1657113710899,\r\n  :block/updated-at 1657113710899}\r\n {:block/name \"rabbitmq\",\r\n  :block/created-at 1654097423945,\r\n  :block/updated-at 1657720558044}\r\n {:block/name \"rabbitmq docker安装\",\r\n  :block/created-at 1657008047003,\r\n  :block/updated-at 1657008047003}\r\n {:block/name \"rabbitmq kubernetes安装\",\r\n  :block/created-at 1657008047159,\r\n  :block/updated-at 1657008047159}\r\n {:block/name \"rabbitmq linux 安装\",\r\n  :block/created-at 1657008047214,\r\n  :block/updated-at 1657008047214}\r\n {:block/name \"rabbitmq windows 安装\",\r\n  :block/created-at 1656691428425,\r\n  :block/updated-at 1656691428425}\r\n {:block/name \"redis\",\r\n  :block/created-at 1655730945997,\r\n  :block/updated-at 1655864871224}\r\n {:block/name \"redis安装\",\r\n  :block/created-at 1655733648883,\r\n  :block/updated-at 1655734015202}\r\n {:block/name \"redis常用命令\",\r\n  :block/created-at 1655734243709,\r\n  :block/updated-at 1655734256616}\r\n {:block/name \"redis数据结构\",\r\n  :block/created-at 1655734293392,\r\n  :block/updated-at 1655735157740}\r\n {:block/name \"sat, 2020/06\",\r\n  :block/created-at 1657725157990,\r\n  :block/updated-at 1657725157990}\r\n {:block/name \"sat, 2020/06/27\",\r\n  :block/created-at 1657725126382,\r\n  :block/updated-at 1657725126382}\r\n {:block/name \"sat, 2020/08\",\r\n  :block/created-at 1657725157990,\r\n  :block/updated-at 1657725157990}\r\n {:block/name \"sat, 2020/08/15\",\r\n  :block/created-at 1657725123693,\r\n  :block/updated-at 1657725123693}\r\n {:block/name \"sat, 2022\",\r\n  :block/created-at 1657725120765,\r\n  :block/updated-at 1657725120765}\r\n {:block/name \"sat, 2022/06\",\r\n  :block/created-at 1657725121026,\r\n  :block/updated-at 1657725121026}\r\n {:block/name \"sat, 2022/06/18\",\r\n  :block/created-at 1657725121230,\r\n  :block/updated-at 1657725121230}\r\n {:block/name \"sat, 2022/06/25\",\r\n  :block/created-at 1657725121023,\r\n  :block/updated-at 1657725121023}\r\n {:block/name \"sat, 2022/07\",\r\n  :block/created-at 1657725120766,\r\n  :block/updated-at 1657725120766}\r\n {:block/name \"sat, 2022/07/02\",\r\n  :block/created-at 1657725120763,\r\n  :block/updated-at 1657725120763}\r\n {:block/name \"screw 生成数据库文档\",\r\n  :block/created-at 1655726440449,\r\n  :block/updated-at 1655726440449}\r\n {:block/name \"shardingshpere\",\r\n  :block/created-at 1655738419646,\r\n  :block/updated-at 1655738553261}\r\n {:block/name \"simpread\",\r\n  :block/created-at 1654610951063,\r\n  :block/updated-at 1654610951063}\r\n {:block/name \"spring boot调用 cmd 命令\",\r\n  :block/created-at 1655726440506,\r\n  :block/updated-at 1655726440506}\r\n {:block/name \"spring-data-elasticsearch 使用记录\",\r\n  :block/created-at 1653810522393,\r\n  :block/updated-at 1653810522393}\r\n {:block/name \"spring-data-elasticsearch 使用记录/md\",\r\n  :block/created-at 1653810522820,\r\n  :block/updated-at 1653810522820}\r\n {:block/name \"springboot\",\r\n  :block/created-at 1655460340300,\r\n  :block/updated-at 1655460340300}\r\n {:block/name \"springboot属性和配置文件的精细控制\",\r\n  :block/created-at 1655460339489,\r\n  :block/updated-at 1655460339489}\r\n {:block/name \"springboot集成redis过期回调\",\r\n  :block/created-at 1654610951474,\r\n  :block/updated-at 1654610951474}\r\n {:block/name \"sql\",\r\n  :block/created-at 1655726440447,\r\n  :block/updated-at 1655726440447}\r\n {:block/name \"sql优化\",\r\n  :block/created-at 1655738657961,\r\n  :block/updated-at 1655738702275}\r\n {:block/name \"stream\",\r\n  :block/created-at 1655209126555,\r\n  :block/updated-at 1655209126555}\r\n {:block/name \"sun, 2018/10\",\r\n  :block/created-at 1657725157989,\r\n  :block/updated-at 1657725157989}\r\n {:block/name \"sun, 2018/10/21\",\r\n  :block/created-at 1657725129122,\r\n  :block/updated-at 1657725129122}\r\n {:block/name \"sun, 2018/11\",\r\n  :block/created-at 1657725157991,\r\n  :block/updated-at 1657725157991}\r\n {:block/name \"sun, 2018/11/18\",\r\n  :block/created-at 1657725130181,\r\n  :block/updated-at 1657725130181}\r\n {:block/name \"sun, 2021/08\",\r\n  :block/created-at 1657725157991,\r\n  :block/updated-at 1657725157991}\r\n {:block/name \"sun, 2021/08/29\",\r\n  :block/created-at 1657725124689,\r\n  :block/updated-at 1657725124689}\r\n {:block/name \"sun, 2022\",\r\n  :block/created-at 1657725120538,\r\n  :block/updated-at 1657725120538}\r\n {:block/name \"sun, 2022/02\",\r\n  :block/created-at 1657725130611,\r\n  :block/updated-at 1657725130611}\r\n {:block/name \"sun, 2022/02/13\",\r\n  :block/created-at 1657725130609,\r\n  :block/updated-at 1657725130609}\r\n {:block/name \"sun, 2022/05\",\r\n  :block/created-at 1657725121598,\r\n  :block/updated-at 1657725121598}\r\n {:block/name \"sun, 2022/05/29\",\r\n  :block/created-at 1657725121594,\r\n  :block/updated-at 1657725121594}\r\n {:block/name \"sun, 2022/06\",\r\n  :block/created-at 1657725120987,\r\n  :block/updated-at 1657725120987}\r\n {:block/name \"sun, 2022/06/05\",\r\n  :block/created-at 1657725121503,\r\n  :block/updated-at 1657725121503}\r\n {:block/name \"sun, 2022/06/26\",\r\n  :block/created-at 1657725120984,\r\n  :block/updated-at 1657725120984}\r\n {:block/name \"sun, 2022/07\",\r\n  :block/created-at 1657725120539,\r\n  :block/updated-at 1657725120539}\r\n {:block/name \"sun, 2022/07/10\",\r\n  :block/created-at 1657725120537,\r\n  :block/updated-at 1657725120537}\r\n {:block/name \"test\",\r\n  :block/created-at 1653119134940,\r\n  :block/updated-at 1653119134940}\r\n {:block/name \"this.key\",\r\n  :block/created-at 1653119134936,\r\n  :block/updated-at 1653119134936}\r\n {:block/name \"this>4]”\",\r\n  :block/created-at 1653119134930,\r\n  :block/updated-at 1653119134930}\r\n {:block/name \"thu, 2021/06\",\r\n  :block/created-at 1657725157991,\r\n  :block/updated-at 1657725157991}\r\n {:block/name \"thu, 2021/06/17\",\r\n  :block/created-at 1657725124627,\r\n  :block/updated-at 1657725124627}\r\n {:block/name \"thu, 2022\",\r\n  :block/created-at 1657725120259,\r\n  :block/updated-at 1657725120259}\r\n {:block/name \"thu, 2022/05\",\r\n  :block/created-at 1657725120347,\r\n  :block/updated-at 1657725120347}\r\n {:block/name \"thu, 2022/05/19\",\r\n  :block/created-at 1657725120345,\r\n  :block/updated-at 1657725120345}\r\n {:block/name \"thu, 2022/05/26\",\r\n  :block/created-at 1657725121650,\r\n  :block/updated-at 1657725121650}\r\n {:block/name \"thu, 2022/06\",\r\n  :block/created-at 1657725120260,\r\n  :block/updated-at 1657725120260}\r\n {:block/name \"thu, 2022/06/09\",\r\n  :block/created-at 1657725120256,\r\n  :block/updated-at 1657725120256}\r\n {:block/name \"thu, 2022/06/23\",\r\n  :block/created-at 1657725121095,\r\n  :block/updated-at 1657725121095}\r\n {:block/name \"thu, 2022/06/30\",\r\n  :block/created-at 1657725120831,\r\n  :block/updated-at 1657725120831}\r\n {:block/name \"thu, 2022/07\",\r\n  :block/created-at 1657725120604,\r\n  :block/updated-at 1657725120604}\r\n {:block/name \"thu, 2022/07/07\",\r\n  :block/created-at 1657725120602,\r\n  :block/updated-at 1657725120602}\r\n {:block/name \"thu, 2022/07/14\",\r\n  :block/created-at 1657765706798,\r\n  :block/updated-at 1657765882646}\r\n {:block/name \"todo\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"tools\",\r\n  :block/created-at 1655771776969,\r\n  :block/updated-at 1655771776969}\r\n {:block/name \"tue, 06\",\r\n  :block/created-at 1655726442208,\r\n  :block/updated-at 1655726442208}\r\n {:block/name \"tue, 06/21\",\r\n  :block/created-at 1655740930886,\r\n  :block/updated-at 1655740930886}\r\n {:block/name \"tue, 06/21/2022\",\r\n  :block/created-at 1655773780985,\r\n  :block/updated-at 1655858065322}\r\n {:block/name \"tue, 2018/10\",\r\n  :block/created-at 1657725157990,\r\n  :block/updated-at 1657725157990}\r\n {:block/name \"tue, 2018/10/30\",\r\n  :block/created-at 1657725122661,\r\n  :block/updated-at 1657725122661}\r\n {:block/name \"tue, 2020/05\",\r\n  :block/created-at 1657725157991,\r\n  :block/updated-at 1657725157991}\r\n {:block/name \"tue, 2020/05/12\",\r\n  :block/created-at 1657725123436,\r\n  :block/updated-at 1657725123436}\r\n {:block/name \"tue, 2022\",\r\n  :block/created-at 1657725120478,\r\n  :block/updated-at 1657725120478}\r\n {:block/name \"tue, 2022/05\",\r\n  :block/created-at 1657725121764,\r\n  :block/updated-at 1657725121764}\r\n {:block/name \"tue, 2022/05/24\",\r\n  :block/created-at 1657725121762,\r\n  :block/updated-at 1657725121762}\r\n {:block/name \"tue, 2022/06\",\r\n  :block/created-at 1657725120901,\r\n  :block/updated-at 1657725120901}\r\n {:block/name \"tue, 2022/06/07\",\r\n  :block/created-at 1657725126718,\r\n  :block/updated-at 1657725126718}\r\n {:block/name \"tue, 2022/06/14\",\r\n  :block/created-at 1657725124378,\r\n  :block/updated-at 1657725124378}\r\n {:block/name \"tue, 2022/06/21\",\r\n  :block/created-at 1657725121122,\r\n  :block/updated-at 1657725121122}\r\n {:block/name \"tue, 2022/06/28\",\r\n  :block/created-at 1657725120899,\r\n  :block/updated-at 1657725120899}\r\n {:block/name \"tue, 2022/07\",\r\n  :block/created-at 1657725120479,\r\n  :block/updated-at 1657725120479}\r\n {:block/name \"tue, 2022/07/05\",\r\n  :block/created-at 1657725120683,\r\n  :block/updated-at 1657725120683}\r\n {:block/name \"tue, 2022/07/12\",\r\n  :block/created-at 1657725120477,\r\n  :block/updated-at 1657767004418}\r\n {:block/name \"typora\",\r\n  :block/created-at 1655728825246,\r\n  :block/updated-at 1655728864840}\r\n {:block/name \"ubuntu 20.04 live server安装\",\r\n  :block/created-at 1657113711067,\r\n  :block/updated-at 1657113711067}\r\n {:block/name\r\n  \"uploaded image file record - interactive(created by logseq-plugin-image-uploader)\",\r\n  :block/created-at 1653181392723,\r\n  :block/updated-at 1653181392960}\r\n {:block/name\r\n  \"uploaded image file record(created by logseq-plugin-image-uploader)\",\r\n  :block/created-at 1653181392305,\r\n  :block/updated-at 1653181392629}\r\n {:block/name \"vmware\",\r\n  :block/created-at 1655460340483,\r\n  :block/updated-at 1657531257609}\r\n {:block/name \"wait\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"waiting\",\r\n  :block/created-at 1652802656183,\r\n  :block/updated-at 1652802656183}\r\n {:block/name \"wed, 2020/03\",\r\n  :block/created-at 1657725157989,\r\n  :block/updated-at 1657725157989}\r\n {:block/name \"wed, 2020/03/25\",\r\n  :block/created-at 1657725127957,\r\n  :block/updated-at 1657725127957}\r\n {:block/name \"wed, 2020/05\",\r\n  :block/created-at 1657725157991,\r\n  :block/updated-at 1657725157991}\r\n {:block/name \"wed, 2020/05/13\",\r\n  :block/created-at 1657725123892,\r\n  :block/updated-at 1657725123892}\r\n {:block/name \"wed, 2020/05/27\",\r\n  :block/created-at 1657725127318,\r\n  :block/updated-at 1657725127318}\r\n {:block/name \"wed, 2021/12\",\r\n  :block/created-at 1657725157992,\r\n  :block/updated-at 1657725157992}\r\n {:block/name \"wed, 2021/12/01\",\r\n  :block/created-at 1657725128964,\r\n  :block/updated-at 1657725128964}\r\n {:block/name \"wed, 2022\",\r\n  :block/created-at 1657725120418,\r\n  :block/updated-at 1657725120418}\r\n {:block/name \"wed, 2022/05\",\r\n  :block/created-at 1657725121712,\r\n  :block/updated-at 1657725121712}\r\n {:block/name \"wed, 2022/05/25\",\r\n  :block/created-at 1657725121709,\r\n  :block/updated-at 1657725121709}\r\n {:block/name \"wed, 2022/06\",\r\n  :block/created-at 1657725120873,\r\n  :block/updated-at 1657725120873}\r\n {:block/name \"wed, 2022/06/01\",\r\n  :block/created-at 1657725121549,\r\n  :block/updated-at 1657725121549}\r\n {:block/name \"wed, 2022/06/08\",\r\n  :block/created-at 1657725121447,\r\n  :block/updated-at 1657725121447}\r\n {:block/name \"wed, 2022/06/15\",\r\n  :block/created-at 1657725121262,\r\n  :block/updated-at 1657725121262}\r\n {:block/name \"wed, 2022/06/29\",\r\n  :block/created-at 1657725120871,\r\n  :block/updated-at 1657725120871}\r\n {:block/name \"wed, 2022/07\",\r\n  :block/created-at 1657725120419,\r\n  :block/updated-at 1657725120419}\r\n {:block/name \"wed, 2022/07/06\",\r\n  :block/created-at 1657725120646,\r\n  :block/updated-at 1657725120646}\r\n {:block/name \"wed, 2022/07/13\",\r\n  :block/created-at 1657725120417,\r\n  :block/updated-at 1657765733447}\r\n {:block/name \"werf\",\r\n  :block/created-at 1657008045824,\r\n  :block/updated-at 1657008045824}\r\n {:block/name \"win11重装\",\r\n  :block/created-at 1655053358189,\r\n  :block/updated-at 1655053569714}\r\n {:block/name \"yolo\",\r\n  :block/created-at 1656691428667,\r\n  :block/updated-at 1656691428667}\r\n {:block/name \"yolov5\",\r\n  :block/created-at 1656691428666,\r\n  :block/updated-at 1656691428666}\r\n {:block/name \"yolov5_deepsort_tensorrt_cpp\",\r\n  :block/created-at 1656691428691,\r\n  :block/updated-at 1656691428691}\r\n {:block/name \"yolov6\",\r\n  :block/created-at 1656691428667,\r\n  :block/updated-at 1656691428667}\r\n {:block/name \"zabbix \",\r\n  :block/created-at 1655738808625,\r\n  :block/updated-at 1655738808625}\r\n {:block/name \"zabbix安装\",\r\n  :block/created-at 1655738766264,\r\n  :block/updated-at 1655738897854}\r\n {:block/name \"个人技术栈\",\r\n  :block/created-at 1656691428712,\r\n  :block/updated-at 1656691428712}\r\n {:block/name \"个人简历\",\r\n  :block/created-at 1653813725265,\r\n  :block/updated-at 1653813725265}\r\n {:block/name \"个人评价\",\r\n  :block/created-at 1653813725128,\r\n  :block/updated-at 1653813725128}\r\n {:block/name \"个人资料\",\r\n  :block/created-at 1653813725061,\r\n  :block/updated-at 1653813725061}\r\n {:block/name \"产品设计的十大顶级错误\",\r\n  :block/created-at 1654954246763,\r\n  :block/updated-at 1654954246763}\r\n {:block/name \"人体系统调优不完全指南\",\r\n  :block/created-at 1657013148249,\r\n  :block/updated-at 1657013151460}\r\n {:block/name \"任意时间延时消息原理讲解\",\r\n  :block/created-at 1654610951263,\r\n  :block/updated-at 1654610951263}\r\n {:block/name \"企业日志收集系统\",\r\n  :block/created-at 1657673064107,\r\n  :block/updated-at 1657673064107}\r\n {:block/name \"企业附件存储系统\",\r\n  :block/created-at 1657113711209,\r\n  :block/updated-at 1657113711209}\r\n {:block/name \"写给程序员的机器学习入门\",\r\n  :block/created-at 1657008045821,\r\n  :block/updated-at 1657248376734}\r\n {:block/name \"凤凰架构\",\r\n  :block/created-at 1655726438407,\r\n  :block/updated-at 1655788158497}\r\n {:block/name \"前端\",\r\n  :block/created-at 1656691428711,\r\n  :block/updated-at 1656691428711}\r\n {:block/name \"动态数据源\",\r\n  :block/created-at 1654788370510,\r\n  :block/updated-at 1654788370510}\r\n {:block/name \"动态规划\",\r\n  :block/created-at 1655738935119,\r\n  :block/updated-at 1655738982589}\r\n {:block/name \"区块链\",\r\n  :block/created-at 1653814788239,\r\n  :block/updated-at 1653828795402}\r\n {:block/name \"华为服务器\",\r\n  :block/created-at 1657530474892,\r\n  :block/updated-at 1657767624528}\r\n {:block/name \"同步直接调用的问题\",\r\n  :block/created-at 1656691428355,\r\n  :block/updated-at 1656691428355}\r\n {:block/name \"后端\",\r\n  :block/created-at 1656691428710,\r\n  :block/updated-at 1656691428710}\r\n {:block/name \"四维提升\",\r\n  :block/created-at 1653813725226,\r\n  :block/updated-at 1653813725226}\r\n {:block/name \"基于注解@scheduled的定时任务配置\",\r\n  :block/created-at 1655726440926,\r\n  :block/updated-at 1655726440926}\r\n {:block/name \"如何运行python项目\",\r\n  :block/created-at 1655460339533,\r\n  :block/updated-at 1655460339533}\r\n {:block/name \"学历信息\",\r\n  :block/created-at 1653813725116,\r\n  :block/updated-at 1653813725116}\r\n {:block/name \"宝塔\",\r\n  :block/created-at 1655726441378,\r\n  :block/updated-at 1655726441378}\r\n {:block/name \"小爱同学控制电脑开关机\",\r\n  :block/created-at 1656691428825,\r\n  :block/updated-at 1656691428825}\r\n {:block/name \"小米路由器\",\r\n  :block/created-at 1657673063536,\r\n  :block/updated-at 1657673063536}\r\n {:block/name \"工作\",\r\n  :block/created-at 1653119134045,\r\n  :block/updated-at 1653119134045}\r\n {:block/name \"工作经历\",\r\n  :block/created-at 1653813725243,\r\n  :block/updated-at 1653813725243}\r\n {:block/name \"工程\",\r\n  :block/created-at 1654850862846,\r\n  :block/updated-at 1654850862846}\r\n {:block/name \"常见web系统默认口令总结\",\r\n  :block/created-at 1655460340693,\r\n  :block/updated-at 1655460340693}\r\n {:block/name \"延迟消息\",\r\n  :block/created-at 1654610951468,\r\n  :block/updated-at 1654610951468}\r\n {:block/name \"延迟消息如何实现\",\r\n  :block/created-at 1654610951328,\r\n  :block/updated-at 1654610951328}\r\n {:block/name \"报错\",\r\n  :block/created-at 1653810521876,\r\n  :block/updated-at 1653810521876}\r\n {:block/name \"数据类型\",\r\n  :block/created-at 1655736481994,\r\n  :block/updated-at 1655736484484}\r\n {:block/name \"机器学习\",\r\n  :block/created-at 1657245640126,\r\n  :block/updated-at 1657245640126}\r\n {:block/name \"正则表达式\",\r\n  :block/created-at 1652968895848,\r\n  :block/updated-at 1652968895848}\r\n {:block/name \"深入理解rocketmq延迟消息\",\r\n  :block/created-at 1654610951101,\r\n  :block/updated-at 1654610951101}\r\n {:block/name \"狂野架构师\",\r\n  :block/created-at 1657008047404,\r\n  :block/updated-at 1657008047404}\r\n {:block/name \"琼琼代码日记\",\r\n  :block/created-at 1657499651312,\r\n  :block/updated-at 1657499651312}\r\n {:block/name \"电脑配置单\",\r\n  :block/created-at 1655726438405,\r\n  :block/updated-at 1655726438405}\r\n {:block/name \"疑似23.88tb的上海政府国家警察数据库泄露\",\r\n  :block/created-at 1657008045613,\r\n  :block/updated-at 1657008045613}\r\n {:block/name \"算法\",\r\n  :block/created-at 1655738982587,\r\n  :block/updated-at 1655738982587}\r\n {:block/name \"网关\",\r\n  :block/created-at 1653119133796,\r\n  :block/updated-at 1653119133796}\r\n {:block/name \"网络技术\",\r\n  :block/created-at 1655726441052,\r\n  :block/updated-at 1655726441052}\r\n {:block/name \"计算机视觉\",\r\n  :block/created-at 1656691428710,\r\n  :block/updated-at 1656691428710}\r\n {:block/name \"读书笔记\",\r\n  :block/created-at 1655730748188,\r\n  :block/updated-at 1655730748188}\r\n {:block/name \"迁移旧笔记\",\r\n  :block/created-at 1655726438402,\r\n  :block/updated-at 1655739123854}\r\n {:block/name \"部分回调事件消息无法进入消息队列\",\r\n  :block/created-at 1654097298022,\r\n  :block/updated-at 1654097312482}\r\n {:block/name \"配置单\",\r\n  :block/created-at 1653810521081,\r\n  :block/updated-at 1654098506644}\r\n {:block/name \"阿里云使用宝塔面板部署hexo\",\r\n  :block/created-at 1655726441251,\r\n  :block/updated-at 1655726441251}\r\n {:block/name \"附件\",\r\n  :block/created-at 1652968895843,\r\n  :block/updated-at 1652968895843}\r\n {:block/name \"项目登录账号密码错误\",\r\n  :block/created-at 1654098125675,\r\n  :block/updated-at 1654098176147}\r\n {:block/name \"项目经历\",\r\n  :block/created-at 1653813724960,\r\n  :block/updated-at 1657719998585}\r\n {:block/name \"高可用，可靠\",\r\n  :block/created-at 1655736550462,\r\n  :block/updated-at 1655736552929}\r\n {:block/name \"黑群晖 折腾笔记\",\r\n  :block/created-at 1655739011473, \r\n  :block/updated-at 1655739047028}]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/logseq/pages-metadata.edn b/logseq/pages-metadata.edn
--- a/logseq/pages-metadata.edn	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ b/logseq/pages-metadata.edn	(date 1657892153178)
@@ -34,9 +34,15 @@
  {:block/name "\"tue, 06/14/2022\"",
   :block/created-at 1657008067484,
   :block/updated-at 1657008067484}
+ {:block/name "\"tue, 06/21",
+  :block/created-at 1657724776849,
+  :block/updated-at 1657724776849}
  {:block/name "\"tue, 06/21\"",
   :block/created-at 1657499651227,
   :block/updated-at 1657499651227}
+ {:block/name "\"tue, 06/21/2022\"",
+  :block/created-at 1657724776848,
+  :block/updated-at 1657724776848}
  {:block/name "\"wed, 06",
   :block/created-at 1657154864115,
   :block/updated-at 1657154864115}
@@ -131,8 +137,8 @@
   :block/created-at 1657121448326,
   :block/updated-at 1657121448326}
  {:block/name "62ce15ac-f1c9-4d48-b844-8836f236aa2e",
-  :block/created-at 1657673154213,
-  :block/updated-at 1657673154213}
+  :block/created-at 1657801287649,
+  :block/updated-at 1657801287649}
  {:block/name "8.0.3",
   :block/created-at 1653810521583,
   :block/updated-at 1653810521583}
@@ -358,6 +364,9 @@
  {:block/name "fri, 2022/07/08",
   :block/created-at 1657725120570,
   :block/updated-at 1657725120570}
+ {:block/name "fri, 2022/07/15",
+  :block/created-at 1657814402248,
+  :block/updated-at 1657814402248}
  {:block/name "godeng",
   :block/created-at 1657008045833,
   :block/updated-at 1657008045833}
@@ -371,8 +380,8 @@
   :block/created-at 1655726441376,
   :block/updated-at 1655726441376}
  {:block/name "hls__rh2288h_v3_服务器_v100r003_用户指南_43_1657673098179_0",
-  :block/created-at 1657674951844,
-  :block/updated-at 1657674951844}
+  :block/created-at 1657801287527,
+  :block/updated-at 1657801287527}
  {:block/name "hls__the-fenix-project_1655709041362_0",
   :block/created-at 1655726439811,
   :block/updated-at 1655726439811}
@@ -380,8 +389,8 @@
   :block/created-at 1654096261576,
   :block/updated-at 1654096261576}
  {:block/name "hls__华为v2&v3服务器_raid控制卡_用户指南_49_1657590039514_0",
-  :block/created-at 1657673064410,
-  :block/updated-at 1657673064410}
+  :block/created-at 1657801287546,
+  :block/updated-at 1657801287546}
  {:block/name "home",
   :block/created-at 1652894301337,
   :block/updated-at 1652894301337}
@@ -417,7 +426,7 @@
   :block/updated-at 1653810522371}
  {:block/name "kubernetes",
   :block/created-at 1657008046929,
-  :block/updated-at 1657122855033}
+  :block/updated-at 1657815700129}
  {:block/name "later",
   :block/created-at 1652802656183,
   :block/updated-at 1652802656183}
@@ -425,8 +434,8 @@
   :block/created-at 1657008045817,
   :block/updated-at 1657008045817}
  {:block/name "linux",
-  :block/created-at 1657499730642,
-  :block/updated-at 1657499730642}
+  :block/created-at 1657801287845,
+  :block/updated-at 1657801287845}
  {:block/name "logcenter-server",
   :block/created-at 1653453230610,
   :block/updated-at 1653453230610}
@@ -531,7 +540,7 @@
   :block/updated-at 1657113710899}
  {:block/name "rabbitmq",
   :block/created-at 1654097423945,
-  :block/updated-at 1657720558044}
+  :block/updated-at 1657809703049}
  {:block/name "rabbitmq docker安装",
   :block/created-at 1657008047003,
   :block/updated-at 1657008047003}
@@ -544,6 +553,9 @@
  {:block/name "rabbitmq windows 安装",
   :block/created-at 1656691428425,
   :block/updated-at 1656691428425}
+ {:block/name "rabbitmq 持久化失效的问题",
+  :block/created-at 1657809481034,
+  :block/updated-at 1657809679601}
  {:block/name "redis",
   :block/created-at 1655730945997,
   :block/updated-at 1655864871224}
@@ -586,12 +598,18 @@
  {:block/name "sat, 2022/07/02",
   :block/created-at 1657725120763,
   :block/updated-at 1657725120763}
+ {:block/name "sat, 2022/07/09",
+  :block/created-at 1657332743736,
+  :block/updated-at 1657332743736}
  {:block/name "screw 生成数据库文档",
   :block/created-at 1655726440449,
   :block/updated-at 1655726440449}
  {:block/name "shardingshpere",
   :block/created-at 1655738419646,
   :block/updated-at 1655738553261}
+ {:block/name "showdoc",
+  :block/created-at 1657801287064,
+  :block/updated-at 1657801287064}
  {:block/name "simpread",
   :block/created-at 1654610951063,
   :block/updated-at 1654610951063}
@@ -601,9 +619,6 @@
  {:block/name "spring-data-elasticsearch 使用记录",
   :block/created-at 1653810522393,
   :block/updated-at 1653810522393}
- {:block/name "spring-data-elasticsearch 使用记录/md",
-  :block/created-at 1653810522820,
-  :block/updated-at 1653810522820}
  {:block/name "springboot",
   :block/created-at 1655460340300,
   :block/updated-at 1655460340300}
@@ -717,7 +732,7 @@
   :block/updated-at 1657725120602}
  {:block/name "thu, 2022/07/14",
   :block/created-at 1657765706798,
-  :block/updated-at 1657765882646}
+  :block/updated-at 1657814248977}
  {:block/name "todo",
   :block/created-at 1652802656183,
   :block/updated-at 1652802656183}
@@ -794,7 +809,7 @@
   :block/updated-at 1653181392629}
  {:block/name "vmware",
   :block/created-at 1655460340483,
-  :block/updated-at 1657531257609}
+  :block/updated-at 1657814575085}
  {:block/name "wait",
   :block/created-at 1652802656183,
   :block/updated-at 1652802656183}
@@ -901,8 +916,8 @@
   :block/created-at 1654610951263,
   :block/updated-at 1654610951263}
  {:block/name "企业日志收集系统",
-  :block/created-at 1657673064107,
-  :block/updated-at 1657673064107}
+  :block/created-at 1657801287786,
+  :block/updated-at 1657801287786}
  {:block/name "企业附件存储系统",
   :block/created-at 1657113711209,
   :block/updated-at 1657113711209}
Index: journals/2022-07-12.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>- [[华为服务器]]环境安装\r\n- [[小米路由器]]\r\n-\r\n-
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/journals/2022-07-12.md b/journals/2022-07-12.md
--- a/journals/2022-07-12.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ b/journals/2022-07-12.md	(date 1657801531749)
@@ -1,4 +1,5 @@
 - [[华为服务器]]环境安装
 - [[小米路由器]]
 -
+-
 -
\ No newline at end of file
Index: pages/VMWare.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>- [官网](https://www.vmware.com/)\r\n  title:: VMware\r\n- [果核破解版](https://www.ghxi.com/vmware15.html)\r\n  collapsed:: true\r\n\t- [16版本网盘](https://www.123pan.com/s/HQeA-aX1Sh)\r\n\t- 激活码\r\n\t\t- 16版本\r\n\t\t\t- ZF3R0-FHED2-M80TY-8QYGC-NPKYF\r\n\t\t- 15版本\r\n\t\t\t- 可以使用网盘附带的注册机算key激活，或者直接使用下面的一组激活即可\r\n\t\t\t- FG78K-0UZ15-085TQ-TZQXV-XV0CD\r\n\t\t\t- ZA11U-DVY97-M81LP-4MNEZ-X3AW0\r\n\t\t\t- YU102-44D86-48D2Z-Z4Q5C-MFAWD\r\n- Ubuntu for server live 下安装\r\n  collapsed:: true\r\n\t- [安装包下载地址](https://customerconnect.vmware.com/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/16_0)\r\n- JA0W8-AX216-08E19-A995H-1PHH2
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/VMWare.md b/pages/VMWare.md
--- a/pages/VMWare.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ b/pages/VMWare.md	(date 1657814575296)
@@ -11,7 +11,12 @@
 			- FG78K-0UZ15-085TQ-TZQXV-XV0CD
 			- ZA11U-DVY97-M81LP-4MNEZ-X3AW0
 			- YU102-44D86-48D2Z-Z4Q5C-MFAWD
+- JA0W8-AX216-08E19-A995H-1PHH2
 - Ubuntu for server live 下安装
   collapsed:: true
 	- [安装包下载地址](https://customerconnect.vmware.com/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/16_0)
-- JA0W8-AX216-08E19-A995H-1PHH2
\ No newline at end of file
+	- Centos 源
+		- mirrors.aliyun.com/centos/8.3.2011/BaseOS/x86_64/os
+- 网络设定
+	- ![image.png](../assets/image_1657814307359_0.png)
+	- ![image.png](../assets/image_1657814574546_0.png)
\ No newline at end of file
Index: pages/Kubernetes.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>- title: k8s\r\n-\r\n- 什么是**Kubernetes**\r\n  collapsed:: true\r\n\t- 一个为 容器化 应用提供集群部署和管理的开源工具，由 Google 开发。\r\n\t- Kubernetes 可以为你提供集中式的管理集群机器和应用，加机器、版本升级、版本回滚，那都是一个命令就搞定的事，不停机的灰度更新，确保高可用、高性能、高扩展。\r\n- 主要特性\r\n  collapsed:: true\r\n\t- 高可用，不宕机，自动灾难恢复\r\n\t- 灰度更新，不影响业务正常运转\r\n\t- 一键回滚到历史版本\r\n\t- 方便的伸缩扩展（应用伸缩，机器加减）、提供负载均衡\r\n\t  有一个完善的生态\r\n- 不同的应用部署方案\r\n  collapsed:: true\r\n\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1657116813488_0.png)\r\n\t- 传统部署方式\r\n\t  collapsed:: true\r\n\t\t- 应用直接在物理机上部署，机器资源分配不好控制，出现Bug时，可能机器的大部分资源被某个应用占用，导致其他应用无法正常运行，无法做到应用隔离。\r\n\t- 虚拟机部署\r\n\t\t- 在单个物理机上运行多个虚拟机，每个虚拟机都是完整独立的系统，性能损耗大。\r\n\t- 容器部署\r\n\t\t- 所有容器共享主机的系统，轻量级的虚拟机，性能损耗小，资源隔离，CPU和内存可按需分配\r\n- 集群架构\r\n  collapsed:: true\r\n\t- Master与worker\r\n\t  collapsed:: true\r\n\t\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1657116981321_0.png)\r\n\t\t- master\r\n\t\t  collapsed:: true\r\n\t\t\t- 主节点，控制平台，不需要很高性能，不跑任务，通常一个就行了，也可以开多个主节点来提高集群可用度。\r\n\t\t- worker\r\n\t\t  collapsed:: true\r\n\t\t\t- 工作节点，可以是虚拟机或物理计算机，任务都在这里跑，机器性能需要好点；通常都有很多个，可以不断加机器扩大集群；每个工作节点由主节点管理\r\n\t- Pod\r\n\t  collapsed:: true\r\n\t\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1657117094875_0.png)\r\n\t\t- K8S 调度、管理的最小单位，一个 Pod 可以包含一个或多个容器，每个 Pod 有自己的虚拟IP。\r\n\t\t- 一个工作节点可以有多个 pod，主节点会考量负载自动调度 pod 到哪个节点运行。\r\n\t\t- **StatefulSet**: 定义一组有状态Pod,K8S将自动维护\r\n\t\t- **Deployment**: 定义一组无状态Pod,K8S将自动维护\r\n\t\t- **Service**: 一组Pod的抽象访问方式，相当于负载均衡器\r\n\t- 组件\r\n\t  collapsed:: true\r\n\t\t- ![Replaced by Image Uploder](https://cdn.jsdelivr.net/gh/GayHub1/images@master/img/image_1657117769317_0.png)\r\n\t\t- kube-apiserver\r\n\t\t  collapsed:: true\r\n\t\t\t- API 服务器，公开了 Kubernetes API\r\n\t\t- etcd\r\n\t\t  collapsed:: true\r\n\t\t\t- 键值数据库，可以作为保存 Kubernetes 所有集群数据的后台数据库\r\n\t\t- kube-scheduler\r\n\t\t  collapsed:: true\r\n\t\t\t- 调度 Pod 到哪个节点运行\r\n\t\t- kube-controller\r\n\t\t  collapsed:: true\r\n\t\t\t- 集群控制器\r\n\t\t- cloud-controller\r\n\t\t  collapsed:: true\r\n\t\t\t- 与云服务商交互\r\n\t\t- [官网详情](https://kubernetes.io/zh-cn/docs/concepts/overview/components/)\r\n\t\t-\r\n\t\t-\r\n\t\t-\r\n- 安装 Kubernetes 集群\r\n  collapsed:: true\r\n\t- > 非云平台均需要Docker环境\r\n\t- minikube\r\n\t  id:: 62c59c8e-19e7-4228-9fb8-4282c29971b9\r\n\t  collapsed:: true\r\n\t\t- 只是一个 K8S 集群模拟器，只有一个节点的集群，只为测试用，master 和 worker 都在一起\r\n\t\t- [安装方法](https://minikube.sigs.k8s.io/docs/start/)\r\n\t- 直接用云平台 Kubernetes\r\n\t  collapsed:: true\r\n\t\t- 可视化搭建，只需简单几步就可以创建好一个集群。\r\n\t\t  优点：安装简单，生态齐全，负载均衡器、存储等都给你配套好，简单操作就搞定\r\n\t\t- [腾讯云容器服务 TKE](https://cloud.tencent.com/product/tke) （控制台搜索容器）\r\n\t\t  登录阿里云控制台 - 产品搜索 Kubernetes\r\n\t- 裸机安装（Bare Metal）\r\n\t\t- 缺点\r\n\t\t  collapsed:: true\r\n\t\t\t- 至少需要两台机器（主节点、工作节点个一台），需要自己安装 Kubernetes 组件，配置会稍微麻烦点。\r\n\t\t\t  可以到各云厂商按时租用服务器，费用低，用完就销毁。\r\n\t\t\t  缺点：配置麻烦，缺少生态支持，例如负载均衡器、云存储。\r\n\t\t- 主节点需要组件\r\n\t\t  collapsed:: true\r\n\t\t\t- docker（也可以是其他容器运行时）\r\n\t\t\t- kubectl 集群命令行交互工具\r\n\t\t\t- kubeadm 集群初始化工具\r\n\t\t- 工作节点需要组件\r\n\t\t  collapsed:: true\r\n\t\t\t- docker（也可以是其他容器运行时）\r\n\t\t\t- kubelet 管理 Pod 和容器，确保他们健康稳定运行。\r\n\t\t\t\t- kube-proxy 网络代理，负责网络相关的工作\r\n\t\t- 手动搭建\r\n\t\t  collapsed:: true\r\n\t\t\t- 安装docker\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- {{embed ((62c58c80-6b37-4239-bdc0-10760eef278f))}}\r\n\t\t\t- 修改host\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  # 所有节点都修改 hosts\r\n\t\t\t\t  vim /etc/hosts\r\n\t\t\t\t  192.168.0.112 CentOS8-001\r\n\t\t\t\t  192.168.0.113 CentOS8-002\r\n\t\t\t\t  192.168.0.114 CentOS8-003\r\n\t\t\t\t  ```\r\n\t\t\t- 关闭 SELinux\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  setenforce 0\r\n\t\t\t\t  sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux\r\n\t\t\t\t  ```\r\n\t\t\t- 关闭防火墙\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  systemctl stop firewalld\r\n\t\t\t\t  systemctl disable firewalld\r\n\t\t\t\t  ```\r\n\t\t\t- 添加安装源\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  # 添加 k8s 安装源\r\n\t\t\t\t  cat <<EOF > kubernetes.repo\r\n\t\t\t\t  [kubernetes]\r\n\t\t\t\t  name=Kubernetes\r\n\t\t\t\t  baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\r\n\t\t\t\t  enabled=1\r\n\t\t\t\t  gpgcheck=0\r\n\t\t\t\t  repo_gpgcheck=0\r\n\t\t\t\t  gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\r\n\t\t\t\t  EOF\r\n\t\t\t\t  mv kubernetes.repo /etc/yum.repos.d/\r\n\t\t\t\t  \r\n\t\t\t\t  # 添加 Docker 安装源\r\n\t\t\t\t  yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n\t\t\t\t  ```\r\n\t\t\t- 安装所需组件\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  yum install -y kubelet-1.22.4 kubectl-1.22.4 kubeadm-1.22.4\r\n\t\t\t\t  ```\r\n\t\t\t- 启动 kubelet、docker，并设置开机启动\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  systemctl enable kubelet\r\n\t\t\t\t  systemctl start kubelet\r\n\t\t\t\t  systemctl enable docker\r\n\t\t\t\t  systemctl start docker\r\n\t\t\t\t  ```\r\n\t\t\t- 修改 docker 配置\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  # kubernetes 官方推荐 docker 等使用 systemd 作为 cgroupdriver，否则 kubelet 启动不了\r\n\t\t\t\t  cat <<EOF > daemon.json\r\n\t\t\t\t  {\r\n\t\t\t\t    \"exec-opts\": [\"native.cgroupdriver=systemd\"],\r\n\t\t\t\t    \"registry-mirrors\": [\"https://ud6340vz.mirror.aliyuncs.com\"]\r\n\t\t\t\t  }\r\n\t\t\t\t  EOF\r\n\t\t\t\t  mv daemon.json /etc/docker/\r\n\t\t\t\t  \r\n\t\t\t\t  # 重启生效\r\n\t\t\t\t  systemctl daemon-reload\r\n\t\t\t\t  systemctl restart docker\r\n\t\t\t\t  ```\r\n\t\t\t- 关闭swap分区\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  swapoff -a\r\n\t\t\t\t  ```\r\n\t\t\t- ---\r\n\t\t\t- 用 kubeadm 初始化集群（仅在主节点跑)\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  \r\n\t\t\t\t  # 初始化集群控制台 Control plane\r\n\t\t\t\t  # 失败了可以用 kubeadm reset 重置\r\n\t\t\t\t  kubeadm init --image-repository=registry.aliyuncs.com/google_containers\r\n\t\t\t\t  \r\n\t\t\t\t  # 记得把 kubeadm join xxx 保存起来 (大概是在最后面的位置)\r\n\t\t\t\t  # 忘记了重新获取：kubeadm token create --print-join-command\r\n\t\t\t\t  \r\n\t\t\t\t  # 复制授权文件，以便 kubectl 可以有权限访问集群\r\n\t\t\t\t  # 如果你其他节点需要访问集群，需要从主节点复制这个文件过去其他节点\r\n\t\t\t\t  mkdir -p $HOME/.kube\r\n\t\t\t\t  cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\r\n\t\t\t\t  chown $(id -u):$(id -g) $HOME/.kube/config\r\n\t\t\t\t  \r\n\t\t\t\t  # 在其他机器上创建 ~/.kube/config 文件也能通过 kubectl 访问到集群\r\n\t\t\t\t  ```\r\n\t\t\t\t- [kubeadm init  做了啥](https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/)\r\n\t\t\t- 把工作节点加入集群（只在工作节点跑）\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  kubeadm join 192.168.0.112:6443 --token m1aebg.gbtul07qttzju3le \\\r\n\t\t\t\t          --discovery-token-ca-cert-hash sha256:a7bca1335811e6e49c0dd01377ab58937f19b5894b5a10ad0f171afe86177ce8 \r\n\t\t\t\t  ```\r\n\t\t\t- 安装网络插件（主节点跑）\r\n\t\t\t  collapsed:: true\r\n\t\t\t\t- ```sh\r\n\t\t\t\t  # 很有可能国内网络访问不到这个资源，你可以网上找找国内的源安装 flannel\r\n\t\t\t\t  kubectl apply -f ./kube-flannel.yml\r\n\t\t\t\t  ```\r\n\t\t\t\t- kube-flannel.yml 文件内容如下\r\n\t\t\t\t- ```yml\r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/calico-config.yaml\r\n\t\t\t\t  # This ConfigMap is used to configure a self-hosted Calico installation.\r\n\t\t\t\t  kind: ConfigMap\r\n\t\t\t\t  apiVersion: v1\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-config\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t  data:\r\n\t\t\t\t    # Typha is disabled.\r\n\t\t\t\t    typha_service_name: \"none\"\r\n\t\t\t\t    # Configure the backend to use.\r\n\t\t\t\t    calico_backend: \"bird\"\r\n\t\t\t\t  \r\n\t\t\t\t    # Configure the MTU to use for workload interfaces and tunnels.\r\n\t\t\t\t    # By default, MTU is auto-detected, and explicitly setting this field should not be required.\r\n\t\t\t\t    # You can override auto-detection by providing a non-zero value.\r\n\t\t\t\t    veth_mtu: \"0\"\r\n\t\t\t\t  \r\n\t\t\t\t    # The CNI network configuration to install on each node. The special\r\n\t\t\t\t    # values in this config will be automatically populated.\r\n\t\t\t\t    cni_network_config: |-\r\n\t\t\t\t      {\r\n\t\t\t\t        \"name\": \"k8s-pod-network\",\r\n\t\t\t\t        \"cniVersion\": \"0.3.1\",\r\n\t\t\t\t        \"plugins\": [\r\n\t\t\t\t          {\r\n\t\t\t\t            \"type\": \"calico\",\r\n\t\t\t\t            \"log_level\": \"info\",\r\n\t\t\t\t            \"log_file_path\": \"/var/log/calico/cni/cni.log\",\r\n\t\t\t\t            \"datastore_type\": \"kubernetes\",\r\n\t\t\t\t            \"nodename\": \"__KUBERNETES_NODE_NAME__\",\r\n\t\t\t\t            \"mtu\": __CNI_MTU__,\r\n\t\t\t\t            \"ipam\": {\r\n\t\t\t\t                \"type\": \"calico-ipam\"\r\n\t\t\t\t            },\r\n\t\t\t\t            \"policy\": {\r\n\t\t\t\t                \"type\": \"k8s\"\r\n\t\t\t\t            },\r\n\t\t\t\t            \"kubernetes\": {\r\n\t\t\t\t                \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\r\n\t\t\t\t            }\r\n\t\t\t\t          },\r\n\t\t\t\t          {\r\n\t\t\t\t            \"type\": \"portmap\",\r\n\t\t\t\t            \"snat\": true,\r\n\t\t\t\t            \"capabilities\": {\"portMappings\": true}\r\n\t\t\t\t          },\r\n\t\t\t\t          {\r\n\t\t\t\t            \"type\": \"bandwidth\",\r\n\t\t\t\t            \"capabilities\": {\"bandwidth\": true}\r\n\t\t\t\t          }\r\n\t\t\t\t        ]\r\n\t\t\t\t      }\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/kdd-crds.yaml\r\n\t\t\t\t  \r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: bgpconfigurations.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: BGPConfiguration\r\n\t\t\t\t      listKind: BGPConfigurationList\r\n\t\t\t\t      plural: bgpconfigurations\r\n\t\t\t\t      singular: bgpconfiguration\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          description: BGPConfiguration contains the configuration for any BGP routing.\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: BGPConfigurationSpec contains the values of the BGP configuration.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                asNumber:\r\n\t\t\t\t                  description: 'ASNumber is the default AS number used by a node. [Default:\r\n\t\t\t\t                    64512]'\r\n\t\t\t\t                  format: int32\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                communities:\r\n\t\t\t\t                  description: Communities is a list of BGP community values and their\r\n\t\t\t\t                    arbitrary names for tagging routes.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: Community contains standard or large community value\r\n\t\t\t\t                      and its name.\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      name:\r\n\t\t\t\t                        description: Name given to community value.\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      value:\r\n\t\t\t\t                        description: Value must be of format `aa:nn` or `aa:nn:mm`.\r\n\t\t\t\t                          For standard community use `aa:nn` format, where `aa` and\r\n\t\t\t\t                          `nn` are 16 bit number. For large community use `aa:nn:mm`\r\n\t\t\t\t                          format, where `aa`, `nn` and `mm` are 32 bit number. Where,\r\n\t\t\t\t                          `aa` is an AS Number, `nn` and `mm` are per-AS identifier.\r\n\t\t\t\t                        pattern: ^(\\d+):(\\d+)$|^(\\d+):(\\d+):(\\d+)$\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                listenPort:\r\n\t\t\t\t                  description: ListenPort is the port where BGP protocol should listen.\r\n\t\t\t\t                    Defaults to 179\r\n\t\t\t\t                  maximum: 65535\r\n\t\t\t\t                  minimum: 1\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                logSeverityScreen:\r\n\t\t\t\t                  description: 'LogSeverityScreen is the log severity above which logs\r\n\t\t\t\t                    are sent to the stdout. [Default: INFO]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                nodeToNodeMeshEnabled:\r\n\t\t\t\t                  description: 'NodeToNodeMeshEnabled sets whether full node to node\r\n\t\t\t\t                    BGP mesh is enabled. [Default: true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                prefixAdvertisements:\r\n\t\t\t\t                  description: PrefixAdvertisements contains per-prefix advertisement\r\n\t\t\t\t                    configuration.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: PrefixAdvertisement configures advertisement properties\r\n\t\t\t\t                      for the specified CIDR.\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      cidr:\r\n\t\t\t\t                        description: CIDR for which properties should be advertised.\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      communities:\r\n\t\t\t\t                        description: Communities can be list of either community names\r\n\t\t\t\t                          already defined in `Specs.Communities` or community value\r\n\t\t\t\t                          of format `aa:nn` or `aa:nn:mm`. For standard community use\r\n\t\t\t\t                          `aa:nn` format, where `aa` and `nn` are 16 bit number. For\r\n\t\t\t\t                          large community use `aa:nn:mm` format, where `aa`, `nn` and\r\n\t\t\t\t                          `mm` are 32 bit number. Where,`aa` is an AS Number, `nn` and\r\n\t\t\t\t                          `mm` are per-AS identifier.\r\n\t\t\t\t                        items:\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                        type: array\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                serviceClusterIPs:\r\n\t\t\t\t                  description: ServiceClusterIPs are the CIDR blocks from which service\r\n\t\t\t\t                    cluster IPs are allocated. If specified, Calico will advertise these\r\n\t\t\t\t                    blocks, as well as any cluster IPs within them.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: ServiceClusterIPBlock represents a single allowed ClusterIP\r\n\t\t\t\t                      CIDR block.\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      cidr:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                serviceExternalIPs:\r\n\t\t\t\t                  description: ServiceExternalIPs are the CIDR blocks for Kubernetes\r\n\t\t\t\t                    Service External IPs. Kubernetes Service ExternalIPs will only be\r\n\t\t\t\t                    advertised if they are within one of these blocks.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: ServiceExternalIPBlock represents a single allowed\r\n\t\t\t\t                      External IP CIDR block.\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      cidr:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                serviceLoadBalancerIPs:\r\n\t\t\t\t                  description: ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes\r\n\t\t\t\t                    Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress\r\n\t\t\t\t                    IPs will only be advertised if they are within one of these blocks.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: ServiceLoadBalancerIPBlock represents a single allowed\r\n\t\t\t\t                      LoadBalancer IP CIDR block.\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      cidr:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: bgppeers.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: BGPPeer\r\n\t\t\t\t      listKind: BGPPeerList\r\n\t\t\t\t      plural: bgppeers\r\n\t\t\t\t      singular: bgppeer\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: BGPPeerSpec contains the specification for a BGPPeer resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                asNumber:\r\n\t\t\t\t                  description: The AS Number of the peer.\r\n\t\t\t\t                  format: int32\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                keepOriginalNextHop:\r\n\t\t\t\t                  description: Option to keep the original nexthop field when routes\r\n\t\t\t\t                    are sent to a BGP Peer. Setting \"true\" configures the selected BGP\r\n\t\t\t\t                    Peers node to use the \"next hop keep;\" instead of \"next hop self;\"(default)\r\n\t\t\t\t                    in the specific branch of the Node on \"bird.cfg\".\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                maxRestartTime:\r\n\t\t\t\t                  description: Time to allow for software restart.  When specified, this\r\n\t\t\t\t                    is configured as the graceful restart timeout.  When not specified,\r\n\t\t\t\t                    the BIRD default of 120s is used.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                node:\r\n\t\t\t\t                  description: The node name identifying the Calico node instance that\r\n\t\t\t\t                    is targeted by this peer. If this is not set, and no nodeSelector\r\n\t\t\t\t                    is specified, then this BGP peer selects all nodes in the cluster.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                nodeSelector:\r\n\t\t\t\t                  description: Selector for the nodes that should have this peering.  When\r\n\t\t\t\t                    this is set, the Node field must be empty.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                password:\r\n\t\t\t\t                  description: Optional BGP password for the peerings generated by this\r\n\t\t\t\t                    BGPPeer resource.\r\n\t\t\t\t                  properties:\r\n\t\t\t\t                    secretKeyRef:\r\n\t\t\t\t                      description: Selects a key of a secret in the node pod's namespace.\r\n\t\t\t\t                      properties:\r\n\t\t\t\t                        key:\r\n\t\t\t\t                          description: The key of the secret to select from.  Must be\r\n\t\t\t\t                            a valid secret key.\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                        name:\r\n\t\t\t\t                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\r\n\t\t\t\t                            TODO: Add other useful fields. apiVersion, kind, uid?'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                        optional:\r\n\t\t\t\t                          description: Specify whether the Secret or its key must be\r\n\t\t\t\t                            defined\r\n\t\t\t\t                          type: boolean\r\n\t\t\t\t                      required:\r\n\t\t\t\t                      - key\r\n\t\t\t\t                      type: object\r\n\t\t\t\t                  type: object\r\n\t\t\t\t                peerIP:\r\n\t\t\t\t                  description: The IP address of the peer followed by an optional port\r\n\t\t\t\t                    number to peer with. If port number is given, format should be `[<IPv6>]:port`\r\n\t\t\t\t                    or `<IPv4>:<port>` for IPv4. If optional port number is not set,\r\n\t\t\t\t                    and this peer IP and ASNumber belongs to a calico/node with ListenPort\r\n\t\t\t\t                    set in BGPConfiguration, then we use that port to peer.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                peerSelector:\r\n\t\t\t\t                  description: Selector for the remote nodes to peer with.  When this\r\n\t\t\t\t                    is set, the PeerIP and ASNumber fields must be empty.  For each\r\n\t\t\t\t                    peering between the local node and selected remote nodes, we configure\r\n\t\t\t\t                    an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified,\r\n\t\t\t\t                    and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The\r\n\t\t\t\t                    remote AS number comes from the remote node's NodeBGPSpec.ASNumber,\r\n\t\t\t\t                    or the global default if that is not set.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                sourceAddress:\r\n\t\t\t\t                  description: Specifies whether and how to configure a source address\r\n\t\t\t\t                    for the peerings generated by this BGPPeer resource.  Default value\r\n\t\t\t\t                    \"UseNodeIP\" means to configure the node IP as the source address.  \"None\"\r\n\t\t\t\t                    means not to configure a source address.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: blockaffinities.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: BlockAffinity\r\n\t\t\t\t      listKind: BlockAffinityList\r\n\t\t\t\t      plural: blockaffinities\r\n\t\t\t\t      singular: blockaffinity\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: BlockAffinitySpec contains the specification for a BlockAffinity\r\n\t\t\t\t                resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                cidr:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                deleted:\r\n\t\t\t\t                  description: Deleted indicates that this block affinity is being deleted.\r\n\t\t\t\t                    This field is a string for compatibility with older releases that\r\n\t\t\t\t                    mistakenly treat this field as a string.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                node:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                state:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t              required:\r\n\t\t\t\t              - cidr\r\n\t\t\t\t              - deleted\r\n\t\t\t\t              - node\r\n\t\t\t\t              - state\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: clusterinformations.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: ClusterInformation\r\n\t\t\t\t      listKind: ClusterInformationList\r\n\t\t\t\t      plural: clusterinformations\r\n\t\t\t\t      singular: clusterinformation\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          description: ClusterInformation contains the cluster specific information.\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: ClusterInformationSpec contains the values of describing\r\n\t\t\t\t                the cluster.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                calicoVersion:\r\n\t\t\t\t                  description: CalicoVersion is the version of Calico that the cluster\r\n\t\t\t\t                    is running\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                clusterGUID:\r\n\t\t\t\t                  description: ClusterGUID is the GUID of the cluster\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                clusterType:\r\n\t\t\t\t                  description: ClusterType describes the type of the cluster\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                datastoreReady:\r\n\t\t\t\t                  description: DatastoreReady is used during significant datastore migrations\r\n\t\t\t\t                    to signal to components such as Felix that it should wait before\r\n\t\t\t\t                    accessing the datastore.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                variant:\r\n\t\t\t\t                  description: Variant declares which variant of Calico should be active.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: felixconfigurations.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: FelixConfiguration\r\n\t\t\t\t      listKind: FelixConfigurationList\r\n\t\t\t\t      plural: felixconfigurations\r\n\t\t\t\t      singular: felixconfiguration\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          description: Felix Configuration contains the configuration for Felix.\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: FelixConfigurationSpec contains the values of the Felix configuration.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                allowIPIPPacketsFromWorkloads:\r\n\t\t\t\t                  description: 'AllowIPIPPacketsFromWorkloads controls whether Felix\r\n\t\t\t\t                    will add a rule to drop IPIP encapsulated traffic from workloads\r\n\t\t\t\t                    [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                allowVXLANPacketsFromWorkloads:\r\n\t\t\t\t                  description: 'AllowVXLANPacketsFromWorkloads controls whether Felix\r\n\t\t\t\t                    will add a rule to drop VXLAN encapsulated traffic from workloads\r\n\t\t\t\t                    [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                awsSrcDstCheck:\r\n\t\t\t\t                  description: 'Set source-destination-check on AWS EC2 instances. Accepted\r\n\t\t\t\t                    value must be one of \"DoNothing\", \"Enabled\" or \"Disabled\". [Default:\r\n\t\t\t\t                    DoNothing]'\r\n\t\t\t\t                  enum:\r\n\t\t\t\t                  - DoNothing\r\n\t\t\t\t                  - Enable\r\n\t\t\t\t                  - Disable\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                bpfConnectTimeLoadBalancingEnabled:\r\n\t\t\t\t                  description: 'BPFConnectTimeLoadBalancingEnabled when in BPF mode,\r\n\t\t\t\t                    controls whether Felix installs the connection-time load balancer.  The\r\n\t\t\t\t                    connect-time load balancer is required for the host to be able to\r\n\t\t\t\t                    reach Kubernetes services and it improves the performance of pod-to-service\r\n\t\t\t\t                    connections.  The only reason to disable it is for debugging purposes.  [Default:\r\n\t\t\t\t                    true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                bpfDataIfacePattern:\r\n\t\t\t\t                  description: BPFDataIfacePattern is a regular expression that controls\r\n\t\t\t\t                    which interfaces Felix should attach BPF programs to in order to\r\n\t\t\t\t                    catch traffic to/from the network.  This needs to match the interfaces\r\n\t\t\t\t                    that Calico workload traffic flows over as well as any interfaces\r\n\t\t\t\t                    that handle incoming traffic to nodeports and services from outside\r\n\t\t\t\t                    the cluster.  It should not match the workload interfaces (usually\r\n\t\t\t\t                    named cali...).\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                bpfDisableUnprivileged:\r\n\t\t\t\t                  description: 'BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled\r\n\t\t\t\t                    sysctl to disable unprivileged use of BPF.  This ensures that unprivileged\r\n\t\t\t\t                    users cannot access Calico''s BPF maps and cannot insert their own\r\n\t\t\t\t                    BPF programs to interfere with Calico''s. [Default: true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                bpfEnabled:\r\n\t\t\t\t                  description: 'BPFEnabled, if enabled Felix will use the BPF dataplane.\r\n\t\t\t\t                    [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                bpfExternalServiceMode:\r\n\t\t\t\t                  description: 'BPFExternalServiceMode in BPF mode, controls how connections\r\n\t\t\t\t                    from outside the cluster to services (node ports and cluster IPs)\r\n\t\t\t\t                    are forwarded to remote workloads.  If set to \"Tunnel\" then both\r\n\t\t\t\t                    request and response traffic is tunneled to the remote node.  If\r\n\t\t\t\t                    set to \"DSR\", the request traffic is tunneled but the response traffic\r\n\t\t\t\t                    is sent directly from the remote node.  In \"DSR\" mode, the remote\r\n\t\t\t\t                    node appears to use the IP of the ingress node; this requires a\r\n\t\t\t\t                    permissive L2 network.  [Default: Tunnel]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                bpfExtToServiceConnmark:\r\n\t\t\t\t                  description: 'BPFExtToServiceConnmark in BPF mode, controls a\r\n\t\t\t\t                    32bit mark that is set on connections from an external client to\r\n\t\t\t\t                    a local service. This mark allows us to control how packets of\r\n\t\t\t\t                    that connection are routed within the host and how is routing\r\n\t\t\t\t                    intepreted by RPF check. [Default: 0]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t  \r\n\t\t\t\t                bpfKubeProxyEndpointSlicesEnabled:\r\n\t\t\t\t                  description: BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls\r\n\t\t\t\t                    whether Felix's embedded kube-proxy accepts EndpointSlices or not.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                bpfKubeProxyIptablesCleanupEnabled:\r\n\t\t\t\t                  description: 'BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF\r\n\t\t\t\t                    mode, Felix will proactively clean up the upstream Kubernetes kube-proxy''s\r\n\t\t\t\t                    iptables chains.  Should only be enabled if kube-proxy is not running.  [Default:\r\n\t\t\t\t                    true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                bpfKubeProxyMinSyncPeriod:\r\n\t\t\t\t                  description: 'BPFKubeProxyMinSyncPeriod, in BPF mode, controls the\r\n\t\t\t\t                    minimum time between updates to the dataplane for Felix''s embedded\r\n\t\t\t\t                    kube-proxy.  Lower values give reduced set-up latency.  Higher values\r\n\t\t\t\t                    reduce Felix CPU usage by batching up more work.  [Default: 1s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                bpfLogLevel:\r\n\t\t\t\t                  description: 'BPFLogLevel controls the log level of the BPF programs\r\n\t\t\t\t                    when in BPF dataplane mode.  One of \"Off\", \"Info\", or \"Debug\".  The\r\n\t\t\t\t                    logs are emitted to the BPF trace pipe, accessible with the command\r\n\t\t\t\t                    `tc exec bpf debug`. [Default: Off].'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                chainInsertMode:\r\n\t\t\t\t                  description: 'ChainInsertMode controls whether Felix hooks the kernel''s\r\n\t\t\t\t                    top-level iptables chains by inserting a rule at the top of the\r\n\t\t\t\t                    chain or by appending a rule at the bottom. insert is the safe default\r\n\t\t\t\t                    since it prevents Calico''s rules from being bypassed. If you switch\r\n\t\t\t\t                    to append mode, be sure that the other rules in the chains signal\r\n\t\t\t\t                    acceptance by falling through to the Calico rules, otherwise the\r\n\t\t\t\t                    Calico policy will be bypassed. [Default: insert]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                dataplaneDriver:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                debugDisableLogDropping:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                debugMemoryProfilePath:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                debugSimulateCalcGraphHangAfter:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                debugSimulateDataplaneHangAfter:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                defaultEndpointToHostAction:\r\n\t\t\t\t                  description: 'DefaultEndpointToHostAction controls what happens to\r\n\t\t\t\t                    traffic that goes from a workload endpoint to the host itself (after\r\n\t\t\t\t                    the traffic hits the endpoint egress policy). By default Calico\r\n\t\t\t\t                    blocks traffic from workload endpoints to the host itself with an\r\n\t\t\t\t                    iptables \"DROP\" action. If you want to allow some or all traffic\r\n\t\t\t\t                    from endpoint to host, set this parameter to RETURN or ACCEPT. Use\r\n\t\t\t\t                    RETURN if you have your own rules in the iptables \"INPUT\" chain;\r\n\t\t\t\t                    Calico will insert its rules at the top of that chain, then \"RETURN\"\r\n\t\t\t\t                    packets to the \"INPUT\" chain once it has completed processing workload\r\n\t\t\t\t                    endpoint egress policy. Use ACCEPT to unconditionally accept packets\r\n\t\t\t\t                    from workloads after processing workload endpoint egress policy.\r\n\t\t\t\t                    [Default: Drop]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                deviceRouteProtocol:\r\n\t\t\t\t                  description: This defines the route protocol added to programmed device\r\n\t\t\t\t                    routes, by default this will be RTPROT_BOOT when left blank.\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                deviceRouteSourceAddress:\r\n\t\t\t\t                  description: This is the source address to use on programmed device\r\n\t\t\t\t                    routes. By default the source address is left blank, leaving the\r\n\t\t\t\t                    kernel to choose the source address used.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                disableConntrackInvalidCheck:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                endpointReportingDelay:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                endpointReportingEnabled:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                externalNodesList:\r\n\t\t\t\t                  description: ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes\r\n\t\t\t\t                    which may source tunnel traffic and have the tunneled traffic be\r\n\t\t\t\t                    accepted at calico nodes.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                failsafeInboundHostPorts:\r\n\t\t\t\t                  description: 'FailsafeInboundHostPorts is a list of UDP/TCP ports\r\n\t\t\t\t                    and CIDRs that Felix will allow incoming traffic to host endpoints\r\n\t\t\t\t                    on irrespective of the security policy. This is useful to avoid\r\n\t\t\t\t                    accidentally cutting off a host with incorrect configuration. For\r\n\t\t\t\t                    back-compatibility, if the protocol is not specified, it defaults\r\n\t\t\t\t                    to \"tcp\". If a CIDR is not specified, it will allow traffic from\r\n\t\t\t\t                    all addresses. To disable all inbound host ports, use the value\r\n\t\t\t\t                    none. The default value allows ssh access and DHCP. [Default: tcp:22,\r\n\t\t\t\t                    udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]'\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: ProtoPort is combination of protocol, port, and CIDR.\r\n\t\t\t\t                      Protocol and port must be specified.\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      net:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      port:\r\n\t\t\t\t                        type: integer\r\n\t\t\t\t                      protocol:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                    required:\r\n\t\t\t\t                    - port\r\n\t\t\t\t                    - protocol\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                failsafeOutboundHostPorts:\r\n\t\t\t\t                  description: 'FailsafeOutboundHostPorts is a list of UDP/TCP ports\r\n\t\t\t\t                    and CIDRs that Felix will allow outgoing traffic from host endpoints\r\n\t\t\t\t                    to irrespective of the security policy. This is useful to avoid\r\n\t\t\t\t                    accidentally cutting off a host with incorrect configuration. For\r\n\t\t\t\t                    back-compatibility, if the protocol is not specified, it defaults\r\n\t\t\t\t                    to \"tcp\". If a CIDR is not specified, it will allow traffic from\r\n\t\t\t\t                    all addresses. To disable all outbound host ports, use the value\r\n\t\t\t\t                    none. The default value opens etcd''s standard ports to ensure that\r\n\t\t\t\t                    Felix does not get cut off from etcd as well as allowing DHCP and\r\n\t\t\t\t                    DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666,\r\n\t\t\t\t                    tcp:6667, udp:53, udp:67]'\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: ProtoPort is combination of protocol, port, and CIDR.\r\n\t\t\t\t                      Protocol and port must be specified.\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      net:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      port:\r\n\t\t\t\t                        type: integer\r\n\t\t\t\t                      protocol:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                    required:\r\n\t\t\t\t                    - port\r\n\t\t\t\t                    - protocol\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                featureDetectOverride:\r\n\t\t\t\t                  description: FeatureDetectOverride is used to override the feature\r\n\t\t\t\t                    detection. Values are specified in a comma separated list with no\r\n\t\t\t\t                    spaces, example; \"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\".\r\n\t\t\t\t                    \"true\" or \"false\" will force the feature, empty or omitted values\r\n\t\t\t\t                    are auto-detected.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                genericXDPEnabled:\r\n\t\t\t\t                  description: 'GenericXDPEnabled enables Generic XDP so network cards\r\n\t\t\t\t                    that don''t support XDP offload or driver modes can use XDP. This\r\n\t\t\t\t                    is not recommended since it doesn''t provide better performance\r\n\t\t\t\t                    than iptables. [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                healthEnabled:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                healthHost:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                healthPort:\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                interfaceExclude:\r\n\t\t\t\t                  description: 'InterfaceExclude is a comma-separated list of interfaces\r\n\t\t\t\t                    that Felix should exclude when monitoring for host endpoints. The\r\n\t\t\t\t                    default value ensures that Felix ignores Kubernetes'' IPVS dummy\r\n\t\t\t\t                    interface, which is used internally by kube-proxy. If you want to\r\n\t\t\t\t                    exclude multiple interface names using a single value, the list\r\n\t\t\t\t                    supports regular expressions. For regular expressions you must wrap\r\n\t\t\t\t                    the value with ''/''. For example having values ''/^kube/,veth1''\r\n\t\t\t\t                    will exclude all interfaces that begin with ''kube'' and also the\r\n\t\t\t\t                    interface ''veth1''. [Default: kube-ipvs0]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                interfacePrefix:\r\n\t\t\t\t                  description: 'InterfacePrefix is the interface name prefix that identifies\r\n\t\t\t\t                    workload endpoints and so distinguishes them from host endpoint\r\n\t\t\t\t                    interfaces. Note: in environments other than bare metal, the orchestrators\r\n\t\t\t\t                    configure this appropriately. For example our Kubernetes and Docker\r\n\t\t\t\t                    integrations set the ''cali'' value, and our OpenStack integration\r\n\t\t\t\t                    sets the ''tap'' value. [Default: cali]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                interfaceRefreshInterval:\r\n\t\t\t\t                  description: InterfaceRefreshInterval is the period at which Felix\r\n\t\t\t\t                    rescans local interfaces to verify their state. The rescan can be\r\n\t\t\t\t                    disabled by setting the interval to 0.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                ipipEnabled:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                ipipMTU:\r\n\t\t\t\t                  description: 'IPIPMTU is the MTU to set on the tunnel device. See\r\n\t\t\t\t                    Configuring MTU [Default: 1440]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                ipsetsRefreshInterval:\r\n\t\t\t\t                  description: 'IpsetsRefreshInterval is the period at which Felix re-checks\r\n\t\t\t\t                    all iptables state to ensure that no other process has accidentally\r\n\t\t\t\t                    broken Calico''s rules. Set to 0 to disable iptables refresh. [Default:\r\n\t\t\t\t                    90s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesBackend:\r\n\t\t\t\t                  description: IptablesBackend specifies which backend of iptables will\r\n\t\t\t\t                    be used. The default is legacy.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesFilterAllowAction:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesLockFilePath:\r\n\t\t\t\t                  description: 'IptablesLockFilePath is the location of the iptables\r\n\t\t\t\t                    lock file. You may need to change this if the lock file is not in\r\n\t\t\t\t                    its standard location (for example if you have mapped it into Felix''s\r\n\t\t\t\t                    container at a different path). [Default: /run/xtables.lock]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesLockProbeInterval:\r\n\t\t\t\t                  description: 'IptablesLockProbeInterval is the time that Felix will\r\n\t\t\t\t                    wait between attempts to acquire the iptables lock if it is not\r\n\t\t\t\t                    available. Lower values make Felix more responsive when the lock\r\n\t\t\t\t                    is contended, but use more CPU. [Default: 50ms]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesLockTimeout:\r\n\t\t\t\t                  description: 'IptablesLockTimeout is the time that Felix will wait\r\n\t\t\t\t                    for the iptables lock, or 0, to disable. To use this feature, Felix\r\n\t\t\t\t                    must share the iptables lock file with all other processes that\r\n\t\t\t\t                    also take the lock. When running Felix inside a container, this\r\n\t\t\t\t                    requires the /run directory of the host to be mounted into the calico/node\r\n\t\t\t\t                    or calico/felix container. [Default: 0s disabled]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesMangleAllowAction:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesMarkMask:\r\n\t\t\t\t                  description: 'IptablesMarkMask is the mask that Felix selects its\r\n\t\t\t\t                    IPTables Mark bits from. Should be a 32 bit hexadecimal number with\r\n\t\t\t\t                    at least 8 bits set, none of which clash with any other mark bits\r\n\t\t\t\t                    in use on the system. [Default: 0xff000000]'\r\n\t\t\t\t                  format: int32\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                iptablesNATOutgoingInterfaceFilter:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesPostWriteCheckInterval:\r\n\t\t\t\t                  description: 'IptablesPostWriteCheckInterval is the period after Felix\r\n\t\t\t\t                    has done a write to the dataplane that it schedules an extra read\r\n\t\t\t\t                    back in order to check the write was not clobbered by another process.\r\n\t\t\t\t                    This should only occur if another application on the system doesn''t\r\n\t\t\t\t                    respect the iptables lock. [Default: 1s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                iptablesRefreshInterval:\r\n\t\t\t\t                  description: 'IptablesRefreshInterval is the period at which Felix\r\n\t\t\t\t                    re-checks the IP sets in the dataplane to ensure that no other process\r\n\t\t\t\t                    has accidentally broken Calico''s rules. Set to 0 to disable IP\r\n\t\t\t\t                    sets refresh. Note: the default for this value is lower than the\r\n\t\t\t\t                    other refresh intervals as a workaround for a Linux kernel bug that\r\n\t\t\t\t                    was fixed in kernel version 4.11. If you are using v4.11 or greater\r\n\t\t\t\t                    you may want to set this to, a higher value to reduce Felix CPU\r\n\t\t\t\t                    usage. [Default: 10s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                ipv6Support:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                kubeNodePortRanges:\r\n\t\t\t\t                  description: 'KubeNodePortRanges holds list of port ranges used for\r\n\t\t\t\t                    service node ports. Only used if felix detects kube-proxy running\r\n\t\t\t\t                    in ipvs mode. Felix uses these ranges to separate host and workload\r\n\t\t\t\t                    traffic. [Default: 30000:32767].'\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    anyOf:\r\n\t\t\t\t                    - type: integer\r\n\t\t\t\t                    - type: string\r\n\t\t\t\t                    pattern: ^.*\r\n\t\t\t\t                    x-kubernetes-int-or-string: true\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                logFilePath:\r\n\t\t\t\t                  description: 'LogFilePath is the full path to the Felix log. Set to\r\n\t\t\t\t                    none to disable file logging. [Default: /var/log/calico/felix.log]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                logPrefix:\r\n\t\t\t\t                  description: 'LogPrefix is the log prefix that Felix uses when rendering\r\n\t\t\t\t                    LOG rules. [Default: calico-packet]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                logSeverityFile:\r\n\t\t\t\t                  description: 'LogSeverityFile is the log severity above which logs\r\n\t\t\t\t                    are sent to the log file. [Default: Info]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                logSeverityScreen:\r\n\t\t\t\t                  description: 'LogSeverityScreen is the log severity above which logs\r\n\t\t\t\t                    are sent to the stdout. [Default: Info]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                logSeveritySys:\r\n\t\t\t\t                  description: 'LogSeveritySys is the log severity above which logs\r\n\t\t\t\t                    are sent to the syslog. Set to None for no logging to syslog. [Default:\r\n\t\t\t\t                    Info]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                maxIpsetSize:\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                metadataAddr:\r\n\t\t\t\t                  description: 'MetadataAddr is the IP address or domain name of the\r\n\t\t\t\t                    server that can answer VM queries for cloud-init metadata. In OpenStack,\r\n\t\t\t\t                    this corresponds to the machine running nova-api (or in Ubuntu,\r\n\t\t\t\t                    nova-api-metadata). A value of none (case insensitive) means that\r\n\t\t\t\t                    Felix should not set up any NAT rule for the metadata path. [Default:\r\n\t\t\t\t                    127.0.0.1]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                metadataPort:\r\n\t\t\t\t                  description: 'MetadataPort is the port of the metadata server. This,\r\n\t\t\t\t                    combined with global.MetadataAddr (if not ''None''), is used to\r\n\t\t\t\t                    set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort.\r\n\t\t\t\t                    In most cases this should not need to be changed [Default: 8775].'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                mtuIfacePattern:\r\n\t\t\t\t                  description: MTUIfacePattern is a regular expression that controls\r\n\t\t\t\t                    which interfaces Felix should scan in order to calculate the host's\r\n\t\t\t\t                    MTU. This should not match workload interfaces (usually named cali...).\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                natOutgoingAddress:\r\n\t\t\t\t                  description: NATOutgoingAddress specifies an address to use when performing\r\n\t\t\t\t                    source NAT for traffic in a natOutgoing pool that is leaving the\r\n\t\t\t\t                    network. By default the address used is an address on the interface\r\n\t\t\t\t                    the traffic is leaving on (ie it uses the iptables MASQUERADE target)\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                natPortRange:\r\n\t\t\t\t                  anyOf:\r\n\t\t\t\t                  - type: integer\r\n\t\t\t\t                  - type: string\r\n\t\t\t\t                  description: NATPortRange specifies the range of ports that is used\r\n\t\t\t\t                    for port mapping when doing outgoing NAT. When unset the default\r\n\t\t\t\t                    behavior of the network stack is used.\r\n\t\t\t\t                  pattern: ^.*\r\n\t\t\t\t                  x-kubernetes-int-or-string: true\r\n\t\t\t\t                netlinkTimeout:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                openstackRegion:\r\n\t\t\t\t                  description: 'OpenstackRegion is the name of the region that a particular\r\n\t\t\t\t                    Felix belongs to. In a multi-region Calico/OpenStack deployment,\r\n\t\t\t\t                    this must be configured somehow for each Felix (here in the datamodel,\r\n\t\t\t\t                    or in felix.cfg or the environment on each compute node), and must\r\n\t\t\t\t                    match the [calico] openstack_region value configured in neutron.conf\r\n\t\t\t\t                    on each node. [Default: Empty]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                policySyncPathPrefix:\r\n\t\t\t\t                  description: 'PolicySyncPathPrefix is used to by Felix to communicate\r\n\t\t\t\t                    policy changes to external services, like Application layer policy.\r\n\t\t\t\t                    [Default: Empty]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                prometheusGoMetricsEnabled:\r\n\t\t\t\t                  description: 'PrometheusGoMetricsEnabled disables Go runtime metrics\r\n\t\t\t\t                    collection, which the Prometheus client does by default, when set\r\n\t\t\t\t                    to false. This reduces the number of metrics reported, reducing\r\n\t\t\t\t                    Prometheus load. [Default: true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                prometheusMetricsEnabled:\r\n\t\t\t\t                  description: 'PrometheusMetricsEnabled enables the Prometheus metrics\r\n\t\t\t\t                    server in Felix if set to true. [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                prometheusMetricsHost:\r\n\t\t\t\t                  description: 'PrometheusMetricsHost is the host that the Prometheus\r\n\t\t\t\t                    metrics server should bind to. [Default: empty]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                prometheusMetricsPort:\r\n\t\t\t\t                  description: 'PrometheusMetricsPort is the TCP port that the Prometheus\r\n\t\t\t\t                    metrics server should bind to. [Default: 9091]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                prometheusProcessMetricsEnabled:\r\n\t\t\t\t                  description: 'PrometheusProcessMetricsEnabled disables process metrics\r\n\t\t\t\t                    collection, which the Prometheus client does by default, when set\r\n\t\t\t\t                    to false. This reduces the number of metrics reported, reducing\r\n\t\t\t\t                    Prometheus load. [Default: true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                prometheusWireGuardMetricsEnabled:\r\n\t\t\t\t                  description: 'PrometheusWireGuardMetricsEnabled disables wireguard\r\n\t\t\t\t                    metrics collection, which the Prometheus client does by default,\r\n\t\t\t\t                    when set to false. This reduces the number of metrics reported,\r\n\t\t\t\t                    reducing Prometheus load. [Default: true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                removeExternalRoutes:\r\n\t\t\t\t                  description: Whether or not to remove device routes that have not\r\n\t\t\t\t                    been programmed by Felix. Disabling this will allow external applications\r\n\t\t\t\t                    to also add device routes. This is enabled by default which means\r\n\t\t\t\t                    we will remove externally added routes.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                reportingInterval:\r\n\t\t\t\t                  description: 'ReportingInterval is the interval at which Felix reports\r\n\t\t\t\t                    its status into the datastore or 0 to disable. Must be non-zero\r\n\t\t\t\t                    in OpenStack deployments. [Default: 30s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                reportingTTL:\r\n\t\t\t\t                  description: 'ReportingTTL is the time-to-live setting for process-wide\r\n\t\t\t\t                    status reports. [Default: 90s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                routeRefreshInterval:\r\n\t\t\t\t                  description: 'RouteRefreshInterval is the period at which Felix re-checks\r\n\t\t\t\t                    the routes in the dataplane to ensure that no other process has\r\n\t\t\t\t                    accidentally broken Calico''s rules. Set to 0 to disable route refresh.\r\n\t\t\t\t                    [Default: 90s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                routeSource:\r\n\t\t\t\t                  description: 'RouteSource configures where Felix gets its routing\r\n\t\t\t\t                    information. - WorkloadIPs: use workload endpoints to construct\r\n\t\t\t\t                    routes. - CalicoIPAM: the default - use IPAM data to construct routes.'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                routeTableRange:\r\n\t\t\t\t                  description: Calico programs additional Linux route tables for various\r\n\t\t\t\t                    purposes.  RouteTableRange specifies the indices of the route tables\r\n\t\t\t\t                    that Calico should use.\r\n\t\t\t\t                  properties:\r\n\t\t\t\t                    max:\r\n\t\t\t\t                      type: integer\r\n\t\t\t\t                    min:\r\n\t\t\t\t                      type: integer\r\n\t\t\t\t                  required:\r\n\t\t\t\t                  - max\r\n\t\t\t\t                  - min\r\n\t\t\t\t                  type: object\r\n\t\t\t\t                serviceLoopPrevention:\r\n\t\t\t\t                  description: 'When service IP advertisement is enabled, prevent routing\r\n\t\t\t\t                    loops to service IPs that are not in use, by dropping or rejecting\r\n\t\t\t\t                    packets that do not get DNAT''d by kube-proxy. Unless set to \"Disabled\",\r\n\t\t\t\t                    in which case such routing loops continue to be allowed. [Default:\r\n\t\t\t\t                    Drop]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                sidecarAccelerationEnabled:\r\n\t\t\t\t                  description: 'SidecarAccelerationEnabled enables experimental sidecar\r\n\t\t\t\t                    acceleration [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                usageReportingEnabled:\r\n\t\t\t\t                  description: 'UsageReportingEnabled reports anonymous Calico version\r\n\t\t\t\t                    number and cluster size to projectcalico.org. Logs warnings returned\r\n\t\t\t\t                    by the usage server. For example, if a significant security vulnerability\r\n\t\t\t\t                    has been discovered in the version of Calico being used. [Default:\r\n\t\t\t\t                    true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                usageReportingInitialDelay:\r\n\t\t\t\t                  description: 'UsageReportingInitialDelay controls the minimum delay\r\n\t\t\t\t                    before Felix makes a report. [Default: 300s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                usageReportingInterval:\r\n\t\t\t\t                  description: 'UsageReportingInterval controls the interval at which\r\n\t\t\t\t                    Felix makes reports. [Default: 86400s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                useInternalDataplaneDriver:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                vxlanEnabled:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                vxlanMTU:\r\n\t\t\t\t                  description: 'VXLANMTU is the MTU to set on the tunnel device. See\r\n\t\t\t\t                    Configuring MTU [Default: 1440]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                vxlanPort:\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                vxlanVNI:\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                wireguardEnabled:\r\n\t\t\t\t                  description: 'WireguardEnabled controls whether Wireguard is enabled.\r\n\t\t\t\t                    [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                wireguardHostEncryptionEnabled:\r\n\t\t\t\t                  description: 'WireguardHostEncryptionEnabled controls whether Wireguard\r\n\t\t\t\t                    host-to-host encryption is enabled. [Default: false]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                wireguardInterfaceName:\r\n\t\t\t\t                  description: 'WireguardInterfaceName specifies the name to use for\r\n\t\t\t\t                    the Wireguard interface. [Default: wg.calico]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                wireguardListeningPort:\r\n\t\t\t\t                  description: 'WireguardListeningPort controls the listening port used\r\n\t\t\t\t                    by Wireguard. [Default: 51820]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                wireguardMTU:\r\n\t\t\t\t                  description: 'WireguardMTU controls the MTU on the Wireguard interface.\r\n\t\t\t\t                    See Configuring MTU [Default: 1420]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                wireguardRoutingRulePriority:\r\n\t\t\t\t                  description: 'WireguardRoutingRulePriority controls the priority value\r\n\t\t\t\t                    to use for the Wireguard routing rule. [Default: 99]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                xdpEnabled:\r\n\t\t\t\t                  description: 'XDPEnabled enables XDP acceleration for suitable untracked\r\n\t\t\t\t                    incoming deny rules. [Default: true]'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                xdpRefreshInterval:\r\n\t\t\t\t                  description: 'XDPRefreshInterval is the period at which Felix re-checks\r\n\t\t\t\t                    all XDP state to ensure that no other process has accidentally broken\r\n\t\t\t\t                    Calico''s BPF maps or attached programs. Set to 0 to disable XDP\r\n\t\t\t\t                    refresh. [Default: 90s]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: globalnetworkpolicies.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: GlobalNetworkPolicy\r\n\t\t\t\t      listKind: GlobalNetworkPolicyList\r\n\t\t\t\t      plural: globalnetworkpolicies\r\n\t\t\t\t      singular: globalnetworkpolicy\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              properties:\r\n\t\t\t\t                applyOnForward:\r\n\t\t\t\t                  description: ApplyOnForward indicates to apply the rules in this policy\r\n\t\t\t\t                    on forward traffic.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                doNotTrack:\r\n\t\t\t\t                  description: DoNotTrack indicates whether packets matched by the rules\r\n\t\t\t\t                    in this policy should go through the data plane's connection tracking,\r\n\t\t\t\t                    such as Linux conntrack.  If True, the rules in this policy are\r\n\t\t\t\t                    applied before any data plane connection tracking, and packets allowed\r\n\t\t\t\t                    by this policy are marked as not to be tracked.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                egress:\r\n\t\t\t\t                  description: The ordered set of egress rules.  Each rule contains\r\n\t\t\t\t                    a set of packet match criteria and a corresponding action to apply.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: \"A Rule encapsulates a set of match criteria and an\r\n\t\t\t\t                      action.  Both selector-based security Policy and security Profiles\r\n\t\t\t\t                      reference rules - separated out as a list of rules for both ingress\r\n\t\t\t\t                      and egress packet matching. \\n Each positive match criteria has\r\n\t\t\t\t                      a negated version, prefixed with \\\"Not\\\". All the match criteria\r\n\t\t\t\t                      within a rule must be satisfied for a packet to match. A single\r\n\t\t\t\t                      rule can contain the positive and negative version of a match\r\n\t\t\t\t                      and both must be satisfied for the rule to match.\"\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      action:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      destination:\r\n\t\t\t\t                        description: Destination contains the match criteria that apply\r\n\t\t\t\t                          to destination entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      http:\r\n\t\t\t\t                        description: HTTP contains match criteria that apply to HTTP\r\n\t\t\t\t                          requests.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          methods:\r\n\t\t\t\t                            description: Methods is an optional field that restricts\r\n\t\t\t\t                              the rule to apply only to HTTP requests that use one of\r\n\t\t\t\t                              the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple\r\n\t\t\t\t                              methods are OR'd together.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          paths:\r\n\t\t\t\t                            description: 'Paths is an optional field that restricts\r\n\t\t\t\t                              the rule to apply to HTTP requests that use one of the\r\n\t\t\t\t                              listed HTTP Paths. Multiple paths are OR''d together.\r\n\t\t\t\t                              e.g: - exact: /foo - prefix: /bar NOTE: Each entry may\r\n\t\t\t\t                              ONLY specify either a `exact` or a `prefix` match. The\r\n\t\t\t\t                              validator will check for it.'\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              description: 'HTTPPath specifies an HTTP path to match.\r\n\t\t\t\t                                It may be either of the form: exact: <path>: which matches\r\n\t\t\t\t                                the path exactly or prefix: <path-prefix>: which matches\r\n\t\t\t\t                                the path prefix'\r\n\t\t\t\t                              properties:\r\n\t\t\t\t                                exact:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                prefix:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                              type: object\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      icmp:\r\n\t\t\t\t                        description: ICMP is an optional field that restricts the rule\r\n\t\t\t\t                          to apply to a specific type and code of ICMP traffic.  This\r\n\t\t\t\t                          should only be specified if the Protocol field is set to \"ICMP\"\r\n\t\t\t\t                          or \"ICMPv6\".\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      ipVersion:\r\n\t\t\t\t                        description: IPVersion is an optional field that restricts the\r\n\t\t\t\t                          rule to only match a specific IP version.\r\n\t\t\t\t                        type: integer\r\n\t\t\t\t                      metadata:\r\n\t\t\t\t                        description: Metadata contains additional information for this\r\n\t\t\t\t                          rule\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          annotations:\r\n\t\t\t\t                            additionalProperties:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            description: Annotations is a set of key value pairs that\r\n\t\t\t\t                              give extra information about the rule\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notICMP:\r\n\t\t\t\t                        description: NotICMP is the negated version of the ICMP field.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notProtocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: NotProtocol is the negated version of the Protocol\r\n\t\t\t\t                          field.\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      protocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: \"Protocol is an optional field that restricts the\r\n\t\t\t\t                          rule to only apply to traffic of a specific IP protocol. Required\r\n\t\t\t\t                          if any of the EntityRules contain Ports (because ports only\r\n\t\t\t\t                          apply to certain protocols). \\n Must be one of these string\r\n\t\t\t\t                          values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",\r\n\t\t\t\t                          \\\"UDPLite\\\" or an integer in the range 1-255.\"\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      source:\r\n\t\t\t\t                        description: Source contains the match criteria that apply to\r\n\t\t\t\t                          source entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                    required:\r\n\t\t\t\t                    - action\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                ingress:\r\n\t\t\t\t                  description: The ordered set of ingress rules.  Each rule contains\r\n\t\t\t\t                    a set of packet match criteria and a corresponding action to apply.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: \"A Rule encapsulates a set of match criteria and an\r\n\t\t\t\t                      action.  Both selector-based security Policy and security Profiles\r\n\t\t\t\t                      reference rules - separated out as a list of rules for both ingress\r\n\t\t\t\t                      and egress packet matching. \\n Each positive match criteria has\r\n\t\t\t\t                      a negated version, prefixed with \\\"Not\\\". All the match criteria\r\n\t\t\t\t                      within a rule must be satisfied for a packet to match. A single\r\n\t\t\t\t                      rule can contain the positive and negative version of a match\r\n\t\t\t\t                      and both must be satisfied for the rule to match.\"\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      action:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      destination:\r\n\t\t\t\t                        description: Destination contains the match criteria that apply\r\n\t\t\t\t                          to destination entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      http:\r\n\t\t\t\t                        description: HTTP contains match criteria that apply to HTTP\r\n\t\t\t\t                          requests.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          methods:\r\n\t\t\t\t                            description: Methods is an optional field that restricts\r\n\t\t\t\t                              the rule to apply only to HTTP requests that use one of\r\n\t\t\t\t                              the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple\r\n\t\t\t\t                              methods are OR'd together.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          paths:\r\n\t\t\t\t                            description: 'Paths is an optional field that restricts\r\n\t\t\t\t                              the rule to apply to HTTP requests that use one of the\r\n\t\t\t\t                              listed HTTP Paths. Multiple paths are OR''d together.\r\n\t\t\t\t                              e.g: - exact: /foo - prefix: /bar NOTE: Each entry may\r\n\t\t\t\t                              ONLY specify either a `exact` or a `prefix` match. The\r\n\t\t\t\t                              validator will check for it.'\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              description: 'HTTPPath specifies an HTTP path to match.\r\n\t\t\t\t                                It may be either of the form: exact: <path>: which matches\r\n\t\t\t\t                                the path exactly or prefix: <path-prefix>: which matches\r\n\t\t\t\t                                the path prefix'\r\n\t\t\t\t                              properties:\r\n\t\t\t\t                                exact:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                prefix:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                              type: object\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      icmp:\r\n\t\t\t\t                        description: ICMP is an optional field that restricts the rule\r\n\t\t\t\t                          to apply to a specific type and code of ICMP traffic.  This\r\n\t\t\t\t                          should only be specified if the Protocol field is set to \"ICMP\"\r\n\t\t\t\t                          or \"ICMPv6\".\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      ipVersion:\r\n\t\t\t\t                        description: IPVersion is an optional field that restricts the\r\n\t\t\t\t                          rule to only match a specific IP version.\r\n\t\t\t\t                        type: integer\r\n\t\t\t\t                      metadata:\r\n\t\t\t\t                        description: Metadata contains additional information for this\r\n\t\t\t\t                          rule\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          annotations:\r\n\t\t\t\t                            additionalProperties:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            description: Annotations is a set of key value pairs that\r\n\t\t\t\t                              give extra information about the rule\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notICMP:\r\n\t\t\t\t                        description: NotICMP is the negated version of the ICMP field.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notProtocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: NotProtocol is the negated version of the Protocol\r\n\t\t\t\t                          field.\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      protocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: \"Protocol is an optional field that restricts the\r\n\t\t\t\t                          rule to only apply to traffic of a specific IP protocol. Required\r\n\t\t\t\t                          if any of the EntityRules contain Ports (because ports only\r\n\t\t\t\t                          apply to certain protocols). \\n Must be one of these string\r\n\t\t\t\t                          values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",\r\n\t\t\t\t                          \\\"UDPLite\\\" or an integer in the range 1-255.\"\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      source:\r\n\t\t\t\t                        description: Source contains the match criteria that apply to\r\n\t\t\t\t                          source entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                    required:\r\n\t\t\t\t                    - action\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                namespaceSelector:\r\n\t\t\t\t                  description: NamespaceSelector is an optional field for an expression\r\n\t\t\t\t                    used to select a pod based on namespaces.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                order:\r\n\t\t\t\t                  description: Order is an optional field that specifies the order in\r\n\t\t\t\t                    which the policy is applied. Policies with higher \"order\" are applied\r\n\t\t\t\t                    after those with lower order.  If the order is omitted, it may be\r\n\t\t\t\t                    considered to be \"infinite\" - i.e. the policy will be applied last.  Policies\r\n\t\t\t\t                    with identical order will be applied in alphanumerical order based\r\n\t\t\t\t                    on the Policy \"Name\".\r\n\t\t\t\t                  type: number\r\n\t\t\t\t                preDNAT:\r\n\t\t\t\t                  description: PreDNAT indicates to apply the rules in this policy before\r\n\t\t\t\t                    any DNAT.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                selector:\r\n\t\t\t\t                  description: \"The selector is an expression used to pick pick out\r\n\t\t\t\t                    the endpoints that the policy should be applied to. \\n Selector\r\n\t\t\t\t                    expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"\r\n\t\t\t\t                    \\ ->  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"\r\n\t\t\t\t                    \\  ->  not equal; also matches if label is not present \\tlabel in\r\n\t\t\t\t                    { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  ->  true if the value of label X is\r\n\t\t\t\t                    one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\",\r\n\t\t\t\t                    ... }  ->  true if the value of label X is not one of \\\"a\\\", \\\"b\\\",\r\n\t\t\t\t                    \\\"c\\\" \\thas(label_name)  -> True if that label is present \\t! expr\r\n\t\t\t\t                    -> negation of expr \\texpr && expr  -> Short-circuit and \\texpr\r\n\t\t\t\t                    || expr  -> Short-circuit or \\t( expr ) -> parens for grouping \\tall()\r\n\t\t\t\t                    or the empty selector -> matches all endpoints. \\n Label names are\r\n\t\t\t\t                    allowed to contain alphanumerics, -, _ and /. String literals are\r\n\t\t\t\t                    more permissive but they do not support escape characters. \\n Examples\r\n\t\t\t\t                    (with made-up labels): \\n \\ttype == \\\"webserver\\\" && deployment\r\n\t\t\t\t                    == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment !=\r\n\t\t\t\t                    \\\"dev\\\" \\t! has(label_name)\"\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                serviceAccountSelector:\r\n\t\t\t\t                  description: ServiceAccountSelector is an optional field for an expression\r\n\t\t\t\t                    used to select a pod based on service accounts.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                types:\r\n\t\t\t\t                  description: \"Types indicates whether this policy applies to ingress,\r\n\t\t\t\t                    or to egress, or to both.  When not explicitly specified (and so\r\n\t\t\t\t                    the value on creation is empty or nil), Calico defaults Types according\r\n\t\t\t\t                    to what Ingress and Egress rules are present in the policy.  The\r\n\t\t\t\t                    default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules\r\n\t\t\t\t                    (including the case where there are   also no Ingress rules) \\n\r\n\t\t\t\t                    - [ PolicyTypeEgress ], if there are Egress rules but no Ingress\r\n\t\t\t\t                    rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are\r\n\t\t\t\t                    both Ingress and Egress rules. \\n When the policy is read back again,\r\n\t\t\t\t                    Types will always be one of these values, never empty or nil.\"\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: PolicyType enumerates the possible values of the PolicySpec\r\n\t\t\t\t                      Types field.\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  type: array\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: globalnetworksets.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: GlobalNetworkSet\r\n\t\t\t\t      listKind: GlobalNetworkSetList\r\n\t\t\t\t      plural: globalnetworksets\r\n\t\t\t\t      singular: globalnetworkset\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          description: GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs\r\n\t\t\t\t            that share labels to allow rules to refer to them via selectors.  The labels\r\n\t\t\t\t            of GlobalNetworkSet are not namespaced.\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: GlobalNetworkSetSpec contains the specification for a NetworkSet\r\n\t\t\t\t                resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                nets:\r\n\t\t\t\t                  description: The list of IP networks that belong to this set.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  type: array\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: hostendpoints.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: HostEndpoint\r\n\t\t\t\t      listKind: HostEndpointList\r\n\t\t\t\t      plural: hostendpoints\r\n\t\t\t\t      singular: hostendpoint\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: HostEndpointSpec contains the specification for a HostEndpoint\r\n\t\t\t\t                resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                expectedIPs:\r\n\t\t\t\t                  description: \"The expected IP addresses (IPv4 and IPv6) of the endpoint.\r\n\t\t\t\t                    If \\\"InterfaceName\\\" is not present, Calico will look for an interface\r\n\t\t\t\t                    matching any of the IPs in the list and apply policy to that. Note:\r\n\t\t\t\t                    \\tWhen using the selector match criteria in an ingress or egress\r\n\t\t\t\t                    security Policy \\tor Profile, Calico converts the selector into\r\n\t\t\t\t                    a set of IP addresses. For host \\tendpoints, the ExpectedIPs field\r\n\t\t\t\t                    is used for that purpose. (If only the interface \\tname is specified,\r\n\t\t\t\t                    Calico does not learn the IPs of the interface for use in match\r\n\t\t\t\t                    \\tcriteria.)\"\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                interfaceName:\r\n\t\t\t\t                  description: \"Either \\\"*\\\", or the name of a specific Linux interface\r\n\t\t\t\t                    to apply policy to; or empty.  \\\"*\\\" indicates that this HostEndpoint\r\n\t\t\t\t                    governs all traffic to, from or through the default network namespace\r\n\t\t\t\t                    of the host named by the \\\"Node\\\" field; entering and leaving that\r\n\t\t\t\t                    namespace via any interface, including those from/to non-host-networked\r\n\t\t\t\t                    local workloads. \\n If InterfaceName is not \\\"*\\\", this HostEndpoint\r\n\t\t\t\t                    only governs traffic that enters or leaves the host through the\r\n\t\t\t\t                    specific interface named by InterfaceName, or - when InterfaceName\r\n\t\t\t\t                    is empty - through the specific interface that has one of the IPs\r\n\t\t\t\t                    in ExpectedIPs. Therefore, when InterfaceName is empty, at least\r\n\t\t\t\t                    one expected IP must be specified.  Only external interfaces (such\r\n\t\t\t\t                    as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint\r\n\t\t\t\t                    to protect traffic through a specific local workload interface.\r\n\t\t\t\t                    \\n Note: Only some kinds of policy are implemented for \\\"*\\\" HostEndpoints;\r\n\t\t\t\t                    initially just pre-DNAT policy.  Please check Calico documentation\r\n\t\t\t\t                    for the latest position.\"\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                node:\r\n\t\t\t\t                  description: The node name identifying the Calico node instance.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                ports:\r\n\t\t\t\t                  description: Ports contains the endpoint's named ports, which may\r\n\t\t\t\t                    be referenced in security policy rules.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      name:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      port:\r\n\t\t\t\t                        type: integer\r\n\t\t\t\t                      protocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                    required:\r\n\t\t\t\t                    - name\r\n\t\t\t\t                    - port\r\n\t\t\t\t                    - protocol\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                profiles:\r\n\t\t\t\t                  description: A list of identifiers of security Profile objects that\r\n\t\t\t\t                    apply to this endpoint. Each profile is applied in the order that\r\n\t\t\t\t                    they appear in this list.  Profile rules are applied after the selector-based\r\n\t\t\t\t                    security policy.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  type: array\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: ipamblocks.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: IPAMBlock\r\n\t\t\t\t      listKind: IPAMBlockList\r\n\t\t\t\t      plural: ipamblocks\r\n\t\t\t\t      singular: ipamblock\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: IPAMBlockSpec contains the specification for an IPAMBlock\r\n\t\t\t\t                resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                affinity:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                allocations:\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    type: integer\r\n\t\t\t\t                    # TODO: This nullable is manually added in. We should update controller-gen\r\n\t\t\t\t                    # to handle []*int properly itself.\r\n\t\t\t\t                    nullable: true\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                attributes:\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      handle_id:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      secondary:\r\n\t\t\t\t                        additionalProperties:\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                cidr:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                deleted:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                strictAffinity:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                unallocated:\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    type: integer\r\n\t\t\t\t                  type: array\r\n\t\t\t\t              required:\r\n\t\t\t\t              - allocations\r\n\t\t\t\t              - attributes\r\n\t\t\t\t              - cidr\r\n\t\t\t\t              - strictAffinity\r\n\t\t\t\t              - unallocated\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: ipamconfigs.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: IPAMConfig\r\n\t\t\t\t      listKind: IPAMConfigList\r\n\t\t\t\t      plural: ipamconfigs\r\n\t\t\t\t      singular: ipamconfig\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: IPAMConfigSpec contains the specification for an IPAMConfig\r\n\t\t\t\t                resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                autoAllocateBlocks:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                maxBlocksPerHost:\r\n\t\t\t\t                  description: MaxBlocksPerHost, if non-zero, is the max number of blocks\r\n\t\t\t\t                    that can be affine to each host.\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                strictAffinity:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t              required:\r\n\t\t\t\t              - autoAllocateBlocks\r\n\t\t\t\t              - strictAffinity\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: ipamhandles.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: IPAMHandle\r\n\t\t\t\t      listKind: IPAMHandleList\r\n\t\t\t\t      plural: ipamhandles\r\n\t\t\t\t      singular: ipamhandle\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: IPAMHandleSpec contains the specification for an IPAMHandle\r\n\t\t\t\t                resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                block:\r\n\t\t\t\t                  additionalProperties:\r\n\t\t\t\t                    type: integer\r\n\t\t\t\t                  type: object\r\n\t\t\t\t                deleted:\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                handleID:\r\n\t\t\t\t                  type: string\r\n\t\t\t\t              required:\r\n\t\t\t\t              - block\r\n\t\t\t\t              - handleID\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: ippools.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: IPPool\r\n\t\t\t\t      listKind: IPPoolList\r\n\t\t\t\t      plural: ippools\r\n\t\t\t\t      singular: ippool\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: IPPoolSpec contains the specification for an IPPool resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                blockSize:\r\n\t\t\t\t                  description: The block size to use for IP address assignments from\r\n\t\t\t\t                    this pool. Defaults to 26 for IPv4 and 112 for IPv6.\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t                cidr:\r\n\t\t\t\t                  description: The pool CIDR.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                disabled:\r\n\t\t\t\t                  description: When disabled is true, Calico IPAM will not assign addresses\r\n\t\t\t\t                    from this pool.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                ipip:\r\n\t\t\t\t                  description: 'Deprecated: this field is only used for APIv1 backwards\r\n\t\t\t\t                    compatibility. Setting this field is not allowed, this field is\r\n\t\t\t\t                    for internal use only.'\r\n\t\t\t\t                  properties:\r\n\t\t\t\t                    enabled:\r\n\t\t\t\t                      description: When enabled is true, ipip tunneling will be used\r\n\t\t\t\t                        to deliver packets to destinations within this pool.\r\n\t\t\t\t                      type: boolean\r\n\t\t\t\t                    mode:\r\n\t\t\t\t                      description: The IPIP mode.  This can be one of \"always\" or \"cross-subnet\".  A\r\n\t\t\t\t                        mode of \"always\" will also use IPIP tunneling for routing to\r\n\t\t\t\t                        destination IP addresses within this pool.  A mode of \"cross-subnet\"\r\n\t\t\t\t                        will only use IPIP tunneling when the destination node is on\r\n\t\t\t\t                        a different subnet to the originating node.  The default value\r\n\t\t\t\t                        (if not specified) is \"always\".\r\n\t\t\t\t                      type: string\r\n\t\t\t\t                  type: object\r\n\t\t\t\t                ipipMode:\r\n\t\t\t\t                  description: Contains configuration for IPIP tunneling for this pool.\r\n\t\t\t\t                    If not specified, then this is defaulted to \"Never\" (i.e. IPIP tunneling\r\n\t\t\t\t                    is disabled).\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                nat-outgoing:\r\n\t\t\t\t                  description: 'Deprecated: this field is only used for APIv1 backwards\r\n\t\t\t\t                    compatibility. Setting this field is not allowed, this field is\r\n\t\t\t\t                    for internal use only.'\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                natOutgoing:\r\n\t\t\t\t                  description: When nat-outgoing is true, packets sent from Calico networked\r\n\t\t\t\t                    containers in this pool to destinations outside of this pool will\r\n\t\t\t\t                    be masqueraded.\r\n\t\t\t\t                  type: boolean\r\n\t\t\t\t                nodeSelector:\r\n\t\t\t\t                  description: Allows IPPool to allocate for a specific node by label\r\n\t\t\t\t                    selector.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                vxlanMode:\r\n\t\t\t\t                  description: Contains configuration for VXLAN tunneling for this pool.\r\n\t\t\t\t                    If not specified, then this is defaulted to \"Never\" (i.e. VXLAN\r\n\t\t\t\t                    tunneling is disabled).\r\n\t\t\t\t                  type: string\r\n\t\t\t\t              required:\r\n\t\t\t\t              - cidr\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: kubecontrollersconfigurations.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: KubeControllersConfiguration\r\n\t\t\t\t      listKind: KubeControllersConfigurationList\r\n\t\t\t\t      plural: kubecontrollersconfigurations\r\n\t\t\t\t      singular: kubecontrollersconfiguration\r\n\t\t\t\t    scope: Cluster\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: KubeControllersConfigurationSpec contains the values of the\r\n\t\t\t\t                Kubernetes controllers configuration.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                controllers:\r\n\t\t\t\t                  description: Controllers enables and configures individual Kubernetes\r\n\t\t\t\t                    controllers\r\n\t\t\t\t                  properties:\r\n\t\t\t\t                    namespace:\r\n\t\t\t\t                      description: Namespace enables and configures the namespace controller.\r\n\t\t\t\t                        Enabled by default, set to nil to disable.\r\n\t\t\t\t                      properties:\r\n\t\t\t\t                        reconcilerPeriod:\r\n\t\t\t\t                          description: 'ReconcilerPeriod is the period to perform reconciliation\r\n\t\t\t\t                            with the Calico datastore. [Default: 5m]'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                      type: object\r\n\t\t\t\t                    node:\r\n\t\t\t\t                      description: Node enables and configures the node controller.\r\n\t\t\t\t                        Enabled by default, set to nil to disable.\r\n\t\t\t\t                      properties:\r\n\t\t\t\t                        hostEndpoint:\r\n\t\t\t\t                          description: HostEndpoint controls syncing nodes to host endpoints.\r\n\t\t\t\t                            Disabled by default, set to nil to disable.\r\n\t\t\t\t                          properties:\r\n\t\t\t\t                            autoCreate:\r\n\t\t\t\t                              description: 'AutoCreate enables automatic creation of\r\n\t\t\t\t                                host endpoints for every node. [Default: Disabled]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                          type: object\r\n\t\t\t\t                        leakGracePeriod:\r\n\t\t\t\t                          description: 'LeakGracePeriod is the period used by the controller\r\n\t\t\t\t                            to determine if an IP address has been leaked. Set to 0\r\n\t\t\t\t                            to disable IP garbage collection. [Default: 15m]'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                        reconcilerPeriod:\r\n\t\t\t\t                          description: 'ReconcilerPeriod is the period to perform reconciliation\r\n\t\t\t\t                            with the Calico datastore. [Default: 5m]'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                        syncLabels:\r\n\t\t\t\t                          description: 'SyncLabels controls whether to copy Kubernetes\r\n\t\t\t\t                            node labels to Calico nodes. [Default: Enabled]'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                      type: object\r\n\t\t\t\t                    policy:\r\n\t\t\t\t                      description: Policy enables and configures the policy controller.\r\n\t\t\t\t                        Enabled by default, set to nil to disable.\r\n\t\t\t\t                      properties:\r\n\t\t\t\t                        reconcilerPeriod:\r\n\t\t\t\t                          description: 'ReconcilerPeriod is the period to perform reconciliation\r\n\t\t\t\t                            with the Calico datastore. [Default: 5m]'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                      type: object\r\n\t\t\t\t                    serviceAccount:\r\n\t\t\t\t                      description: ServiceAccount enables and configures the service\r\n\t\t\t\t                        account controller. Enabled by default, set to nil to disable.\r\n\t\t\t\t                      properties:\r\n\t\t\t\t                        reconcilerPeriod:\r\n\t\t\t\t                          description: 'ReconcilerPeriod is the period to perform reconciliation\r\n\t\t\t\t                            with the Calico datastore. [Default: 5m]'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                      type: object\r\n\t\t\t\t                    workloadEndpoint:\r\n\t\t\t\t                      description: WorkloadEndpoint enables and configures the workload\r\n\t\t\t\t                        endpoint controller. Enabled by default, set to nil to disable.\r\n\t\t\t\t                      properties:\r\n\t\t\t\t                        reconcilerPeriod:\r\n\t\t\t\t                          description: 'ReconcilerPeriod is the period to perform reconciliation\r\n\t\t\t\t                            with the Calico datastore. [Default: 5m]'\r\n\t\t\t\t                          type: string\r\n\t\t\t\t                      type: object\r\n\t\t\t\t                  type: object\r\n\t\t\t\t                etcdV3CompactionPeriod:\r\n\t\t\t\t                  description: 'EtcdV3CompactionPeriod is the period between etcdv3\r\n\t\t\t\t                    compaction requests. Set to 0 to disable. [Default: 10m]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                healthChecks:\r\n\t\t\t\t                  description: 'HealthChecks enables or disables support for health\r\n\t\t\t\t                    checks [Default: Enabled]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                logSeverityScreen:\r\n\t\t\t\t                  description: 'LogSeverityScreen is the log severity above which logs\r\n\t\t\t\t                    are sent to the stdout. [Default: Info]'\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                prometheusMetricsPort:\r\n\t\t\t\t                  description: 'PrometheusMetricsPort is the TCP port that the Prometheus\r\n\t\t\t\t                    metrics server should bind to. Set to 0 to disable. [Default: 9094]'\r\n\t\t\t\t                  type: integer\r\n\t\t\t\t              required:\r\n\t\t\t\t              - controllers\r\n\t\t\t\t              type: object\r\n\t\t\t\t            status:\r\n\t\t\t\t              description: KubeControllersConfigurationStatus represents the status\r\n\t\t\t\t                of the configuration. It's useful for admins to be able to see the actual\r\n\t\t\t\t                config that was applied, which can be modified by environment variables\r\n\t\t\t\t                on the kube-controllers process.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                environmentVars:\r\n\t\t\t\t                  additionalProperties:\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  description: EnvironmentVars contains the environment variables on\r\n\t\t\t\t                    the kube-controllers that influenced the RunningConfig.\r\n\t\t\t\t                  type: object\r\n\t\t\t\t                runningConfig:\r\n\t\t\t\t                  description: RunningConfig contains the effective config that is running\r\n\t\t\t\t                    in the kube-controllers pod, after merging the API resource with\r\n\t\t\t\t                    any environment variables.\r\n\t\t\t\t                  properties:\r\n\t\t\t\t                    controllers:\r\n\t\t\t\t                      description: Controllers enables and configures individual Kubernetes\r\n\t\t\t\t                        controllers\r\n\t\t\t\t                      properties:\r\n\t\t\t\t                        namespace:\r\n\t\t\t\t                          description: Namespace enables and configures the namespace\r\n\t\t\t\t                            controller. Enabled by default, set to nil to disable.\r\n\t\t\t\t                          properties:\r\n\t\t\t\t                            reconcilerPeriod:\r\n\t\t\t\t                              description: 'ReconcilerPeriod is the period to perform\r\n\t\t\t\t                                reconciliation with the Calico datastore. [Default:\r\n\t\t\t\t                                5m]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                          type: object\r\n\t\t\t\t                        node:\r\n\t\t\t\t                          description: Node enables and configures the node controller.\r\n\t\t\t\t                            Enabled by default, set to nil to disable.\r\n\t\t\t\t                          properties:\r\n\t\t\t\t                            hostEndpoint:\r\n\t\t\t\t                              description: HostEndpoint controls syncing nodes to host\r\n\t\t\t\t                                endpoints. Disabled by default, set to nil to disable.\r\n\t\t\t\t                              properties:\r\n\t\t\t\t                                autoCreate:\r\n\t\t\t\t                                  description: 'AutoCreate enables automatic creation\r\n\t\t\t\t                                    of host endpoints for every node. [Default: Disabled]'\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                              type: object\r\n\t\t\t\t                            leakGracePeriod:\r\n\t\t\t\t                              description: 'LeakGracePeriod is the period used by the\r\n\t\t\t\t                                controller to determine if an IP address has been leaked.\r\n\t\t\t\t                                Set to 0 to disable IP garbage collection. [Default:\r\n\t\t\t\t                                15m]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            reconcilerPeriod:\r\n\t\t\t\t                              description: 'ReconcilerPeriod is the period to perform\r\n\t\t\t\t                                reconciliation with the Calico datastore. [Default:\r\n\t\t\t\t                                5m]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            syncLabels:\r\n\t\t\t\t                              description: 'SyncLabels controls whether to copy Kubernetes\r\n\t\t\t\t                                node labels to Calico nodes. [Default: Enabled]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                          type: object\r\n\t\t\t\t                        policy:\r\n\t\t\t\t                          description: Policy enables and configures the policy controller.\r\n\t\t\t\t                            Enabled by default, set to nil to disable.\r\n\t\t\t\t                          properties:\r\n\t\t\t\t                            reconcilerPeriod:\r\n\t\t\t\t                              description: 'ReconcilerPeriod is the period to perform\r\n\t\t\t\t                                reconciliation with the Calico datastore. [Default:\r\n\t\t\t\t                                5m]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                          type: object\r\n\t\t\t\t                        serviceAccount:\r\n\t\t\t\t                          description: ServiceAccount enables and configures the service\r\n\t\t\t\t                            account controller. Enabled by default, set to nil to disable.\r\n\t\t\t\t                          properties:\r\n\t\t\t\t                            reconcilerPeriod:\r\n\t\t\t\t                              description: 'ReconcilerPeriod is the period to perform\r\n\t\t\t\t                                reconciliation with the Calico datastore. [Default:\r\n\t\t\t\t                                5m]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                          type: object\r\n\t\t\t\t                        workloadEndpoint:\r\n\t\t\t\t                          description: WorkloadEndpoint enables and configures the workload\r\n\t\t\t\t                            endpoint controller. Enabled by default, set to nil to disable.\r\n\t\t\t\t                          properties:\r\n\t\t\t\t                            reconcilerPeriod:\r\n\t\t\t\t                              description: 'ReconcilerPeriod is the period to perform\r\n\t\t\t\t                                reconciliation with the Calico datastore. [Default:\r\n\t\t\t\t                                5m]'\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                          type: object\r\n\t\t\t\t                      type: object\r\n\t\t\t\t                    etcdV3CompactionPeriod:\r\n\t\t\t\t                      description: 'EtcdV3CompactionPeriod is the period between etcdv3\r\n\t\t\t\t                        compaction requests. Set to 0 to disable. [Default: 10m]'\r\n\t\t\t\t                      type: string\r\n\t\t\t\t                    healthChecks:\r\n\t\t\t\t                      description: 'HealthChecks enables or disables support for health\r\n\t\t\t\t                        checks [Default: Enabled]'\r\n\t\t\t\t                      type: string\r\n\t\t\t\t                    logSeverityScreen:\r\n\t\t\t\t                      description: 'LogSeverityScreen is the log severity above which\r\n\t\t\t\t                        logs are sent to the stdout. [Default: Info]'\r\n\t\t\t\t                      type: string\r\n\t\t\t\t                    prometheusMetricsPort:\r\n\t\t\t\t                      description: 'PrometheusMetricsPort is the TCP port that the Prometheus\r\n\t\t\t\t                        metrics server should bind to. Set to 0 to disable. [Default:\r\n\t\t\t\t                        9094]'\r\n\t\t\t\t                      type: integer\r\n\t\t\t\t                  required:\r\n\t\t\t\t                  - controllers\r\n\t\t\t\t                  type: object\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: networkpolicies.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: NetworkPolicy\r\n\t\t\t\t      listKind: NetworkPolicyList\r\n\t\t\t\t      plural: networkpolicies\r\n\t\t\t\t      singular: networkpolicy\r\n\t\t\t\t    scope: Namespaced\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              properties:\r\n\t\t\t\t                egress:\r\n\t\t\t\t                  description: The ordered set of egress rules.  Each rule contains\r\n\t\t\t\t                    a set of packet match criteria and a corresponding action to apply.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: \"A Rule encapsulates a set of match criteria and an\r\n\t\t\t\t                      action.  Both selector-based security Policy and security Profiles\r\n\t\t\t\t                      reference rules - separated out as a list of rules for both ingress\r\n\t\t\t\t                      and egress packet matching. \\n Each positive match criteria has\r\n\t\t\t\t                      a negated version, prefixed with \\\"Not\\\". All the match criteria\r\n\t\t\t\t                      within a rule must be satisfied for a packet to match. A single\r\n\t\t\t\t                      rule can contain the positive and negative version of a match\r\n\t\t\t\t                      and both must be satisfied for the rule to match.\"\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      action:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      destination:\r\n\t\t\t\t                        description: Destination contains the match criteria that apply\r\n\t\t\t\t                          to destination entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      http:\r\n\t\t\t\t                        description: HTTP contains match criteria that apply to HTTP\r\n\t\t\t\t                          requests.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          methods:\r\n\t\t\t\t                            description: Methods is an optional field that restricts\r\n\t\t\t\t                              the rule to apply only to HTTP requests that use one of\r\n\t\t\t\t                              the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple\r\n\t\t\t\t                              methods are OR'd together.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          paths:\r\n\t\t\t\t                            description: 'Paths is an optional field that restricts\r\n\t\t\t\t                              the rule to apply to HTTP requests that use one of the\r\n\t\t\t\t                              listed HTTP Paths. Multiple paths are OR''d together.\r\n\t\t\t\t                              e.g: - exact: /foo - prefix: /bar NOTE: Each entry may\r\n\t\t\t\t                              ONLY specify either a `exact` or a `prefix` match. The\r\n\t\t\t\t                              validator will check for it.'\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              description: 'HTTPPath specifies an HTTP path to match.\r\n\t\t\t\t                                It may be either of the form: exact: <path>: which matches\r\n\t\t\t\t                                the path exactly or prefix: <path-prefix>: which matches\r\n\t\t\t\t                                the path prefix'\r\n\t\t\t\t                              properties:\r\n\t\t\t\t                                exact:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                prefix:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                              type: object\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      icmp:\r\n\t\t\t\t                        description: ICMP is an optional field that restricts the rule\r\n\t\t\t\t                          to apply to a specific type and code of ICMP traffic.  This\r\n\t\t\t\t                          should only be specified if the Protocol field is set to \"ICMP\"\r\n\t\t\t\t                          or \"ICMPv6\".\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      ipVersion:\r\n\t\t\t\t                        description: IPVersion is an optional field that restricts the\r\n\t\t\t\t                          rule to only match a specific IP version.\r\n\t\t\t\t                        type: integer\r\n\t\t\t\t                      metadata:\r\n\t\t\t\t                        description: Metadata contains additional information for this\r\n\t\t\t\t                          rule\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          annotations:\r\n\t\t\t\t                            additionalProperties:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            description: Annotations is a set of key value pairs that\r\n\t\t\t\t                              give extra information about the rule\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notICMP:\r\n\t\t\t\t                        description: NotICMP is the negated version of the ICMP field.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notProtocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: NotProtocol is the negated version of the Protocol\r\n\t\t\t\t                          field.\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      protocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: \"Protocol is an optional field that restricts the\r\n\t\t\t\t                          rule to only apply to traffic of a specific IP protocol. Required\r\n\t\t\t\t                          if any of the EntityRules contain Ports (because ports only\r\n\t\t\t\t                          apply to certain protocols). \\n Must be one of these string\r\n\t\t\t\t                          values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",\r\n\t\t\t\t                          \\\"UDPLite\\\" or an integer in the range 1-255.\"\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      source:\r\n\t\t\t\t                        description: Source contains the match criteria that apply to\r\n\t\t\t\t                          source entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                    required:\r\n\t\t\t\t                    - action\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                ingress:\r\n\t\t\t\t                  description: The ordered set of ingress rules.  Each rule contains\r\n\t\t\t\t                    a set of packet match criteria and a corresponding action to apply.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: \"A Rule encapsulates a set of match criteria and an\r\n\t\t\t\t                      action.  Both selector-based security Policy and security Profiles\r\n\t\t\t\t                      reference rules - separated out as a list of rules for both ingress\r\n\t\t\t\t                      and egress packet matching. \\n Each positive match criteria has\r\n\t\t\t\t                      a negated version, prefixed with \\\"Not\\\". All the match criteria\r\n\t\t\t\t                      within a rule must be satisfied for a packet to match. A single\r\n\t\t\t\t                      rule can contain the positive and negative version of a match\r\n\t\t\t\t                      and both must be satisfied for the rule to match.\"\r\n\t\t\t\t                    properties:\r\n\t\t\t\t                      action:\r\n\t\t\t\t                        type: string\r\n\t\t\t\t                      destination:\r\n\t\t\t\t                        description: Destination contains the match criteria that apply\r\n\t\t\t\t                          to destination entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      http:\r\n\t\t\t\t                        description: HTTP contains match criteria that apply to HTTP\r\n\t\t\t\t                          requests.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          methods:\r\n\t\t\t\t                            description: Methods is an optional field that restricts\r\n\t\t\t\t                              the rule to apply only to HTTP requests that use one of\r\n\t\t\t\t                              the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple\r\n\t\t\t\t                              methods are OR'd together.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          paths:\r\n\t\t\t\t                            description: 'Paths is an optional field that restricts\r\n\t\t\t\t                              the rule to apply to HTTP requests that use one of the\r\n\t\t\t\t                              listed HTTP Paths. Multiple paths are OR''d together.\r\n\t\t\t\t                              e.g: - exact: /foo - prefix: /bar NOTE: Each entry may\r\n\t\t\t\t                              ONLY specify either a `exact` or a `prefix` match. The\r\n\t\t\t\t                              validator will check for it.'\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              description: 'HTTPPath specifies an HTTP path to match.\r\n\t\t\t\t                                It may be either of the form: exact: <path>: which matches\r\n\t\t\t\t                                the path exactly or prefix: <path-prefix>: which matches\r\n\t\t\t\t                                the path prefix'\r\n\t\t\t\t                              properties:\r\n\t\t\t\t                                exact:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                prefix:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                              type: object\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      icmp:\r\n\t\t\t\t                        description: ICMP is an optional field that restricts the rule\r\n\t\t\t\t                          to apply to a specific type and code of ICMP traffic.  This\r\n\t\t\t\t                          should only be specified if the Protocol field is set to \"ICMP\"\r\n\t\t\t\t                          or \"ICMPv6\".\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      ipVersion:\r\n\t\t\t\t                        description: IPVersion is an optional field that restricts the\r\n\t\t\t\t                          rule to only match a specific IP version.\r\n\t\t\t\t                        type: integer\r\n\t\t\t\t                      metadata:\r\n\t\t\t\t                        description: Metadata contains additional information for this\r\n\t\t\t\t                          rule\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          annotations:\r\n\t\t\t\t                            additionalProperties:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            description: Annotations is a set of key value pairs that\r\n\t\t\t\t                              give extra information about the rule\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notICMP:\r\n\t\t\t\t                        description: NotICMP is the negated version of the ICMP field.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          code:\r\n\t\t\t\t                            description: Match on a specific ICMP code.  If specified,\r\n\t\t\t\t                              the Type value must also be specified. This is a technical\r\n\t\t\t\t                              limitation imposed by the kernel's iptables firewall,\r\n\t\t\t\t                              which Calico uses to enforce the rule.\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                          type:\r\n\t\t\t\t                            description: Match on a specific ICMP type.  For example\r\n\t\t\t\t                              a value of 8 refers to ICMP Echo Request (i.e. pings).\r\n\t\t\t\t                            type: integer\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                      notProtocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: NotProtocol is the negated version of the Protocol\r\n\t\t\t\t                          field.\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      protocol:\r\n\t\t\t\t                        anyOf:\r\n\t\t\t\t                        - type: integer\r\n\t\t\t\t                        - type: string\r\n\t\t\t\t                        description: \"Protocol is an optional field that restricts the\r\n\t\t\t\t                          rule to only apply to traffic of a specific IP protocol. Required\r\n\t\t\t\t                          if any of the EntityRules contain Ports (because ports only\r\n\t\t\t\t                          apply to certain protocols). \\n Must be one of these string\r\n\t\t\t\t                          values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\",\r\n\t\t\t\t                          \\\"UDPLite\\\" or an integer in the range 1-255.\"\r\n\t\t\t\t                        pattern: ^.*\r\n\t\t\t\t                        x-kubernetes-int-or-string: true\r\n\t\t\t\t                      source:\r\n\t\t\t\t                        description: Source contains the match criteria that apply to\r\n\t\t\t\t                          source entity.\r\n\t\t\t\t                        properties:\r\n\t\t\t\t                          namespaceSelector:\r\n\t\t\t\t                            description: \"NamespaceSelector is an optional field that\r\n\t\t\t\t                              contains a selector expression. Only traffic that originates\r\n\t\t\t\t                              from (or terminates at) endpoints within the selected\r\n\t\t\t\t                              namespaces will be matched. When both NamespaceSelector\r\n\t\t\t\t                              and another selector are defined on the same rule, then\r\n\t\t\t\t                              only workload endpoints that are matched by both selectors\r\n\t\t\t\t                              will be selected by the rule. \\n For NetworkPolicy, an\r\n\t\t\t\t                              empty NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only workload endpoints in the same namespace\r\n\t\t\t\t                              as the NetworkPolicy. \\n For NetworkPolicy, `global()`\r\n\t\t\t\t                              NamespaceSelector implies that the Selector is limited\r\n\t\t\t\t                              to selecting only GlobalNetworkSet or HostEndpoint. \\n\r\n\t\t\t\t                              For GlobalNetworkPolicy, an empty NamespaceSelector implies\r\n\t\t\t\t                              the Selector applies to workload endpoints across all\r\n\t\t\t\t                              namespaces.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          nets:\r\n\t\t\t\t                            description: Nets is an optional field that restricts the\r\n\t\t\t\t                              rule to only apply to traffic that originates from (or\r\n\t\t\t\t                              terminates at) IP addresses in any of the given subnets.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notNets:\r\n\t\t\t\t                            description: NotNets is the negated version of the Nets\r\n\t\t\t\t                              field.\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              type: string\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notPorts:\r\n\t\t\t\t                            description: NotPorts is the negated version of the Ports\r\n\t\t\t\t                              field. Since only some protocols have ports, if any ports\r\n\t\t\t\t                              are specified it requires the Protocol match in the Rule\r\n\t\t\t\t                              to be set to \"TCP\" or \"UDP\".\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          notSelector:\r\n\t\t\t\t                            description: NotSelector is the negated version of the Selector\r\n\t\t\t\t                              field.  See Selector field for subtleties with negated\r\n\t\t\t\t                              selectors.\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          ports:\r\n\t\t\t\t                            description: \"Ports is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that has a source (destination)\r\n\t\t\t\t                              port that matches one of these ranges/values. This value\r\n\t\t\t\t                              is a list of integers or strings that represent ranges\r\n\t\t\t\t                              of ports. \\n Since only some protocols have ports, if\r\n\t\t\t\t                              any ports are specified it requires the Protocol match\r\n\t\t\t\t                              in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"\r\n\t\t\t\t                            items:\r\n\t\t\t\t                              anyOf:\r\n\t\t\t\t                              - type: integer\r\n\t\t\t\t                              - type: string\r\n\t\t\t\t                              pattern: ^.*\r\n\t\t\t\t                              x-kubernetes-int-or-string: true\r\n\t\t\t\t                            type: array\r\n\t\t\t\t                          selector:\r\n\t\t\t\t                            description: \"Selector is an optional field that contains\r\n\t\t\t\t                              a selector expression (see Policy for sample syntax).\r\n\t\t\t\t                              \\ Only traffic that originates from (terminates at) endpoints\r\n\t\t\t\t                              matching the selector will be matched. \\n Note that: in\r\n\t\t\t\t                              addition to the negated version of the Selector (see NotSelector\r\n\t\t\t\t                              below), the selector expression syntax itself supports\r\n\t\t\t\t                              negation.  The two types of negation are subtly different.\r\n\t\t\t\t                              One negates the set of matched endpoints, the other negates\r\n\t\t\t\t                              the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches\r\n\t\t\t\t                              packets that are from other Calico-controlled \\tendpoints\r\n\t\t\t\t                              that do not have the label \\\"my_label\\\". \\n \\tNotSelector\r\n\t\t\t\t                              = \\\"has(my_label)\\\" matches packets that are not from\r\n\t\t\t\t                              Calico-controlled \\tendpoints that do have the label \\\"my_label\\\".\r\n\t\t\t\t                              \\n The effect is that the latter will accept packets from\r\n\t\t\t\t                              non-Calico sources whereas the former is limited to packets\r\n\t\t\t\t                              from Calico-controlled endpoints.\"\r\n\t\t\t\t                            type: string\r\n\t\t\t\t                          serviceAccounts:\r\n\t\t\t\t                            description: ServiceAccounts is an optional field that restricts\r\n\t\t\t\t                              the rule to only apply to traffic that originates from\r\n\t\t\t\t                              (or terminates at) a pod running as a matching service\r\n\t\t\t\t                              account.\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              names:\r\n\t\t\t\t                                description: Names is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account whose name is in the list.\r\n\t\t\t\t                                items:\r\n\t\t\t\t                                  type: string\r\n\t\t\t\t                                type: array\r\n\t\t\t\t                              selector:\r\n\t\t\t\t                                description: Selector is an optional field that restricts\r\n\t\t\t\t                                  the rule to only apply to traffic that originates\r\n\t\t\t\t                                  from (or terminates at) a pod running as a service\r\n\t\t\t\t                                  account that matches the given label selector. If\r\n\t\t\t\t                                  both Names and Selector are specified then they are\r\n\t\t\t\t                                  AND'ed.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                          services:\r\n\t\t\t\t                            description: \"Services is an optional field that contains\r\n\t\t\t\t                              options for matching Kubernetes Services. If specified,\r\n\t\t\t\t                              only traffic that originates from or terminates at endpoints\r\n\t\t\t\t                              within the selected service(s) will be matched, and only\r\n\t\t\t\t                              to/from each endpoint's port. \\n Services cannot be specified\r\n\t\t\t\t                              on the same rule as Selector, NotSelector, NamespaceSelector,\r\n\t\t\t\t                              Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n\r\n\t\t\t\t                              Only valid on egress rules.\"\r\n\t\t\t\t                            properties:\r\n\t\t\t\t                              name:\r\n\t\t\t\t                                description: Name specifies the name of a Kubernetes\r\n\t\t\t\t                                  Service to match.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                              namespace:\r\n\t\t\t\t                                description: Namespace specifies the namespace of the\r\n\t\t\t\t                                  given Service. If left empty, the rule will match\r\n\t\t\t\t                                  within this policy's namespace.\r\n\t\t\t\t                                type: string\r\n\t\t\t\t                            type: object\r\n\t\t\t\t                        type: object\r\n\t\t\t\t                    required:\r\n\t\t\t\t                    - action\r\n\t\t\t\t                    type: object\r\n\t\t\t\t                  type: array\r\n\t\t\t\t                order:\r\n\t\t\t\t                  description: Order is an optional field that specifies the order in\r\n\t\t\t\t                    which the policy is applied. Policies with higher \"order\" are applied\r\n\t\t\t\t                    after those with lower order.  If the order is omitted, it may be\r\n\t\t\t\t                    considered to be \"infinite\" - i.e. the policy will be applied last.  Policies\r\n\t\t\t\t                    with identical order will be applied in alphanumerical order based\r\n\t\t\t\t                    on the Policy \"Name\".\r\n\t\t\t\t                  type: number\r\n\t\t\t\t                selector:\r\n\t\t\t\t                  description: \"The selector is an expression used to pick pick out\r\n\t\t\t\t                    the endpoints that the policy should be applied to. \\n Selector\r\n\t\t\t\t                    expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"\r\n\t\t\t\t                    \\ ->  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"\r\n\t\t\t\t                    \\  ->  not equal; also matches if label is not present \\tlabel in\r\n\t\t\t\t                    { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  ->  true if the value of label X is\r\n\t\t\t\t                    one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\",\r\n\t\t\t\t                    ... }  ->  true if the value of label X is not one of \\\"a\\\", \\\"b\\\",\r\n\t\t\t\t                    \\\"c\\\" \\thas(label_name)  -> True if that label is present \\t! expr\r\n\t\t\t\t                    -> negation of expr \\texpr && expr  -> Short-circuit and \\texpr\r\n\t\t\t\t                    || expr  -> Short-circuit or \\t( expr ) -> parens for grouping \\tall()\r\n\t\t\t\t                    or the empty selector -> matches all endpoints. \\n Label names are\r\n\t\t\t\t                    allowed to contain alphanumerics, -, _ and /. String literals are\r\n\t\t\t\t                    more permissive but they do not support escape characters. \\n Examples\r\n\t\t\t\t                    (with made-up labels): \\n \\ttype == \\\"webserver\\\" && deployment\r\n\t\t\t\t                    == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment !=\r\n\t\t\t\t                    \\\"dev\\\" \\t! has(label_name)\"\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                serviceAccountSelector:\r\n\t\t\t\t                  description: ServiceAccountSelector is an optional field for an expression\r\n\t\t\t\t                    used to select a pod based on service accounts.\r\n\t\t\t\t                  type: string\r\n\t\t\t\t                types:\r\n\t\t\t\t                  description: \"Types indicates whether this policy applies to ingress,\r\n\t\t\t\t                    or to egress, or to both.  When not explicitly specified (and so\r\n\t\t\t\t                    the value on creation is empty or nil), Calico defaults Types according\r\n\t\t\t\t                    to what Ingress and Egress are present in the policy.  The default\r\n\t\t\t\t                    is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including\r\n\t\t\t\t                    the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress\r\n\t\t\t\t                    ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress,\r\n\t\t\t\t                    PolicyTypeEgress ], if there are both Ingress and Egress rules.\r\n\t\t\t\t                    \\n When the policy is read back again, Types will always be one\r\n\t\t\t\t                    of these values, never empty or nil.\"\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    description: PolicyType enumerates the possible values of the PolicySpec\r\n\t\t\t\t                      Types field.\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  type: array\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: apiextensions.k8s.io/v1\r\n\t\t\t\t  kind: CustomResourceDefinition\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: networksets.crd.projectcalico.org\r\n\t\t\t\t  spec:\r\n\t\t\t\t    group: crd.projectcalico.org\r\n\t\t\t\t    names:\r\n\t\t\t\t      kind: NetworkSet\r\n\t\t\t\t      listKind: NetworkSetList\r\n\t\t\t\t      plural: networksets\r\n\t\t\t\t      singular: networkset\r\n\t\t\t\t    scope: Namespaced\r\n\t\t\t\t    versions:\r\n\t\t\t\t    - name: v1\r\n\t\t\t\t      schema:\r\n\t\t\t\t        openAPIV3Schema:\r\n\t\t\t\t          description: NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\r\n\t\t\t\t          properties:\r\n\t\t\t\t            apiVersion:\r\n\t\t\t\t              description: 'APIVersion defines the versioned schema of this representation\r\n\t\t\t\t                of an object. Servers should convert recognized schemas to the latest\r\n\t\t\t\t                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            kind:\r\n\t\t\t\t              description: 'Kind is a string value representing the REST resource this\r\n\t\t\t\t                object represents. Servers may infer this from the endpoint the client\r\n\t\t\t\t                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\r\n\t\t\t\t              type: string\r\n\t\t\t\t            metadata:\r\n\t\t\t\t              type: object\r\n\t\t\t\t            spec:\r\n\t\t\t\t              description: NetworkSetSpec contains the specification for a NetworkSet\r\n\t\t\t\t                resource.\r\n\t\t\t\t              properties:\r\n\t\t\t\t                nets:\r\n\t\t\t\t                  description: The list of IP networks that belong to this set.\r\n\t\t\t\t                  items:\r\n\t\t\t\t                    type: string\r\n\t\t\t\t                  type: array\r\n\t\t\t\t              type: object\r\n\t\t\t\t          type: object\r\n\t\t\t\t      served: true\r\n\t\t\t\t      storage: true\r\n\t\t\t\t  status:\r\n\t\t\t\t    acceptedNames:\r\n\t\t\t\t      kind: \"\"\r\n\t\t\t\t      plural: \"\"\r\n\t\t\t\t    conditions: []\r\n\t\t\t\t    storedVersions: []\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/calico-kube-controllers-rbac.yaml\r\n\t\t\t\t  \r\n\t\t\t\t  # Include a clusterrole for the kube-controllers component,\r\n\t\t\t\t  # and bind it to the calico-kube-controllers serviceaccount.\r\n\t\t\t\t  kind: ClusterRole\r\n\t\t\t\t  apiVersion: rbac.authorization.k8s.io/v1\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-kube-controllers\r\n\t\t\t\t  rules:\r\n\t\t\t\t    # Nodes are watched to monitor for deletions.\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - nodes\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - watch\r\n\t\t\t\t        - list\r\n\t\t\t\t        - get\r\n\t\t\t\t    # Pods are watched to check for existence as part of IPAM controller.\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - pods\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t        - list\r\n\t\t\t\t        - watch\r\n\t\t\t\t    # IPAM resources are manipulated when nodes are deleted.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - ippools\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - list\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - blockaffinities\r\n\t\t\t\t        - ipamblocks\r\n\t\t\t\t        - ipamhandles\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t        - list\r\n\t\t\t\t        - create\r\n\t\t\t\t        - update\r\n\t\t\t\t        - delete\r\n\t\t\t\t        - watch\r\n\t\t\t\t    # kube-controllers manages hostendpoints.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - hostendpoints\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t        - list\r\n\t\t\t\t        - create\r\n\t\t\t\t        - update\r\n\t\t\t\t        - delete\r\n\t\t\t\t    # Needs access to update clusterinformations.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - clusterinformations\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t        - create\r\n\t\t\t\t        - update\r\n\t\t\t\t    # KubeControllersConfiguration is where it gets its config\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - kubecontrollersconfigurations\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        # read its own config\r\n\t\t\t\t        - get\r\n\t\t\t\t        # create a default if none exists\r\n\t\t\t\t        - create\r\n\t\t\t\t        # update status\r\n\t\t\t\t        - update\r\n\t\t\t\t        # watch for changes\r\n\t\t\t\t        - watch\r\n\t\t\t\t  ---\r\n\t\t\t\t  kind: ClusterRoleBinding\r\n\t\t\t\t  apiVersion: rbac.authorization.k8s.io/v1\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-kube-controllers\r\n\t\t\t\t  roleRef:\r\n\t\t\t\t    apiGroup: rbac.authorization.k8s.io\r\n\t\t\t\t    kind: ClusterRole\r\n\t\t\t\t    name: calico-kube-controllers\r\n\t\t\t\t  subjects:\r\n\t\t\t\t  - kind: ServiceAccount\r\n\t\t\t\t    name: calico-kube-controllers\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t  ---\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/calico-node-rbac.yaml\r\n\t\t\t\t  # Include a clusterrole for the calico-node DaemonSet,\r\n\t\t\t\t  # and bind it to the calico-node serviceaccount.\r\n\t\t\t\t  kind: ClusterRole\r\n\t\t\t\t  apiVersion: rbac.authorization.k8s.io/v1\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-node\r\n\t\t\t\t  rules:\r\n\t\t\t\t    # The CNI plugin needs to get pods, nodes, and namespaces.\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - pods\r\n\t\t\t\t        - nodes\r\n\t\t\t\t        - namespaces\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t    # EndpointSlices are used for Service-based network policy rule\r\n\t\t\t\t    # enforcement.\r\n\t\t\t\t    - apiGroups: [\"discovery.k8s.io\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - endpointslices\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - watch \r\n\t\t\t\t        - list\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - endpoints\r\n\t\t\t\t        - services\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        # Used to discover service IPs for advertisement.\r\n\t\t\t\t        - watch\r\n\t\t\t\t        - list\r\n\t\t\t\t        # Used to discover Typhas.\r\n\t\t\t\t        - get\r\n\t\t\t\t    # Pod CIDR auto-detection on kubeadm needs access to config maps.\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - configmaps\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - nodes/status\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        # Needed for clearing NodeNetworkUnavailable flag.\r\n\t\t\t\t        - patch\r\n\t\t\t\t        # Calico stores some configuration information in node annotations.\r\n\t\t\t\t        - update\r\n\t\t\t\t    # Watch for changes to Kubernetes NetworkPolicies.\r\n\t\t\t\t    - apiGroups: [\"networking.k8s.io\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - networkpolicies\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - watch\r\n\t\t\t\t        - list\r\n\t\t\t\t    # Used by Calico for policy information.\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - pods\r\n\t\t\t\t        - namespaces\r\n\t\t\t\t        - serviceaccounts\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - list\r\n\t\t\t\t        - watch\r\n\t\t\t\t    # The CNI plugin patches pods/status.\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - pods/status\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - patch\r\n\t\t\t\t    # Calico monitors various CRDs for config.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - globalfelixconfigs\r\n\t\t\t\t        - felixconfigurations\r\n\t\t\t\t        - bgppeers\r\n\t\t\t\t        - globalbgpconfigs\r\n\t\t\t\t        - bgpconfigurations\r\n\t\t\t\t        - ippools\r\n\t\t\t\t        - ipamblocks\r\n\t\t\t\t        - globalnetworkpolicies\r\n\t\t\t\t        - globalnetworksets\r\n\t\t\t\t        - networkpolicies\r\n\t\t\t\t        - networksets\r\n\t\t\t\t        - clusterinformations\r\n\t\t\t\t        - hostendpoints\r\n\t\t\t\t        - blockaffinities\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t        - list\r\n\t\t\t\t        - watch\r\n\t\t\t\t    # Calico must create and update some CRDs on startup.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - ippools\r\n\t\t\t\t        - felixconfigurations\r\n\t\t\t\t        - clusterinformations\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - create\r\n\t\t\t\t        - update\r\n\t\t\t\t    # Calico stores some configuration information on the node.\r\n\t\t\t\t    - apiGroups: [\"\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - nodes\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t        - list\r\n\t\t\t\t        - watch\r\n\t\t\t\t    # These permissions are only required for upgrade from v2.6, and can\r\n\t\t\t\t    # be removed after upgrade or on fresh installations.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - bgpconfigurations\r\n\t\t\t\t        - bgppeers\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - create\r\n\t\t\t\t        - update\r\n\t\t\t\t    # These permissions are required for Calico CNI to perform IPAM allocations.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - blockaffinities\r\n\t\t\t\t        - ipamblocks\r\n\t\t\t\t        - ipamhandles\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t        - list\r\n\t\t\t\t        - create\r\n\t\t\t\t        - update\r\n\t\t\t\t        - delete\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - ipamconfigs\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t    # Block affinities must also be watchable by confd for route aggregation.\r\n\t\t\t\t    - apiGroups: [\"crd.projectcalico.org\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - blockaffinities\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - watch\r\n\t\t\t\t    # The Calico IPAM migration needs to get daemonsets. These permissions can be\r\n\t\t\t\t    # removed if not upgrading from an installation using host-local IPAM.\r\n\t\t\t\t    - apiGroups: [\"apps\"]\r\n\t\t\t\t      resources:\r\n\t\t\t\t        - daemonsets\r\n\t\t\t\t      verbs:\r\n\t\t\t\t        - get\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  apiVersion: rbac.authorization.k8s.io/v1\r\n\t\t\t\t  kind: ClusterRoleBinding\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-node\r\n\t\t\t\t  roleRef:\r\n\t\t\t\t    apiGroup: rbac.authorization.k8s.io\r\n\t\t\t\t    kind: ClusterRole\r\n\t\t\t\t    name: calico-node\r\n\t\t\t\t  subjects:\r\n\t\t\t\t  - kind: ServiceAccount\r\n\t\t\t\t    name: calico-node\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/calico-node.yaml\r\n\t\t\t\t  # This manifest installs the calico-node container, as well\r\n\t\t\t\t  # as the CNI plugins and network config on\r\n\t\t\t\t  # each master and worker node in a Kubernetes cluster.\r\n\t\t\t\t  kind: DaemonSet\r\n\t\t\t\t  apiVersion: apps/v1\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-node\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t    labels:\r\n\t\t\t\t      k8s-app: calico-node\r\n\t\t\t\t  spec:\r\n\t\t\t\t    selector:\r\n\t\t\t\t      matchLabels:\r\n\t\t\t\t        k8s-app: calico-node\r\n\t\t\t\t    updateStrategy:\r\n\t\t\t\t      type: RollingUpdate\r\n\t\t\t\t      rollingUpdate:\r\n\t\t\t\t        maxUnavailable: 1\r\n\t\t\t\t    template:\r\n\t\t\t\t      metadata:\r\n\t\t\t\t        labels:\r\n\t\t\t\t          k8s-app: calico-node\r\n\t\t\t\t      spec:\r\n\t\t\t\t        nodeSelector:\r\n\t\t\t\t          kubernetes.io/os: linux\r\n\t\t\t\t        hostNetwork: true\r\n\t\t\t\t        tolerations:\r\n\t\t\t\t          # Make sure calico-node gets scheduled on all nodes.\r\n\t\t\t\t          - effect: NoSchedule\r\n\t\t\t\t            operator: Exists\r\n\t\t\t\t          # Mark the pod as a critical add-on for rescheduling.\r\n\t\t\t\t          - key: CriticalAddonsOnly\r\n\t\t\t\t            operator: Exists\r\n\t\t\t\t          - effect: NoExecute\r\n\t\t\t\t            operator: Exists\r\n\t\t\t\t        serviceAccountName: calico-node\r\n\t\t\t\t        # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a \"force\r\n\t\t\t\t        # deletion\": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.\r\n\t\t\t\t        terminationGracePeriodSeconds: 0\r\n\t\t\t\t        priorityClassName: system-node-critical\r\n\t\t\t\t        initContainers:\r\n\t\t\t\t          # This container performs upgrade from host-local IPAM to calico-ipam.\r\n\t\t\t\t          # It can be deleted if this is a fresh installation, or if you have already\r\n\t\t\t\t          # upgraded to use calico-ipam.\r\n\t\t\t\t          - name: upgrade-ipam\r\n\t\t\t\t            image: docker.io/calico/cni:v3.20.5\r\n\t\t\t\t            command: [\"/opt/cni/bin/calico-ipam\", \"-upgrade\"]\r\n\t\t\t\t            envFrom:\r\n\t\t\t\t            - configMapRef:\r\n\t\t\t\t                # Allow KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT to be overridden for eBPF mode.\r\n\t\t\t\t                name: kubernetes-services-endpoint\r\n\t\t\t\t                optional: true\r\n\t\t\t\t            env:\r\n\t\t\t\t              - name: KUBERNETES_NODE_NAME\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  fieldRef:\r\n\t\t\t\t                    fieldPath: spec.nodeName\r\n\t\t\t\t              - name: CALICO_NETWORKING_BACKEND\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  configMapKeyRef:\r\n\t\t\t\t                    name: calico-config\r\n\t\t\t\t                    key: calico_backend\r\n\t\t\t\t            volumeMounts:\r\n\t\t\t\t              - mountPath: /var/lib/cni/networks\r\n\t\t\t\t                name: host-local-net-dir\r\n\t\t\t\t              - mountPath: /host/opt/cni/bin\r\n\t\t\t\t                name: cni-bin-dir\r\n\t\t\t\t            securityContext:\r\n\t\t\t\t              privileged: true\r\n\t\t\t\t          # This container installs the CNI binaries\r\n\t\t\t\t          # and CNI network config file on each node.\r\n\t\t\t\t          - name: install-cni\r\n\t\t\t\t            image: docker.io/calico/cni:v3.20.5\r\n\t\t\t\t            command: [\"/opt/cni/bin/install\"]\r\n\t\t\t\t            envFrom:\r\n\t\t\t\t            - configMapRef:\r\n\t\t\t\t                # Allow KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT to be overridden for eBPF mode.\r\n\t\t\t\t                name: kubernetes-services-endpoint\r\n\t\t\t\t                optional: true\r\n\t\t\t\t            env:\r\n\t\t\t\t              # Name of the CNI config file to create.\r\n\t\t\t\t              - name: CNI_CONF_NAME\r\n\t\t\t\t                value: \"10-calico.conflist\"\r\n\t\t\t\t              # The CNI network config to install on each node.\r\n\t\t\t\t              - name: CNI_NETWORK_CONFIG\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  configMapKeyRef:\r\n\t\t\t\t                    name: calico-config\r\n\t\t\t\t                    key: cni_network_config\r\n\t\t\t\t              # Set the hostname based on the k8s node name.\r\n\t\t\t\t              - name: KUBERNETES_NODE_NAME\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  fieldRef:\r\n\t\t\t\t                    fieldPath: spec.nodeName\r\n\t\t\t\t              # CNI MTU Config variable\r\n\t\t\t\t              - name: CNI_MTU\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  configMapKeyRef:\r\n\t\t\t\t                    name: calico-config\r\n\t\t\t\t                    key: veth_mtu\r\n\t\t\t\t              # Prevents the container from sleeping forever.\r\n\t\t\t\t              - name: SLEEP\r\n\t\t\t\t                value: \"false\"\r\n\t\t\t\t            volumeMounts:\r\n\t\t\t\t              - mountPath: /host/opt/cni/bin\r\n\t\t\t\t                name: cni-bin-dir\r\n\t\t\t\t              - mountPath: /host/etc/cni/net.d\r\n\t\t\t\t                name: cni-net-dir\r\n\t\t\t\t            securityContext:\r\n\t\t\t\t              privileged: true\r\n\t\t\t\t          # Adds a Flex Volume Driver that creates a per-pod Unix Domain Socket to allow Dikastes\r\n\t\t\t\t          # to communicate with Felix over the Policy Sync API.\r\n\t\t\t\t          - name: flexvol-driver\r\n\t\t\t\t            image: docker.io/calico/pod2daemon-flexvol:v3.20.5\r\n\t\t\t\t            volumeMounts:\r\n\t\t\t\t            - name: flexvol-driver-host\r\n\t\t\t\t              mountPath: /host/driver\r\n\t\t\t\t            securityContext:\r\n\t\t\t\t              privileged: true\r\n\t\t\t\t        containers:\r\n\t\t\t\t          # Runs calico-node container on each Kubernetes node. This\r\n\t\t\t\t          # container programs network policy and routes on each\r\n\t\t\t\t          # host.\r\n\t\t\t\t          - name: calico-node\r\n\t\t\t\t            image: docker.io/calico/node:v3.20.5\r\n\t\t\t\t            envFrom:\r\n\t\t\t\t            - configMapRef:\r\n\t\t\t\t                # Allow KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT to be overridden for eBPF mode.\r\n\t\t\t\t                name: kubernetes-services-endpoint\r\n\t\t\t\t                optional: true\r\n\t\t\t\t            env:\r\n\t\t\t\t              # Use Kubernetes API as the backing datastore.\r\n\t\t\t\t              - name: DATASTORE_TYPE\r\n\t\t\t\t                value: \"kubernetes\"\r\n\t\t\t\t              # Wait for the datastore.\r\n\t\t\t\t              - name: WAIT_FOR_DATASTORE\r\n\t\t\t\t                value: \"true\"\r\n\t\t\t\t              # Set based on the k8s node name.\r\n\t\t\t\t              - name: NODENAME\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  fieldRef:\r\n\t\t\t\t                    fieldPath: spec.nodeName\r\n\t\t\t\t              # Choose the backend to use.\r\n\t\t\t\t              - name: CALICO_NETWORKING_BACKEND\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  configMapKeyRef:\r\n\t\t\t\t                    name: calico-config\r\n\t\t\t\t                    key: calico_backend\r\n\t\t\t\t              # Cluster type to identify the deployment type\r\n\t\t\t\t              - name: CLUSTER_TYPE\r\n\t\t\t\t                value: \"k8s,bgp\"\r\n\t\t\t\t              # Auto-detect the BGP IP address.\r\n\t\t\t\t              - name: IP\r\n\t\t\t\t                value: \"autodetect\"\r\n\t\t\t\t              # Enable IPIP\r\n\t\t\t\t              - name: CALICO_IPV4POOL_IPIP\r\n\t\t\t\t                value: \"Always\"\r\n\t\t\t\t              # Enable or Disable VXLAN on the default IP pool.\r\n\t\t\t\t              - name: CALICO_IPV4POOL_VXLAN\r\n\t\t\t\t                value: \"Never\"\r\n\t\t\t\t              # Set MTU for tunnel device used if ipip is enabled\r\n\t\t\t\t              - name: FELIX_IPINIPMTU\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  configMapKeyRef:\r\n\t\t\t\t                    name: calico-config\r\n\t\t\t\t                    key: veth_mtu\r\n\t\t\t\t              # Set MTU for the VXLAN tunnel device.\r\n\t\t\t\t              - name: FELIX_VXLANMTU\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  configMapKeyRef:\r\n\t\t\t\t                    name: calico-config\r\n\t\t\t\t                    key: veth_mtu\r\n\t\t\t\t              # Set MTU for the Wireguard tunnel device.\r\n\t\t\t\t              - name: FELIX_WIREGUARDMTU\r\n\t\t\t\t                valueFrom:\r\n\t\t\t\t                  configMapKeyRef:\r\n\t\t\t\t                    name: calico-config\r\n\t\t\t\t                    key: veth_mtu\r\n\t\t\t\t              # The default IPv4 pool to create on startup if none exists. Pod IPs will be\r\n\t\t\t\t              # chosen from this range. Changing this value after installation will have\r\n\t\t\t\t              # no effect. This should fall within `--cluster-cidr`.\r\n\t\t\t\t              # - name: CALICO_IPV4POOL_CIDR\r\n\t\t\t\t              #   value: \"192.168.0.0/16\"\r\n\t\t\t\t              # Disable file logging so `kubectl logs` works.\r\n\t\t\t\t              - name: CALICO_DISABLE_FILE_LOGGING\r\n\t\t\t\t                value: \"true\"\r\n\t\t\t\t              # Set Felix endpoint to host default action to ACCEPT.\r\n\t\t\t\t              - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\r\n\t\t\t\t                value: \"ACCEPT\"\r\n\t\t\t\t              # Disable IPv6 on Kubernetes.\r\n\t\t\t\t              - name: FELIX_IPV6SUPPORT\r\n\t\t\t\t                value: \"false\"\r\n\t\t\t\t              - name: FELIX_HEALTHENABLED\r\n\t\t\t\t                value: \"true\"\r\n\t\t\t\t            securityContext:\r\n\t\t\t\t              privileged: true\r\n\t\t\t\t            resources:\r\n\t\t\t\t              requests:\r\n\t\t\t\t                cpu: 250m\r\n\t\t\t\t            lifecycle:\r\n\t\t\t\t              preStop:\r\n\t\t\t\t                exec:\r\n\t\t\t\t                  command:\r\n\t\t\t\t                  - /bin/calico-node\r\n\t\t\t\t                  - -shutdown\r\n\t\t\t\t            livenessProbe:\r\n\t\t\t\t              exec:\r\n\t\t\t\t                command:\r\n\t\t\t\t                - /bin/calico-node\r\n\t\t\t\t                - -felix-live\r\n\t\t\t\t                - -bird-live\r\n\t\t\t\t              periodSeconds: 10\r\n\t\t\t\t              initialDelaySeconds: 10\r\n\t\t\t\t              failureThreshold: 6\r\n\t\t\t\t              timeoutSeconds: 10\r\n\t\t\t\t            readinessProbe:\r\n\t\t\t\t              exec:\r\n\t\t\t\t                command:\r\n\t\t\t\t                - /bin/calico-node\r\n\t\t\t\t                - -felix-ready\r\n\t\t\t\t                - -bird-ready\r\n\t\t\t\t              periodSeconds: 10\r\n\t\t\t\t              timeoutSeconds: 10\r\n\t\t\t\t            volumeMounts:\r\n\t\t\t\t              # For maintaining CNI plugin API credentials.\r\n\t\t\t\t              - mountPath: /host/etc/cni/net.d\r\n\t\t\t\t                name: cni-net-dir\r\n\t\t\t\t                readOnly: false\r\n\t\t\t\t              - mountPath: /lib/modules\r\n\t\t\t\t                name: lib-modules\r\n\t\t\t\t                readOnly: true\r\n\t\t\t\t              - mountPath: /run/xtables.lock\r\n\t\t\t\t                name: xtables-lock\r\n\t\t\t\t                readOnly: false\r\n\t\t\t\t              - mountPath: /var/run/calico\r\n\t\t\t\t                name: var-run-calico\r\n\t\t\t\t                readOnly: false\r\n\t\t\t\t              - mountPath: /var/lib/calico\r\n\t\t\t\t                name: var-lib-calico\r\n\t\t\t\t                readOnly: false\r\n\t\t\t\t              - name: policysync\r\n\t\t\t\t                mountPath: /var/run/nodeagent\r\n\t\t\t\t              # For eBPF mode, we need to be able to mount the BPF filesystem at /sys/fs/bpf so we mount in the\r\n\t\t\t\t              # parent directory.\r\n\t\t\t\t              - name: sysfs\r\n\t\t\t\t                mountPath: /sys/fs/\r\n\t\t\t\t                # Bidirectional means that, if we mount the BPF filesystem at /sys/fs/bpf it will propagate to the host.\r\n\t\t\t\t                # If the host is known to mount that filesystem already then Bidirectional can be omitted.\r\n\t\t\t\t                mountPropagation: Bidirectional\r\n\t\t\t\t              - name: cni-log-dir\r\n\t\t\t\t                mountPath: /var/log/calico/cni\r\n\t\t\t\t                readOnly: true\r\n\t\t\t\t        volumes:\r\n\t\t\t\t          # Used by calico-node.\r\n\t\t\t\t          - name: lib-modules\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /lib/modules\r\n\t\t\t\t          - name: var-run-calico\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /var/run/calico\r\n\t\t\t\t          - name: var-lib-calico\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /var/lib/calico\r\n\t\t\t\t          - name: xtables-lock\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /run/xtables.lock\r\n\t\t\t\t              type: FileOrCreate\r\n\t\t\t\t          - name: sysfs\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /sys/fs/\r\n\t\t\t\t              type: DirectoryOrCreate\r\n\t\t\t\t          # Used to install CNI.\r\n\t\t\t\t          - name: cni-bin-dir\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /opt/cni/bin\r\n\t\t\t\t          - name: cni-net-dir\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /etc/cni/net.d\r\n\t\t\t\t          # Used to access CNI logs.\r\n\t\t\t\t          - name: cni-log-dir\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /var/log/calico/cni\r\n\t\t\t\t          # Mount in the directory for host-local IPAM allocations. This is\r\n\t\t\t\t          # used when upgrading from host-local to calico-ipam, and can be removed\r\n\t\t\t\t          # if not using the upgrade-ipam init container.\r\n\t\t\t\t          - name: host-local-net-dir\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              path: /var/lib/cni/networks\r\n\t\t\t\t          # Used to create per-pod Unix Domain Sockets\r\n\t\t\t\t          - name: policysync\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              type: DirectoryOrCreate\r\n\t\t\t\t              path: /var/run/nodeagent\r\n\t\t\t\t          # Used to install Flex Volume Driver\r\n\t\t\t\t          - name: flexvol-driver-host\r\n\t\t\t\t            hostPath:\r\n\t\t\t\t              type: DirectoryOrCreate\r\n\t\t\t\t              path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds\r\n\t\t\t\t  ---\r\n\t\t\t\t  \r\n\t\t\t\t  apiVersion: v1\r\n\t\t\t\t  kind: ServiceAccount\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-node\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/calico-kube-controllers.yaml\r\n\t\t\t\t  # See https://github.com/projectcalico/kube-controllers\r\n\t\t\t\t  apiVersion: apps/v1\r\n\t\t\t\t  kind: Deployment\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-kube-controllers\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t    labels:\r\n\t\t\t\t      k8s-app: calico-kube-controllers\r\n\t\t\t\t  spec:\r\n\t\t\t\t    # The controllers can only have a single active instance.\r\n\t\t\t\t    replicas: 1\r\n\t\t\t\t    selector:\r\n\t\t\t\t      matchLabels:\r\n\t\t\t\t        k8s-app: calico-kube-controllers\r\n\t\t\t\t    strategy:\r\n\t\t\t\t      type: Recreate\r\n\t\t\t\t    template:\r\n\t\t\t\t      metadata:\r\n\t\t\t\t        name: calico-kube-controllers\r\n\t\t\t\t        namespace: kube-system\r\n\t\t\t\t        labels:\r\n\t\t\t\t          k8s-app: calico-kube-controllers\r\n\t\t\t\t      spec:\r\n\t\t\t\t        nodeSelector:\r\n\t\t\t\t          kubernetes.io/os: linux\r\n\t\t\t\t        tolerations:\r\n\t\t\t\t          # Mark the pod as a critical add-on for rescheduling.\r\n\t\t\t\t          - key: CriticalAddonsOnly\r\n\t\t\t\t            operator: Exists\r\n\t\t\t\t          - key: node-role.kubernetes.io/master\r\n\t\t\t\t            effect: NoSchedule\r\n\t\t\t\t        serviceAccountName: calico-kube-controllers\r\n\t\t\t\t        priorityClassName: system-cluster-critical\r\n\t\t\t\t        containers:\r\n\t\t\t\t          - name: calico-kube-controllers\r\n\t\t\t\t            image: docker.io/calico/kube-controllers:v3.20.5\r\n\t\t\t\t            env:\r\n\t\t\t\t              # Choose which controllers to run.\r\n\t\t\t\t              - name: ENABLED_CONTROLLERS\r\n\t\t\t\t                value: node\r\n\t\t\t\t              - name: DATASTORE_TYPE\r\n\t\t\t\t                value: kubernetes\r\n\t\t\t\t            livenessProbe:\r\n\t\t\t\t              exec:\r\n\t\t\t\t                command:\r\n\t\t\t\t                - /usr/bin/check-status\r\n\t\t\t\t                - -l\r\n\t\t\t\t              periodSeconds: 10\r\n\t\t\t\t              initialDelaySeconds: 10\r\n\t\t\t\t              failureThreshold: 6\r\n\t\t\t\t              timeoutSeconds: 10\r\n\t\t\t\t            readinessProbe:\r\n\t\t\t\t              exec:\r\n\t\t\t\t                command:\r\n\t\t\t\t                - /usr/bin/check-status\r\n\t\t\t\t                - -r\r\n\t\t\t\t              periodSeconds: 10\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  \r\n\t\t\t\t  apiVersion: v1\r\n\t\t\t\t  kind: ServiceAccount\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-kube-controllers\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  \r\n\t\t\t\t  # This manifest creates a Pod Disruption Budget for Controller to allow K8s Cluster Autoscaler to evict\r\n\t\t\t\t  \r\n\t\t\t\t  apiVersion: policy/v1beta1\r\n\t\t\t\t  kind: PodDisruptionBudget\r\n\t\t\t\t  metadata:\r\n\t\t\t\t    name: calico-kube-controllers\r\n\t\t\t\t    namespace: kube-system\r\n\t\t\t\t    labels:\r\n\t\t\t\t      k8s-app: calico-kube-controllers\r\n\t\t\t\t  spec:\r\n\t\t\t\t    maxUnavailable: 1\r\n\t\t\t\t    selector:\r\n\t\t\t\t      matchLabels:\r\n\t\t\t\t        k8s-app: calico-kube-controllers\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/calico-etcd-secrets.yaml\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/calico-typha.yaml\r\n\t\t\t\t  \r\n\t\t\t\t  ---\r\n\t\t\t\t  # Source: calico/templates/configure-canal.yaml\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\t\t\t\t  ```\r\n\t\t- 自动搭建\r\n\t\t\t- [自动搭建脚本](https://github.com/lework/kainstall)\r\n-
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/Kubernetes.md b/pages/Kubernetes.md
--- a/pages/Kubernetes.md	(revision 093ffe2f6eac44a3faa72b252e864ccae0d466d4)
+++ b/pages/Kubernetes.md	(date 1657815701331)
@@ -4316,4 +4316,14 @@
 				  ```
 		- 自动搭建
 			- [自动搭建脚本](https://github.com/lework/kainstall)
+			- ```sh
+			  bash -c "$(curl -sSL https://cdn.jsdelivr.net/gh/lework/kainstall@master/kainstall-centos.sh)"  \
+			    - init \
+			    --master 192.168.0.111 \
+			    --worker 192.168.0.112,192.168.77.113,192.168.77.114,192.168.77.115   \
+			    --user root \
+			    --password lzxLZX0406 \
+			    --port 22 \
+			    --version 1.20.6
+			  ```
 -
\ No newline at end of file
